shadow$provide.module$node_modules$d3_geo$src$clip$antimeridian=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$d3_geo$src$clip$index"));var _math=require("module$node_modules$d3_geo$src$math");require=(0,global.default)(function(){return!0},function(stream){var lambda0=NaN,phi0$jscomp$0=NaN,sign0=NaN,clean;return{lineStart:function(){stream.lineStart();
clean=1},point:function(lambda1$jscomp$0,phi1){var sign1=0<lambda1$jscomp$0?_math.pi:-_math.pi,delta=(0,_math.abs)(lambda1$jscomp$0-lambda0);if((0,_math.abs)(delta-_math.pi)<_math.epsilon)stream.point(lambda0,phi0$jscomp$0=0<(phi0$jscomp$0+phi1)/2?_math.halfPi:-_math.halfPi),stream.point(sign0,phi0$jscomp$0),stream.lineEnd(),stream.lineStart(),stream.point(sign1,phi0$jscomp$0),stream.point(lambda1$jscomp$0,phi0$jscomp$0),clean=0;else if(sign0!==sign1&&delta>=_math.pi){(0,_math.abs)(lambda0-sign0)<
_math.epsilon&&(lambda0-=sign0*_math.epsilon);(0,_math.abs)(lambda1$jscomp$0-sign1)<_math.epsilon&&(lambda1$jscomp$0-=sign1*_math.epsilon);delta=lambda0;var phi0=phi0$jscomp$0,lambda1=lambda1$jscomp$0,cosPhi0,cosPhi1,sinLambda0Lambda1=(0,_math.sin)(delta-lambda1);phi0$jscomp$0=(0,_math.abs)(sinLambda0Lambda1)>_math.epsilon?(0,_math.atan)(((0,_math.sin)(phi0)*(cosPhi1=(0,_math.cos)(phi1))*(0,_math.sin)(lambda1)-(0,_math.sin)(phi1)*(cosPhi0=(0,_math.cos)(phi0))*(0,_math.sin)(delta))/(cosPhi0*cosPhi1*
sinLambda0Lambda1)):(phi0+phi1)/2;stream.point(sign0,phi0$jscomp$0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0$jscomp$0);clean=0}stream.point(lambda0=lambda1$jscomp$0,phi0$jscomp$0=phi1);sign0=sign1},lineEnd:function(){stream.lineEnd();lambda0=phi0$jscomp$0=NaN},clean:function(){return 2-clean}}},function(from,to,direction,stream){null==from?(direction*=_math.halfPi,stream.point(-_math.pi,direction),stream.point(0,direction),stream.point(_math.pi,direction),stream.point(_math.pi,
0),stream.point(_math.pi,-direction),stream.point(0,-direction),stream.point(-_math.pi,-direction),stream.point(-_math.pi,0),stream.point(-_math.pi,direction)):(0,_math.abs)(from[0]-to[0])>_math.epsilon?(from=from[0]<to[0]?_math.pi:-_math.pi,direction=direction*from/2,stream.point(-from,direction),stream.point(0,direction),stream.point(from,direction)):stream.point(to[0],to[1])},[-_math.pi,-_math.halfPi]);exports.default=require}
//# sourceMappingURL=module$node_modules$d3_geo$src$clip$antimeridian.js.map
