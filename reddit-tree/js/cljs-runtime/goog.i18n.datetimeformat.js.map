{
"version":3,
"file":"goog.i18n.datetimeformat.js",
"lineCount":311,
"mappings":"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",
"sources":["goog/i18n/datetimeformat.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Functions for dealing with date/time formatting.\n */\n\n\n/**\n * Namespace for i18n date/time formatting functions\n */\ngoog.provide('goog.i18n.DateTimeFormat');\ngoog.provide('goog.i18n.DateTimeFormat.Format');\n\ngoog.require('goog.asserts');\ngoog.require('goog.date');\ngoog.require('goog.i18n.DateTimeSymbols');\ngoog.require('goog.i18n.TimeZone');\ngoog.require('goog.string');\ngoog.requireType('goog.i18n.DateTimeSymbolsType');\n\n\n/**\n * Datetime formatting functions following the pattern specification as defined\n * in JDK, ICU and CLDR, with minor modification for typical usage in JS.\n * Pattern specification:\n * {@link http://userguide.icu-project.org/formatparse/datetime}\n * <pre>\n * Symbol   Meaning                    Presentation       Example\n * ------   -------                    ------------       -------\n * G#       era designator             (Text)             AD\n * y#       year                       (Number)           1996\n * Y        year (week of year)        (Number)           1997\n * u*       extended year              (Number)           4601\n * Q#       quarter                    (Text)             Q3 & 3rd quarter\n * M        month in year              (Text & Number)    July & 07\n * L        month in year (standalone) (Text & Number)    July & 07\n * d        day in month               (Number)           10\n * h        hour in am/pm (1~12)       (Number)           12\n * H        hour in day (0~23)         (Number)           0\n * m        minute in hour             (Number)           30\n * s        second in minute           (Number)           55\n * S        fractional second          (Number)           978\n * E#       day of week                (Text)             Tue & Tuesday\n * e*       day of week (local 1~7)    (Number)           2\n * c#       day of week (standalone)   (Text & Number)    2 & Tues & Tuesday & T\n * D*       day in year                (Number)           189\n * F*       day of week in month       (Number)           2 (2nd Wed in July)\n * w        week in year               (Number)           27\n * W*       week in month              (Number)           2\n * a        am/pm marker               (Text)             PM\n * k        hour in day (1~24)         (Number)           24\n * K        hour in am/pm (0~11)       (Number)           0\n * z        time zone                  (Text)             Pacific Standard Time\n * Z#       time zone (RFC 822)        (Number)           -0800\n * v#       time zone (generic)        (Text)             America/Los_Angeles\n * V#       time zone                  (Text)             Los Angeles Time\n * g*       Julian day                 (Number)           2451334\n * A*       milliseconds in day        (Number)           69540000\n * '        escape for text            (Delimiter)        'Date='\n * ''       single quote               (Literal)          'o''clock'\n *\n * Item marked with '*' are not supported yet.\n * Item marked with '#' works different than java\n *\n * The count of pattern letters determine the format.\n * (Text): 4 or more, use full form, <4, use short or abbreviated form if it\n * exists. (e.g., \"EEEE\" produces \"Monday\", \"EEE\" produces \"Mon\")\n *\n * (Number): the minimum number of digits. Shorter numbers are zero-padded to\n * this amount (e.g. if \"m\" produces \"6\", \"mm\" produces \"06\"). Year is handled\n * specially; that is, if the count of 'y' is 2, the Year will be truncated to\n * 2 digits. (e.g., if \"yyyy\" produces \"1997\", \"yy\" produces \"97\".) Unlike other\n * fields, fractional seconds are padded on the right with zero.\n *\n * :(Text & Number) 3 or over, use text, otherwise use number. (e.g., \"M\"\n * produces \"1\", \"MM\" produces \"01\", \"MMM\" produces \"Jan\", and \"MMMM\" produces\n * \"January\".)\n *\n * Any characters in the pattern that are not in the ranges of ['a'..'z'] and\n * ['A'..'Z'] will be treated as quoted text. For instance, characters like ':',\n * '.', ' ', '#' and '@' will appear in the resulting time text even they are\n * not embraced within single quotes.\n * </pre>\n */\n\n/**\n * Construct a DateTimeFormat object based on current locale.\n * @constructor\n * @param {string|number} pattern pattern specification or pattern type.\n * @param {!Object=} opt_dateTimeSymbols Optional symbols to use for this\n *     instance rather than the global symbols.\n *     You can use some of the predefined SHORT / MEDIUM / LONG / FULL patterns,\n *     or the common patterns defined in goog.i18n.DateTimePatterns.\n *     Examples:\n *     <code><pre>\n *       var fmt = new goog.i18n.DateTimeFormat(\n *           goog.i18n.DateTimeFormat.Format.FULL_DATE);\n *       var fmt = new goog.i18n.DateTimeFormat(\n *           goog.i18n.DateTimePatterns.MONTH_DAY_YEAR_MEDIUM);\n *     </pre></code>\n *\n * {@see goog.i18n.DateTimeFormat.Format}\n * {@see goog.i18n.DateTimePatterns}\n * @final\n */\ngoog.i18n.DateTimeFormat = function(pattern, opt_dateTimeSymbols) {\n  'use strict';\n  goog.asserts.assert(pattern !== undefined, 'Pattern must be defined');\n  goog.asserts.assert(\n      opt_dateTimeSymbols !== undefined ||\n          goog.i18n.DateTimeSymbols !== undefined,\n      'goog.i18n.DateTimeSymbols or explicit symbols must be defined');\n\n  this.patternParts_ = [];\n\n  /**\n   * Data structure that with all the locale info needed for date formatting.\n   * (day/month names, most common patterns, rules for week-end, etc.)\n   * @private {!goog.i18n.DateTimeSymbolsType}\n   */\n  this.dateTimeSymbols_ = /** @type {!goog.i18n.DateTimeSymbolsType} */ (\n      opt_dateTimeSymbols || goog.i18n.DateTimeSymbols);\n  if (typeof pattern == 'number') {\n    this.applyStandardPattern_(pattern);\n  } else {\n    this.applyPattern_(pattern);\n  }\n};\n\n\n/**\n * Enum to identify predefined Date/Time format pattern.\n * @enum {number}\n */\ngoog.i18n.DateTimeFormat.Format = {\n  FULL_DATE: 0,\n  LONG_DATE: 1,\n  MEDIUM_DATE: 2,\n  SHORT_DATE: 3,\n  FULL_TIME: 4,\n  LONG_TIME: 5,\n  MEDIUM_TIME: 6,\n  SHORT_TIME: 7,\n  FULL_DATETIME: 8,\n  LONG_DATETIME: 9,\n  MEDIUM_DATETIME: 10,\n  SHORT_DATETIME: 11\n};\n\n\n/**\n * regular expression pattern for parsing pattern string\n * @type {Array<RegExp>}\n * @private\n */\ngoog.i18n.DateTimeFormat.TOKENS_ = [\n  // quote string\n  /^\\'(?:[^\\']|\\'\\')*(\\'|$)/,\n  // pattern chars\n  /^(?:G+|y+|Y+|M+|k+|S+|E+|a+|h+|K+|H+|c+|L+|Q+|d+|m+|s+|v+|V+|w+|z+|Z+)/,\n  // and all the other chars\n  /^[^\\'GyYMkSEahKHcLQdmsvVwzZ]+/  // and all the other chars\n];\n\n\n/**\n * These are token types, corresponding to above token definitions.\n * @enum {number}\n * @private\n */\ngoog.i18n.DateTimeFormat.PartTypes_ = {\n  QUOTED_STRING: 0,\n  FIELD: 1,\n  LITERAL: 2\n};\n\n\n/**\n * @param {!goog.date.DateLike} date\n * @return {number}\n * @private\n */\ngoog.i18n.DateTimeFormat.getHours_ = function(date) {\n  'use strict';\n  return date.getHours ? date.getHours() : 0;\n};\n\n\n/**\n * Apply specified pattern to this formatter object.\n * @param {string} pattern String specifying how the date should be formatted.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.applyPattern_ = function(pattern) {\n  'use strict';\n  if (goog.i18n.DateTimeFormat.removeRlmInPatterns_) {\n    // Remove RLM unicode control character from pattern.\n    pattern = pattern.replace(/\\u200f/g, '');\n  }\n  // lex the pattern, once for all uses\n  while (pattern) {\n    var previousPattern = pattern;\n    for (var i = 0; i < goog.i18n.DateTimeFormat.TOKENS_.length; ++i) {\n      var m = pattern.match(goog.i18n.DateTimeFormat.TOKENS_[i]);\n      if (m) {\n        var part = m[0];\n        pattern = pattern.substring(part.length);\n        if (i == goog.i18n.DateTimeFormat.PartTypes_.QUOTED_STRING) {\n          if (part == '\\'\\'') {\n            part = '\\'';  // '' -> '\n          } else {\n            part = part.substring(\n                1,\n                m[1] == '\\'' ? part.length - 1 : part.length);  // strip quotes\n            part = part.replace(/\\'\\'/g, '\\'');\n          }\n        }\n        this.patternParts_.push({text: part, type: i});\n        break;\n      }\n    }\n    if (previousPattern === pattern) {\n      // On every iteration, part of the pattern string must be consumed.\n      throw new Error('Malformed pattern part: ' + pattern);\n    }\n  }\n};\n\n\n/**\n * Format the given date object according to preset pattern and current locale.\n * @param {goog.date.DateLike} date The Date object that is being formatted.\n * @param {goog.i18n.TimeZone=} opt_timeZone optional, if specified, time\n *    related fields will be formatted based on its setting. When this field\n *    is not specified, \"undefined\" will be pass around and those function\n *    that really need time zone service will create a default one.\n * @return {string} Formatted string for the given date.\n *    Throws an error if the date is null or if one tries to format a date-only\n *    object (for instance goog.date.Date) using a pattern with time fields.\n */\ngoog.i18n.DateTimeFormat.prototype.format = function(date, opt_timeZone) {\n  'use strict';\n  if (!date) throw new Error('The date to format must be non-null.');\n\n  // We don't want to write code to calculate each date field because we\n  // want to maximize performance and minimize code size.\n  // JavaScript only provide API to render local time.\n  // Suppose target date is: 16:00 GMT-0400\n  // OS local time is:       12:00 GMT-0800\n  // We want to create a Local Date Object : 16:00 GMT-0800, and fix the\n  // time zone display ourselves.\n  // Thing get a little bit tricky when daylight time transition happens. For\n  // example, suppose OS timeZone is America/Los_Angeles, it is impossible to\n  // represent \"2006/4/2 02:30\" even for those timeZone that has no transition\n  // at this time. Because 2:00 to 3:00 on that day does not exist in\n  // America/Los_Angeles time zone. To avoid calculating date field through\n  // our own code, we uses 3 Date object instead, one for \"Year, month, day\",\n  // one for time within that day, and one for timeZone object since it need\n  // the real time to figure out actual time zone offset.\n  var diff = opt_timeZone ?\n      (date.getTimezoneOffset() - opt_timeZone.getOffset(date)) * 60000 :\n      0;\n  var dateForDate = diff ? new Date(date.getTime() + diff) : date;\n  var dateForTime = dateForDate;\n  // When the time manipulation applied above spans the DST on/off hour, this\n  // could alter the time incorrectly by adding or subtracting an additional\n  // hour.\n  // We can mitigate this by:\n  // - Adding the difference in timezone offset to the date. This ensures that\n  //   the dateForDate is still within the right day if the extra DST hour\n  //   affected the date.\n  // - Move the time one day forward if we applied a timezone offset backwards,\n  //   or vice versa. This trick ensures that the time is in the same offset\n  //   as the original date, so we remove the additional hour added or\n  //   subtracted by the DST switch.\n  if (opt_timeZone &&\n      dateForDate.getTimezoneOffset() != date.getTimezoneOffset()) {\n    var dstDiff =\n        (dateForDate.getTimezoneOffset() - date.getTimezoneOffset()) * 60000;\n    dateForDate = new Date(dateForDate.getTime() + dstDiff);\n\n    diff += diff > 0 ? -goog.date.MS_PER_DAY : goog.date.MS_PER_DAY;\n    dateForTime = new Date(date.getTime() + diff);\n  }\n\n  var out = [];\n  for (var i = 0; i < this.patternParts_.length; ++i) {\n    var text = this.patternParts_[i].text;\n    if (goog.i18n.DateTimeFormat.PartTypes_.FIELD ==\n        this.patternParts_[i].type) {\n      out.push(this.formatField_(\n          text, date, dateForDate, dateForTime, opt_timeZone));\n    } else {\n      out.push(text);\n    }\n  }\n  return out.join('');\n};\n\n\n/**\n * Apply a predefined pattern as identified by formatType, which is stored in\n * locale specific repository.\n * @param {number} formatType A number that identified the predefined pattern.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.applyStandardPattern_ = function(\n    formatType) {\n  'use strict';\n  var pattern;\n  if (formatType < 4) {\n    pattern = this.dateTimeSymbols_.DATEFORMATS[formatType];\n  } else if (formatType < 8) {\n    pattern = this.dateTimeSymbols_.TIMEFORMATS[formatType - 4];\n  } else if (formatType < 12) {\n    pattern = this.dateTimeSymbols_.DATETIMEFORMATS[formatType - 8];\n    pattern = pattern.replace(\n        '{1}', this.dateTimeSymbols_.DATEFORMATS[formatType - 8]);\n    pattern = pattern.replace(\n        '{0}', this.dateTimeSymbols_.TIMEFORMATS[formatType - 8]);\n  } else {\n    this.applyStandardPattern_(goog.i18n.DateTimeFormat.Format.MEDIUM_DATETIME);\n    return;\n  }\n  this.applyPattern_(pattern);\n};\n\n\n/**\n * Localizes a string potentially containing numbers, replacing ASCII digits\n * with native digits if specified so by the locale. Leaves other characters.\n * @param {string} input the string to be localized, using ASCII digits.\n * @return {string} localized string, potentially using native digits.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.localizeNumbers_ = function(input) {\n  'use strict';\n  return goog.i18n.DateTimeFormat.localizeNumbers(input, this.dateTimeSymbols_);\n};\n\n\n/**\n * If the usage of Ascii digits should be enforced regardless of locale.\n * @type {boolean}\n * @private\n */\ngoog.i18n.DateTimeFormat.enforceAsciiDigits_ = false;\n\n\n/**\n * If RLM unicode characters should be removed from date/time patterns (useful\n * when enforcing ASCII digits for Arabic). See `#setEnforceAsciiDigits`.\n * @type {boolean}\n * @private\n */\ngoog.i18n.DateTimeFormat.removeRlmInPatterns_ = false;\n\n\n/**\n * Sets if the usage of Ascii digits in formatting should be enforced in\n * formatted date/time even for locales where native digits are indicated.\n * Also sets whether to remove RLM unicode control characters when using\n * standard enumerated patterns (they exist e.g. in standard d/M/y for Arabic).\n * Production code should call this once before any `DateTimeFormat`\n * object is instantiated.\n * Caveats:\n *    * Enforcing ASCII digits affects all future formatting by new or existing\n * `DateTimeFormat` objects.\n *    * Removal of RLM characters only applies to `DateTimeFormat` objects\n * instantiated after this call.\n * @param {boolean} enforceAsciiDigits Whether Ascii digits should be enforced.\n */\ngoog.i18n.DateTimeFormat.setEnforceAsciiDigits = function(enforceAsciiDigits) {\n  'use strict';\n  goog.i18n.DateTimeFormat.enforceAsciiDigits_ = enforceAsciiDigits;\n\n  // Also setting removal of RLM chracters when forcing ASCII digits since it's\n  // the right thing to do for Arabic standard patterns. One could add an\n  // optional argument here or to the `DateTimeFormat` constructor to\n  // enable an alternative behavior.\n  goog.i18n.DateTimeFormat.removeRlmInPatterns_ = enforceAsciiDigits;\n};\n\n\n/**\n * @return {boolean} Whether enforcing ASCII digits for all locales. See\n *     `#setEnforceAsciiDigits` for more details.\n */\ngoog.i18n.DateTimeFormat.isEnforceAsciiDigits = function() {\n  'use strict';\n  return goog.i18n.DateTimeFormat.enforceAsciiDigits_;\n};\n\n\n/**\n * Localizes a string potentially containing numbers, replacing ASCII digits\n * with native digits if specified so by the locale. Leaves other characters.\n * @param {number|string} input the string to be localized, using ASCII digits.\n * @param {!Object=} opt_dateTimeSymbols Optional symbols to use rather than\n *     the global symbols.\n * @return {string} localized string, potentially using native digits.\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\n */\ngoog.i18n.DateTimeFormat.localizeNumbers = function(\n    input, opt_dateTimeSymbols) {\n  'use strict';\n  input = String(input);\n  var dateTimeSymbols = opt_dateTimeSymbols || goog.i18n.DateTimeSymbols;\n  if (dateTimeSymbols.ZERODIGIT === undefined ||\n      goog.i18n.DateTimeFormat.enforceAsciiDigits_) {\n    return input;\n  }\n\n  var parts = [];\n  for (var i = 0; i < input.length; i++) {\n    var c = input.charCodeAt(i);\n    parts.push(\n        (0x30 <= c && c <= 0x39) ?  // '0' <= c <= '9'\n            String.fromCharCode(dateTimeSymbols.ZERODIGIT + c - 0x30) :\n            input.charAt(i));\n  }\n  return parts.join('');\n};\n\n\n/**\n * Formats Era field according to pattern specified.\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatEra_ = function(count, date) {\n  'use strict';\n  var value = date.getFullYear() > 0 ? 1 : 0;\n  return count >= 4 ? this.dateTimeSymbols_.ERANAMES[value] :\n                      this.dateTimeSymbols_.ERAS[value];\n};\n\n\n/**\n * Formats Year field according to pattern specified\n *   JavaScript Date object seems incapable handling 1BC and\n *   year before. It can show you year 0 which does not exists.\n *   following we just keep consistent with javascript's\n *   toString method. But keep in mind those things should be\n *   unsupported.\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatYear_ = function(count, date) {\n  'use strict';\n  var value = date.getFullYear();\n  if (value < 0) {\n    value = -value;\n  }\n  if (count == 2) {\n    // See comment about special casing 'yy' at the start of the file, this\n    // matches ICU and CLDR behaviour. See also:\n    // http://icu-project.org/apiref/icu4j/com/ibm/icu/text/SimpleDateFormat.html\n    // http://www.unicode.org/reports/tr35/tr35-dates.html\n    value = value % 100;\n  }\n  return this.localizeNumbers_(goog.string.padNumber(value, count));\n};\n\n\n/**\n * Formats Year (Week of Year) field according to pattern specified\n *   JavaScript Date object seems incapable handling 1BC and\n *   year before. It can show you year 0 which does not exists.\n *   following we just keep consistent with javascript's\n *   toString method. But keep in mind those things should be\n *   unsupported.\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatYearOfWeek_ = function(count, date) {\n  'use strict';\n  var value = goog.date.getYearOfWeek(\n      date.getFullYear(), date.getMonth(), date.getDate(),\n      this.dateTimeSymbols_.FIRSTWEEKCUTOFFDAY,\n      this.dateTimeSymbols_.FIRSTDAYOFWEEK);\n\n  if (value < 0) {\n    value = -value;\n  }\n  if (count == 2) {\n    // See comment about special casing 'yy' at the start of the file, this\n    // matches ICU and CLDR behaviour. See also:\n    // http://icu-project.org/apiref/icu4j/com/ibm/icu/text/SimpleDateFormat.html\n    // http://www.unicode.org/reports/tr35/tr35-dates.html\n    value = value % 100;\n  }\n  return this.localizeNumbers_(goog.string.padNumber(value, count));\n};\n\n\n/**\n * Formats Month field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatMonth_ = function(count, date) {\n  'use strict';\n  var value = date.getMonth();\n  switch (count) {\n    case 5:\n      return this.dateTimeSymbols_.NARROWMONTHS[value];\n    case 4:\n      return this.dateTimeSymbols_.MONTHS[value];\n    case 3:\n      return this.dateTimeSymbols_.SHORTMONTHS[value];\n    default:\n      return this.localizeNumbers_(goog.string.padNumber(value + 1, count));\n  }\n};\n\n\n/**\n * Validates is the goog.date.DateLike object to format has a time.\n * DateLike means Date|goog.date.Date, and goog.date.DateTime inherits\n * from goog.date.Date. But goog.date.Date does not have time related\n * members (getHours, getMinutes, getSeconds).\n * Formatting can be done, if there are no time placeholders in the pattern.\n *\n * @param {!goog.date.DateLike} date the object to validate.\n * @private\n */\ngoog.i18n.DateTimeFormat.validateDateHasTime_ = function(date) {\n  'use strict';\n  if (date.getHours && date.getSeconds && date.getMinutes) return;\n  // if (date instanceof Date || date instanceof goog.date.DateTime)\n  throw new Error(\n      'The date to format has no time (probably a goog.date.Date). ' +\n      'Use Date or goog.date.DateTime, or use a pattern without time fields.');\n};\n\n\n/**\n * Formats (1..24) Hours field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats. This controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.format24Hours_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  var hours = goog.i18n.DateTimeFormat.getHours_(date) || 24;\n  return this.localizeNumbers_(goog.string.padNumber(hours, count));\n};\n\n\n/**\n * Formats Fractional seconds field according to pattern\n * specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n *\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatFractionalSeconds_ = function(\n    count, date) {\n  'use strict';\n  // Fractional seconds left-justify, append 0 for precision beyond 3\n  var value = date.getMilliseconds() / 1000;\n  return this.localizeNumbers_(\n      value.toFixed(Math.min(3, count)).substr(2) +\n      (count > 3 ? goog.string.padNumber(0, count - 3) : ''));\n};\n\n\n/**\n * Formats Day of week field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatDayOfWeek_ = function(count, date) {\n  'use strict';\n  var value = date.getDay();\n  return count >= 4 ? this.dateTimeSymbols_.WEEKDAYS[value] :\n                      this.dateTimeSymbols_.SHORTWEEKDAYS[value];\n};\n\n\n/**\n * Formats Am/Pm field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatAmPm_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  var hours = goog.i18n.DateTimeFormat.getHours_(date);\n  return this.dateTimeSymbols_.AMPMS[hours >= 12 && hours < 24 ? 1 : 0];\n};\n\n\n/**\n * Formats (1..12) Hours field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.format1To12Hours_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  var hours = goog.i18n.DateTimeFormat.getHours_(date) % 12 || 12;\n  return this.localizeNumbers_(goog.string.padNumber(hours, count));\n};\n\n\n/**\n * Formats (0..11) Hours field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.format0To11Hours_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  var hours = goog.i18n.DateTimeFormat.getHours_(date) % 12;\n  return this.localizeNumbers_(goog.string.padNumber(hours, count));\n};\n\n\n/**\n * Formats (0..23) Hours field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.format0To23Hours_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  var hours = goog.i18n.DateTimeFormat.getHours_(date);\n  return this.localizeNumbers_(goog.string.padNumber(hours, count));\n};\n\n\n/**\n * Formats Standalone weekday field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatStandaloneDay_ = function(\n    count, date) {\n  'use strict';\n  var value = date.getDay();\n  switch (count) {\n    case 5:\n      return this.dateTimeSymbols_.STANDALONENARROWWEEKDAYS[value];\n    case 4:\n      return this.dateTimeSymbols_.STANDALONEWEEKDAYS[value];\n    case 3:\n      return this.dateTimeSymbols_.STANDALONESHORTWEEKDAYS[value];\n    default:\n      return this.localizeNumbers_(goog.string.padNumber(value, 1));\n  }\n};\n\n\n/**\n * Formats Standalone Month field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatStandaloneMonth_ = function(\n    count, date) {\n  'use strict';\n  var value = date.getMonth();\n  switch (count) {\n    case 5:\n      return this.dateTimeSymbols_.STANDALONENARROWMONTHS[value];\n    case 4:\n      return this.dateTimeSymbols_.STANDALONEMONTHS[value];\n    case 3:\n      return this.dateTimeSymbols_.STANDALONESHORTMONTHS[value];\n    default:\n      return this.localizeNumbers_(goog.string.padNumber(value + 1, count));\n  }\n};\n\n\n/**\n * Formats Quarter field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatQuarter_ = function(count, date) {\n  'use strict';\n  var value = Math.floor(date.getMonth() / 3);\n  return count < 4 ? this.dateTimeSymbols_.SHORTQUARTERS[value] :\n                     this.dateTimeSymbols_.QUARTERS[value];\n};\n\n\n/**\n * Formats Date field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatDate_ = function(count, date) {\n  'use strict';\n  return this.localizeNumbers_(goog.string.padNumber(date.getDate(), count));\n};\n\n\n/**\n * Formats Minutes field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatMinutes_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  return this.localizeNumbers_(goog.string.padNumber(\n      /** @type {!goog.date.DateTime} */ (date).getMinutes(), count));\n};\n\n\n/**\n * Formats Seconds field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatSeconds_ = function(count, date) {\n  'use strict';\n  goog.i18n.DateTimeFormat.validateDateHasTime_(date);\n  return this.localizeNumbers_(goog.string.padNumber(\n      /** @type {!goog.date.DateTime} */ (date).getSeconds(), count));\n};\n\n\n/**\n * Formats the week of year field according to pattern specified\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatWeekOfYear_ = function(count, date) {\n  'use strict';\n  var weekNum = goog.date.getWeekNumber(\n      date.getFullYear(), date.getMonth(), date.getDate(),\n      this.dateTimeSymbols_.FIRSTWEEKCUTOFFDAY,\n      this.dateTimeSymbols_.FIRSTDAYOFWEEK);\n\n  return this.localizeNumbers_(goog.string.padNumber(weekNum, count));\n};\n\n\n/**\n * Formats TimeZone field following RFC\n *\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date It holds the date object to be formatted.\n * @param {goog.i18n.TimeZone=} opt_timeZone This holds current time zone info.\n * @return {string} Formatted string that represent this field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatTimeZoneRFC_ = function(\n    count, date, opt_timeZone) {\n  'use strict';\n  opt_timeZone = opt_timeZone ||\n      goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());\n\n  // RFC 822 formats should be kept in ASCII, but localized GMT formats may need\n  // to use native digits.\n  return count < 4 ? opt_timeZone.getRFCTimeZoneString(date) :\n                     this.localizeNumbers_(opt_timeZone.getGMTString(date));\n};\n\n\n/**\n * Generate GMT timeZone string for given date\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date Whose value being evaluated.\n * @param {goog.i18n.TimeZone=} opt_timeZone This holds current time zone info.\n * @return {string} GMT timeZone string.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatTimeZone_ = function(\n    count, date, opt_timeZone) {\n  'use strict';\n  opt_timeZone = opt_timeZone ||\n      goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());\n  return count < 4 ? opt_timeZone.getShortName(date) :\n                     opt_timeZone.getLongName(date);\n};\n\n\n/**\n * Generate GMT timeZone string for given date\n * @param {!goog.date.DateLike} date Whose value being evaluated.\n * @param {goog.i18n.TimeZone=} opt_timeZone This holds current time zone info.\n * @return {string} GMT timeZone string.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatTimeZoneId_ = function(\n    date, opt_timeZone) {\n  'use strict';\n  opt_timeZone = opt_timeZone ||\n      goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());\n  return opt_timeZone.getTimeZoneId();\n};\n\n\n/**\n * Generate localized, location dependent time zone id\n * @param {number} count Number of time pattern char repeats, it controls\n *     how a field should be formatted.\n * @param {!goog.date.DateLike} date Whose value being evaluated.\n * @param {goog.i18n.TimeZone=} opt_timeZone This holds current time zone info.\n * @return {string} GMT timeZone string.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatTimeZoneLocationId_ = function(\n    count, date, opt_timeZone) {\n  'use strict';\n  opt_timeZone = opt_timeZone ||\n      goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());\n  return count <= 2 ? opt_timeZone.getTimeZoneId() :\n                      opt_timeZone.getGenericLocation(date);\n};\n\n\n/**\n * Formatting one date field.\n * @param {string} patternStr The pattern string for the field being formatted.\n * @param {!goog.date.DateLike} date represents the real date to be formatted.\n * @param {!goog.date.DateLike} dateForDate used to resolve date fields\n *     for formatting.\n * @param {!goog.date.DateLike} dateForTime used to resolve time fields\n *     for formatting.\n * @param {goog.i18n.TimeZone=} opt_timeZone This holds current time zone info.\n * @return {string} string representation for the given field.\n * @private\n */\ngoog.i18n.DateTimeFormat.prototype.formatField_ = function(\n    patternStr, date, dateForDate, dateForTime, opt_timeZone) {\n  'use strict';\n  var count = patternStr.length;\n  switch (patternStr.charAt(0)) {\n    case 'G':\n      return this.formatEra_(count, dateForDate);\n    case 'y':\n      return this.formatYear_(count, dateForDate);\n    case 'Y':\n      return this.formatYearOfWeek_(count, dateForDate);\n    case 'M':\n      return this.formatMonth_(count, dateForDate);\n    case 'k':\n      return this.format24Hours_(count, dateForTime);\n    case 'S':\n      return this.formatFractionalSeconds_(count, dateForTime);\n    case 'E':\n      return this.formatDayOfWeek_(count, dateForDate);\n    case 'a':\n      return this.formatAmPm_(count, dateForTime);\n    case 'h':\n      return this.format1To12Hours_(count, dateForTime);\n    case 'K':\n      return this.format0To11Hours_(count, dateForTime);\n    case 'H':\n      return this.format0To23Hours_(count, dateForTime);\n    case 'c':\n      return this.formatStandaloneDay_(count, dateForDate);\n    case 'L':\n      return this.formatStandaloneMonth_(count, dateForDate);\n    case 'Q':\n      return this.formatQuarter_(count, dateForDate);\n    case 'd':\n      return this.formatDate_(count, dateForDate);\n    case 'm':\n      return this.formatMinutes_(count, dateForTime);\n    case 's':\n      return this.formatSeconds_(count, dateForTime);\n    case 'v':\n      return this.formatTimeZoneId_(date, opt_timeZone);\n    case 'V':\n      return this.formatTimeZoneLocationId_(count, date, opt_timeZone);\n    case 'w':\n      return this.formatWeekOfYear_(count, dateForTime);\n    case 'z':\n      return this.formatTimeZone_(count, date, opt_timeZone);\n    case 'Z':\n      return this.formatTimeZoneRFC_(count, date, opt_timeZone);\n    default:\n      return '';\n  }\n};\n"],
"names":["goog","provide","require","requireType","i18n","DateTimeFormat","goog.i18n.DateTimeFormat","pattern","opt_dateTimeSymbols","asserts","assert","undefined","DateTimeSymbols","patternParts_","dateTimeSymbols_","applyStandardPattern_","applyPattern_","Format","FULL_DATE","LONG_DATE","MEDIUM_DATE","SHORT_DATE","FULL_TIME","LONG_TIME","MEDIUM_TIME","SHORT_TIME","FULL_DATETIME","LONG_DATETIME","MEDIUM_DATETIME","SHORT_DATETIME","TOKENS_","PartTypes_","QUOTED_STRING","FIELD","LITERAL","getHours_","goog.i18n.DateTimeFormat.getHours_","date","getHours","prototype","goog.i18n.DateTimeFormat.prototype.applyPattern_","removeRlmInPatterns_","replace","previousPattern","i","length","m","match","part","substring","push","text","type","Error","format","goog.i18n.DateTimeFormat.prototype.format","opt_timeZone","diff","getTimezoneOffset","getOffset","dateForDate","Date","getTime","dateForTime","dstDiff","MS_PER_DAY","out","formatField_","join","goog.i18n.DateTimeFormat.prototype.applyStandardPattern_","formatType","DATEFORMATS","TIMEFORMATS","DATETIMEFORMATS","localizeNumbers_","goog.i18n.DateTimeFormat.prototype.localizeNumbers_","input","localizeNumbers","enforceAsciiDigits_","setEnforceAsciiDigits","goog.i18n.DateTimeFormat.setEnforceAsciiDigits","enforceAsciiDigits","isEnforceAsciiDigits","goog.i18n.DateTimeFormat.isEnforceAsciiDigits","goog.i18n.DateTimeFormat.localizeNumbers","String","dateTimeSymbols","ZERODIGIT","parts","c","charCodeAt","fromCharCode","charAt","formatEra_","goog.i18n.DateTimeFormat.prototype.formatEra_","count","value","getFullYear","ERANAMES","ERAS","formatYear_","goog.i18n.DateTimeFormat.prototype.formatYear_","string","padNumber","formatYearOfWeek_","goog.i18n.DateTimeFormat.prototype.formatYearOfWeek_","getYearOfWeek","getMonth","getDate","FIRSTWEEKCUTOFFDAY","FIRSTDAYOFWEEK","formatMonth_","goog.i18n.DateTimeFormat.prototype.formatMonth_","NARROWMONTHS","MONTHS","SHORTMONTHS","validateDateHasTime_","goog.i18n.DateTimeFormat.validateDateHasTime_","getSeconds","getMinutes","format24Hours_","goog.i18n.DateTimeFormat.prototype.format24Hours_","hours","formatFractionalSeconds_","goog.i18n.DateTimeFormat.prototype.formatFractionalSeconds_","getMilliseconds","toFixed","Math","min","substr","formatDayOfWeek_","goog.i18n.DateTimeFormat.prototype.formatDayOfWeek_","getDay","WEEKDAYS","SHORTWEEKDAYS","formatAmPm_","goog.i18n.DateTimeFormat.prototype.formatAmPm_","AMPMS","format1To12Hours_","goog.i18n.DateTimeFormat.prototype.format1To12Hours_","format0To11Hours_","goog.i18n.DateTimeFormat.prototype.format0To11Hours_","format0To23Hours_","goog.i18n.DateTimeFormat.prototype.format0To23Hours_","formatStandaloneDay_","goog.i18n.DateTimeFormat.prototype.formatStandaloneDay_","STANDALONENARROWWEEKDAYS","STANDALONEWEEKDAYS","STANDALONESHORTWEEKDAYS","formatStandaloneMonth_","goog.i18n.DateTimeFormat.prototype.formatStandaloneMonth_","STANDALONENARROWMONTHS","STANDALONEMONTHS","STANDALONESHORTMONTHS","formatQuarter_","goog.i18n.DateTimeFormat.prototype.formatQuarter_","floor","SHORTQUARTERS","QUARTERS","formatDate_","goog.i18n.DateTimeFormat.prototype.formatDate_","formatMinutes_","goog.i18n.DateTimeFormat.prototype.formatMinutes_","formatSeconds_","goog.i18n.DateTimeFormat.prototype.formatSeconds_","formatWeekOfYear_","goog.i18n.DateTimeFormat.prototype.formatWeekOfYear_","weekNum","getWeekNumber","formatTimeZoneRFC_","goog.i18n.DateTimeFormat.prototype.formatTimeZoneRFC_","TimeZone","createTimeZone","getRFCTimeZoneString","getGMTString","formatTimeZone_","goog.i18n.DateTimeFormat.prototype.formatTimeZone_","getShortName","getLongName","formatTimeZoneId_","goog.i18n.DateTimeFormat.prototype.formatTimeZoneId_","getTimeZoneId","formatTimeZoneLocationId_","goog.i18n.DateTimeFormat.prototype.formatTimeZoneLocationId_","getGenericLocation","goog.i18n.DateTimeFormat.prototype.formatField_","patternStr"]
}
