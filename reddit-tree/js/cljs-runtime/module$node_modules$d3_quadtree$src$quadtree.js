shadow$provide.module$node_modules$d3_quadtree$src$quadtree=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,
nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;
desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}function quadtree(nodes,x,y){x=new Quadtree(null==x?_x.defaultX:x,null==y?_y.defaultY:y,NaN,NaN,NaN,NaN);return null==nodes?x:x.addAll(nodes)}function Quadtree(x,y,x0,y0,x1,y1){this._x=x;this._y=y;this._x0=x0;this._y0=y0;this._x1=x1;this._y1=y1;this._root=void 0}function leaf_copy(leaf){for(var copy={data:leaf.data},next=copy;leaf=leaf.next;)next=
next.next={data:leaf.data};return copy}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=quadtree;global=_interopRequireWildcard(require("module$node_modules$d3_quadtree$src$add"));module=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$cover"));exports=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$data"));var _extent=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$extent")),_find=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$find")),
_remove=_interopRequireWildcard(require("module$node_modules$d3_quadtree$src$remove")),_root=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$root")),_size=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$size")),_visit=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$visit")),_visitAfter=_interopRequireDefault(require("module$node_modules$d3_quadtree$src$visitAfter")),_x=_interopRequireWildcard(require("module$node_modules$d3_quadtree$src$x")),
_y=_interopRequireWildcard(require("module$node_modules$d3_quadtree$src$y"));require=quadtree.prototype=Quadtree.prototype;require.copy=function(){var copy=new Quadtree(this._x,this._y,this._x0,this._y0,this._x1,this._y1),node=this._root,nodes,child;if(!node)return copy;if(!node.length)return copy._root=leaf_copy(node),copy;for(nodes=[{source:node,target:copy._root=Array(4)}];node=nodes.pop();)for(var i=0;4>i;++i)if(child=node.source[i])child.length?nodes.push({source:child,target:node.target[i]=
Array(4)}):node.target[i]=leaf_copy(child);return copy};require.add=global.default;require.addAll=global.addAll;require.cover=module.default;require.data=exports.default;require.extent=_extent.default;require.find=_find.default;require.remove=_remove.default;require.removeAll=_remove.removeAll;require.root=_root.default;require.size=_size.default;require.visit=_visit.default;require.visitAfter=_visitAfter.default;require.x=_x.default;require.y=_y.default}
//# sourceMappingURL=module$node_modules$d3_quadtree$src$quadtree.js.map
