{
"version":3,
"file":"module$node_modules$d3_hierarchy$src$treemap$squarify.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/d3-hierarchy/src/treemap/squarify.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_hierarchy$src$treemap$squarify\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.squarifyRatio = squarifyRatio;\nexports.default = exports.phi = void 0;\n\nvar _dice = _interopRequireDefault(require(\"./dice.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar phi = (1 + Math.sqrt(5)) / 2;\nexports.phi = phi;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx,\n      dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.\n\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.\n\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n\n      if (newRatio > minRatio) {\n        sumValue -= nodeValue;\n        break;\n      }\n\n      minRatio = newRatio;\n    } // Position and record the row orientation.\n\n\n    rows.push(row = {\n      value: sumValue,\n      dice: dx < dy,\n      children: nodes.slice(i0, i1)\n    });\n    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar _default = function custom(ratio) {\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}(phi);\n\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","squarifyRatio","ratio","parent","x0","y0","x1","y1","rows","nodes","children","row","nodeValue","i1","i0","n","length","dy","value","sumValue","minValue","maxValue","newRatio","minRatio","alpha","dx","Math","max","beta","push","dice","slice","_dice","_slice","Object","defineProperty","phi","sqrt","_default","custom","squarify","squarify.ratio","x"]
}
