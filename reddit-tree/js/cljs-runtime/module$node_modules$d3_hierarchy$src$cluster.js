shadow$provide.module$node_modules$d3_hierarchy$src$cluster=function(global,require,module,exports){function defaultSeparation(a,b){return a.parent===b.parent?1:2}function meanXReduce(x,c){return x+c.x}function maxYReduce(y,c){return Math.max(y,c.y)}function leafLeft(node){for(var children;children=node.children;)node=children[0];return node}function leafRight(node){for(var children;children=node.children;)node=children[children.length-1];return node}Object.defineProperty(exports,"__esModule",{value:!0});
exports.default=function(){function cluster(root){var previousNode,x=0;root.eachAfter(function(node){var children=node.children;if(children){var JSCompiler_inline_result=children.reduce(meanXReduce,0)/children.length;node.x=JSCompiler_inline_result;node.y=1+children.reduce(maxYReduce,0)}else node.x=previousNode?x+=separation(node,previousNode):0,node.y=0,previousNode=node});var left=leafLeft(root),right=leafRight(root),x0=left.x-separation(left,right)/2,x1=right.x+separation(right,left)/2;return root.eachAfter(nodeSize?
function(node){node.x=(node.x-root.x)*dx;node.y=(root.y-node.y)*dy}:function(node){node.x=(node.x-x0)/(x1-x0)*dx;node.y=(1-(root.y?node.y/root.y:1))*dy})}var separation=defaultSeparation,dx=1,dy=1,nodeSize=!1;cluster.separation=function(x){return arguments.length?(separation=x,cluster):separation};cluster.size=function(x){return arguments.length?(nodeSize=!1,dx=+x[0],dy=+x[1],cluster):nodeSize?null:[dx,dy]};cluster.nodeSize=function(x){return arguments.length?(nodeSize=!0,dx=+x[0],dy=+x[1],cluster):
nodeSize?[dx,dy]:null};return cluster}}
//# sourceMappingURL=module$node_modules$d3_hierarchy$src$cluster.js.map
