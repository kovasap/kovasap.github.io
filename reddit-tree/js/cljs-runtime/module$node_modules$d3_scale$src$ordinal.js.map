{
"version":3,
"file":"module$node_modules$d3_scale$src$ordinal.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBrGC,QAASA,QAAO,EAAG,CAMjBC,QAASA,MAAK,CAACC,CAAD,CAAI,CAChB,IAAIC,EAAIC,KAAMC,CAAAA,GAAN,CAAUH,CAAV,CAER,IAAUI,IAAAA,EAAV,GAAIH,CAAJ,CAAqB,CACnB,GAAII,OAAJ,GAAgBC,QAAhB,CAA0B,MAAOD,QACjCH,MAAMK,CAAAA,GAAN,CAAUP,CAAV,CAAaC,CAAb,CAAiBO,MAAOC,CAAAA,IAAP,CAAYT,CAAZ,CAAjB,CAAkC,CAAlC,CAFmB,CAKrB,MAAOU,MAAA,CAAMT,CAAN,CAAUS,KAAMC,CAAAA,MAAhB,CARS,CAND,IACbT,MAAQ,IAAIU,QAASC,CAAAA,SADR,CAEbL,OAAS,EAFI,CAGbE,MAAQ,EAHK,CAIbL,QAAUC,QAadP,MAAMS,CAAAA,MAAN,CAAeM,QAAS,CAACC,CAAD,CAAI,CAC1B,GAAI,CAACC,SAAUL,CAAAA,MAAf,CAAuB,MAAOH,OAAOS,CAAAA,KAAP,EAC9BT,OAAA,CAAS,EAAIN,MAAb,CAAqB,IAAIU,QAASC,CAAAA,SAElC,KAAK,MAAMK,KAAX,GAAoBH,EAApB,CACMb,KAAMiB,CAAAA,GAAN,CAAUD,KAAV,CAAJ,EACAhB,KAAMK,CAAAA,GAAN,CAAUW,KAAV,CAAiBV,MAAOC,CAAAA,IAAP,CAAYS,KAAZ,CAAjB;AAAsC,CAAtC,CAGF,OAAOnB,MATmB,CAY5BA,MAAMW,CAAAA,KAAN,CAAcU,QAAS,CAACL,CAAD,CAAI,CACzB,MAAOC,UAAUL,CAAAA,MAAV,EAAoBD,KAAA,CAAQW,KAAMC,CAAAA,IAAN,CAAWP,CAAX,CAAR,CAAuBhB,KAA3C,EAAoDW,KAAMO,CAAAA,KAAN,EADlC,CAI3BlB,MAAMM,CAAAA,OAAN,CAAgBkB,QAAS,CAACR,CAAD,CAAI,CAC3B,MAAOC,UAAUL,CAAAA,MAAV,EAAoBN,OAAA,CAAUU,CAAV,CAAahB,KAAjC,EAA0CM,OADtB,CAI7BN,MAAMyB,CAAAA,IAAN,CAAaC,QAAS,EAAG,CACvB,MAAO3B,QAAA,CAAQU,MAAR,CAAgBE,KAAhB,CAAuBL,CAAAA,OAAvB,CAA+BA,OAA/B,CADgB,CAIzBqB,MAAMC,CAAAA,SAAUC,CAAAA,KAAhB,CAAsB7B,KAAtB,CAA6BiB,SAA7B,CAEA,OAAOjB,MA3CU,CAbnB8B,MAAOC,CAAAA,cAAP,CAAsBjC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQkC,CAAAA,OAAR,CAAkBjC,OAClBD,QAAQS,CAAAA,QAAR,CAAmB,IAAK,EAExB,KAAIM,SAAWjB,OAAA,CAAQ,wCAAR,CAAf,CAEI+B,MAAQ/B,OAAA,CAAQ,uCAAR,CAEZ;MAAMW,SAAW0B,MAAA,CAAO,UAAP,CACjBnC,QAAQS,CAAAA,QAAR,CAAmBA,QAdkF;",
"sources":["node_modules/d3-scale/src/ordinal.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_scale$src$ordinal\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ordinal;\nexports.implicit = void 0;\n\nvar _d3Array = require(\"d3-array\");\n\nvar _init = require(\"./init.js\");\n\nconst implicit = Symbol(\"implicit\");\nexports.implicit = implicit;\n\nfunction ordinal() {\n  var index = new _d3Array.InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n\n    return range[i % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new _d3Array.InternMap();\n\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n\n    return scale;\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  _init.initRange.apply(scale, arguments);\n\n  return scale;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","ordinal","scale","d","i","index","get","undefined","unknown","implicit","set","domain","push","range","length","_d3Array","InternMap","scale.domain","_","arguments","slice","value","has","scale.range","Array","from","scale.unknown","copy","scale.copy","_init","initRange","apply","Object","defineProperty","default","Symbol"]
}
