{
"version":3,
"file":"module$node_modules$d3_array$src$fsum.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/d3-array/src/fsum.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$src$fsum\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fsum = fsum;\nexports.fcumsum = fcumsum;\nexports.Adder = void 0;\n\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n            hi = x + y,\n            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n\n  valueOf() {\n    const p = this._partials;\n    let n = this._n,\n        x,\n        y,\n        lo,\n        hi = 0;\n\n    if (n > 0) {\n      hi = p[--n];\n\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n\n      if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n\n    return hi;\n  }\n\n}\n\nexports.Adder = Adder;\n\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n\n  return +adder;\n}\n\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","fsum","values","valueof","adder","Adder","undefined","add","index","fcumsum","Float64Array","from","v","constructor","_partials","_n","x","p","i","j","y","hi","lo","Math","abs","valueOf","n"]
}
