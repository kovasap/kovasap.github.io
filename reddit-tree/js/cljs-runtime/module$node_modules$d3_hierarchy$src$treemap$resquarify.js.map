{
"version":3,
"file":"module$node_modules$d3_hierarchy$src$treemap$resquarify.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAcpHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAXrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAII,MAAQP,sBAAA,CAAuBH,OAAA,CAAQ,mDAAR,CAAvB,CAAZ,CAEIW,OAASR,sBAAA,CAAuBH,OAAA,CAAQ,oDAAR,CAAvB,CAFb,CAIIY,UAAYZ,OAAA,CAAQ,uDAAR,CAIZa;MAAAA,CAAWC,QAASA,OAAM,CAACC,KAAD,CAAQ,CACpCC,QAASA,WAAU,CAACC,MAAD,CAASC,EAAT,CAAaC,EAAb,CAAiBC,EAAjB,CAAqBC,EAArB,CAAyB,CAC1C,IAAKC,IAAL,CAAYL,MAAOL,CAAAA,SAAnB,GAAiCU,IAAKP,CAAAA,KAAtC,GAAgDA,KAAhD,CAUE,IAVqD,IACjDO,IADiD,CAGjDC,KAHiD,CAIjDC,CAJiD,CAKjDC,EAAI,EAL6C,CAMjDC,CANiD,CAOjDC,EAAIL,IAAKM,CAAAA,MAPwC,CAQjDnB,MAAQQ,MAAOR,CAAAA,KAEnB,CAAO,EAAEgB,CAAT,CAAaE,CAAb,CAAA,CAAgB,CACdE,MAAA,CAAMP,IAAA,CAAKG,CAAL,CAASF,MAAf,CAAuBM,MAAIC,CAAAA,QAEtBN,EAAA,CAAIK,MAAIpB,CAAAA,KAAR,CAAgB,CAArB,KAAwBiB,CAAxB,CAA4BH,KAAMK,CAAAA,MAAlC,CAA0CJ,CAA1C,CAA8CE,CAA9C,CAAiD,EAAEF,CAAnD,CAAsDK,MAAIpB,CAAAA,KAAJ,EAAac,KAAA,CAAMC,CAAN,CAASf,CAAAA,KAExEoB,OAAIE,CAAAA,IAAR,CAAc,CAAC,CAAA,CAAGrB,KAAMJ,CAAAA,OAAV,EAAmBuB,MAAnB,CAAwBX,EAAxB,CAA4BC,EAA5B,CAAgCC,EAAhC,CAAoCX,KAAA,CAAQU,EAAR,GAAeE,EAAf,CAAoBF,EAApB,EAA0BU,MAAIpB,CAAAA,KAA9B,CAAsCA,KAAtC,CAA8CY,EAAlF,CAAd,CAAyG,CAAC,CAAA,CAAGV,MAAOL,CAAAA,OAAX,EAAoBuB,MAApB,CAAyBX,EAAzB,CAA6BC,EAA7B,CAAiCV,KAAA,CAAQS,EAAR,GAAeE,EAAf,CAAoBF,EAApB,EAA0BW,MAAIpB,CAAAA,KAA9B,CAAsCA,KAAtC,CAA8CW,EAA/E,CAAmFC,EAAnF,CACzGZ,MAAA,EAASoB,MAAIpB,CAAAA,KANC,CAVlB,IAmBEQ,OAAOL,CAAAA,SACP;AADmBU,IACnB,CAD0B,CAAC,CAAA,CAAGV,SAAUoB,CAAAA,aAAd,EAA6BjB,KAA7B,CAAoCE,MAApC,CAA4CC,EAA5C,CAAgDC,EAAhD,CAAoDC,EAApD,CAAwDC,EAAxD,CAC1B,CAAAC,IAAKP,CAAAA,KAAL,CAAaA,KArB2B,CAyB5CC,UAAWD,CAAAA,KAAX,CAAmBkB,QAAS,CAACC,CAAD,CAAI,CAC9B,MAAOpB,OAAA,CAAkB,CAAX,EAACoB,CAAD,CAAK,CAACA,CAAN,EAAeA,CAAf,CAAmB,CAA1B,CADuB,CAIhC,OAAOlB,WA9B6B,CAAvB,CA+BbJ,SAAUuB,CAAAA,GA/BG,CAiCfjC,QAAQI,CAAAA,OAAR,CAAkBO,MAjDkG;",
"sources":["node_modules/d3-hierarchy/src/treemap/resquarify.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_hierarchy$src$treemap$resquarify\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dice = _interopRequireDefault(require(\"./dice.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nvar _squarify = require(\"./squarify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function custom(ratio) {\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && rows.ratio === ratio) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\n        if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}(_squarify.phi);\n\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_dice","_slice","_squarify","_default","custom","ratio","resquarify","parent","x0","y0","x1","y1","rows","nodes","i","j","n","m","length","row","children","dice","squarifyRatio","resquarify.ratio","x","phi"]
}
