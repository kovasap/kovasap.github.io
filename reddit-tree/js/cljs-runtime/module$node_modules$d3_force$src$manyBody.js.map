{
"version":3,
"file":"module$node_modules$d3_force$src$manyBody.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/d3-force/src/manyBody.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_force$src$manyBody\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _d3Quadtree = require(\"d3-quadtree\");\n\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\n\nvar _jiggle = _interopRequireDefault(require(\"./jiggle.js\"));\n\nvar _simulation = require(\"./simulation.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _default() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = (0, _constant.default)(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n\n      do strength += strengths[q.data.index]; while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = (0, _jiggle.default)(random), l += x * x;\n        if (y === 0) y = (0, _jiggle.default)(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = (0, _jiggle.default)(random), l += x * x;\n      if (y === 0) y = (0, _jiggle.default)(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_default","force","_","n","nodes","length","tree","_d3Quadtree","quadtree","_simulation","x","y","visitAfter","accumulate","alpha","i","node","visit","apply","initialize","strengths","Array","index","strength","quad","q","c","weight","Math","abs","data","next","x1","x2","w","l","theta2","distanceMax2","_jiggle","random","distanceMin2","sqrt","vx","vy","_constant","Infinity","force.initialize","_nodes","_random","force.strength","arguments","distanceMin","force.distanceMin","distanceMax","force.distanceMax","theta","force.theta"]
}
