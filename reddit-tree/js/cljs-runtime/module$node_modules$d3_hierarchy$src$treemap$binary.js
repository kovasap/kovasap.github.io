shadow$provide.module$node_modules$d3_hierarchy$src$treemap$binary=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(parent,x0$jscomp$0,y0$jscomp$0,x1$jscomp$0,y1$jscomp$0){function partition(i,j,value,x0,y0,x1,y1){if(i>=j-1)i=nodes[i],i.x0=x0,i.y0=y0,i.x1=x1,i.y1=y1;else{for(var valueOffset=sums[i],valueTarget=value/2+valueOffset,k=i+1,hi=j-1;k<hi;){var mid=k+hi>>>1;sums[mid]<valueTarget?k=mid+1:hi=mid}valueTarget-sums[k-1]<sums[k]-
valueTarget&&i+1<k&&--k;valueOffset=sums[k]-valueOffset;valueTarget=value-valueOffset;x1-x0>y1-y0?(value=value?(x0*valueTarget+x1*valueOffset)/value:x1,partition(i,k,valueOffset,x0,y0,value,y1),partition(k,j,valueTarget,value,y0,x1,y1)):(value=value?(y0*valueTarget+y1*valueOffset)/value:y1,partition(i,k,valueOffset,x0,y0,x1,value),partition(k,j,valueTarget,x0,value,x1,y1))}}var nodes=parent.children,i$jscomp$0,n=nodes.length,sum,sums=Array(n+1);for(sums[0]=sum=i$jscomp$0=0;i$jscomp$0<n;++i$jscomp$0)sums[i$jscomp$0+
1]=sum+=nodes[i$jscomp$0].value;partition(0,n,parent.value,x0$jscomp$0,y0$jscomp$0,x1$jscomp$0,y1$jscomp$0)}}
//# sourceMappingURL=module$node_modules$d3_hierarchy$src$treemap$binary.js.map
