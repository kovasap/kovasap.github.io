{
"version":3,
"file":"module$node_modules$d3_interpolate$src$transform$decompose.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAaAC,QAAiB,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAaC,CAAb,CAAgBC,CAAhB,CAAmB,CAAA,IAC9BC,MAD8B,CACtBC,MADsB,CACdC,KACpB,IAAIF,MAAJ,CAAaG,IAAKC,CAAAA,IAAL,CAAUV,CAAV,CAAcA,CAAd,CAAkBC,CAAlB,CAAsBA,CAAtB,CAAb,CAAuCD,CAAa,EAARM,MAAQ,CAAAL,CAAA,EAAKK,MACzD,IAAIE,KAAJ,CAAYR,CAAZ,CAAgBE,CAAhB,CAAoBD,CAApB,CAAwBE,CAAxB,CAA2BD,CAAgB,EAAXF,CAAW,CAAPQ,KAAO,CAAAL,CAAA,EAAKF,CAAL,CAASO,KACpD,IAAID,MAAJ,CAAaE,IAAKC,CAAAA,IAAL,CAAUR,CAAV,CAAcA,CAAd,CAAkBC,CAAlB,CAAsBA,CAAtB,CAAb,CAAuCD,CAA0B,EAArBK,MAAqB,CAAbJ,CAAa,EAARI,MAAQ,CAAAC,KAAA,EAASD,MACtEP,EAAJ,CAAQG,CAAR,CAAYF,CAAZ,CAAgBC,CAAhB,GAAmBF,CAAgC,CAA5B,CAACA,CAA2B,CAAxBC,CAAwB,CAApB,CAACA,CAAmB,CAAhBO,KAAgB,CAAR,CAACA,KAAO,CAAAF,MAAA,CAAS,CAACA,MAA7D,CACA,OAAO,CACLK,WAAYP,CADP,CAELQ,WAAYP,CAFP,CAGLQ,OAAQJ,IAAKK,CAAAA,KAAL,CAAWb,CAAX,CAAcD,CAAd,CAARa,CAA2BE,OAHtB,CAILP,MAAOC,IAAKO,CAAAA,IAAL,CAAUR,KAAV,CAAPA;AAA0BO,OAJrB,CAKGT,MALH,CAMGC,MANH,CAN2B,CAZpCb,QAAQuB,CAAAA,QAAR,CAAmB,IAAK,EACxB,KAAIF,QAAU,GAAVA,CAAgBN,IAAKS,CAAAA,EASzBxB,QAAQuB,CAAAA,QAAR,CAReA,CACbN,WAAY,CADCM,CAEbL,WAAY,CAFCK,CAGbJ,OAAQ,CAHKI,CAIbT,MAAO,CAJMS,CAKbX,OAAQ,CALKW,CAMbV,OAAQ,CANKU,CATwG;",
"sources":["node_modules/d3-interpolate/src/transform/decompose.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_interpolate$src$transform$decompose\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.identity = void 0;\nvar degrees = 180 / Math.PI;\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\nexports.identity = identity;\n\nfunction _default(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_default","a","b","c","d","e","f","scaleX","scaleY","skewX","Math","sqrt","translateX","translateY","rotate","atan2","degrees","atan","identity","PI"]
}
