shadow$provide.module$node_modules$d3_contour$src$contours=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(){function contours(values){var tz=threshold(values);if(Array.isArray(tz))tz=tz.slice().sort(_ascending.default);else{const e=(0,_d3Array.extent)(values),ts=(0,_d3Array.tickStep)(e[0],e[1],tz);tz=(0,_d3Array.ticks)(Math.floor(e[0]/ts)*ts,Math.floor(e[1]/
ts-1)*ts,tz)}return tz.map(value=>contour(values,value))}function contour(values,value){var polygons=[],holes=[];isorings(values,value,function(ring){smooth(ring,values,value);0<(0,_area.default)(ring)?polygons.push([ring]):holes.push(ring)});holes.forEach(function(hole){for(var i=0,n=polygons.length,polygon;i<n;++i)if(-1!==(0,_contains.default)((polygon=polygons[i])[0],hole)){polygon.push(hole);break}});return{type:"MultiPolygon",value,coordinates:polygons}}function isorings(values,value,callback){function stitch(line){var start=
[line[0][0]+x,line[0][1]+y];line=[line[1][0]+x,line[1][1]+y];var startIndex=2*start[0]+start[1]*(dx+1)*4,endIndex=2*line[0]+line[1]*(dx+1)*4,f,g;(f=fragmentByEnd[startIndex])?(g=fragmentByStart[endIndex])?(delete fragmentByEnd[f.end],delete fragmentByStart[g.start],f===g?(f.ring.push(line),callback(f.ring)):fragmentByStart[f.start]=fragmentByEnd[g.end]={start:f.start,end:g.end,ring:f.ring.concat(g.ring)}):(delete fragmentByEnd[f.end],f.ring.push(line),fragmentByEnd[f.end=endIndex]=f):(f=fragmentByStart[endIndex])?
(g=fragmentByEnd[startIndex])?(delete fragmentByStart[f.start],delete fragmentByEnd[g.end],f===g?(f.ring.push(line),callback(f.ring)):fragmentByStart[g.start]=fragmentByEnd[f.end]={start:g.start,end:f.end,ring:g.ring.concat(f.ring)}):(delete fragmentByStart[f.start],f.ring.unshift(start),fragmentByStart[f.start=startIndex]=f):fragmentByStart[startIndex]=fragmentByEnd[endIndex]={start:startIndex,end:endIndex,ring:[start,line]}}var fragmentByStart=[],fragmentByEnd=[],y;var x=y=-1;var t1=values[0]>=
value;for(cases[t1<<1].forEach(stitch);++x<dx-1;){var t0=t1;t1=values[x+1]>=value;cases[t0|t1<<1].forEach(stitch)}for(cases[t1<<0].forEach(stitch);++y<dy-1;){x=-1;t1=values[y*dx+dx]>=value;var t2=values[y*dx]>=value;for(cases[t1<<1|t2<<2].forEach(stitch);++x<dx-1;){t0=t1;t1=values[y*dx+dx+x+1]>=value;var t3=t2;t2=values[y*dx+x+1]>=value;cases[t0|t1<<1|t2<<2|t3<<3].forEach(stitch)}cases[t1|t2<<3].forEach(stitch)}x=-1;t2=values[y*dx]>=value;for(cases[t2<<2].forEach(stitch);++x<dx-1;)t3=t2,t2=values[y*
dx+x+1]>=value,cases[t2<<2|t3<<3].forEach(stitch);cases[t2<<3].forEach(stitch)}function smoothLinear(ring,values,value){ring.forEach(function(point){var x=point[0],y=point[1],xt=x|0,yt=y|0,v1=values[yt*dx+xt];if(0<x&&x<dx&&xt===x){var v0=values[yt*dx+xt-1];point[0]=x+(value-v0)/(v1-v0)-.5}0<y&&y<dy&&yt===y&&(v0=values[(yt-1)*dx+xt],point[1]=y+(value-v0)/(v1-v0)-.5)})}var dx=1,dy=1,threshold=_d3Array.thresholdSturges,smooth=smoothLinear;contours.contour=contour;contours.size=function(_){if(!arguments.length)return[dx,
dy];var _0=Math.floor(_[0]),_1=Math.floor(_[1]);if(!(0<=_0&&0<=_1))throw Error("invalid size");return dx=_0,dy=_1,contours};contours.thresholds=function(_){return arguments.length?(threshold="function"===typeof _?_:Array.isArray(_)?(0,_constant.default)(_array.slice.call(_)):(0,_constant.default)(_),contours):threshold};contours.smooth=function(_){return arguments.length?(smooth=_?smoothLinear:_noop.default,contours):smooth===smoothLinear};return contours};var _d3Array=require("module$node_modules$d3_array$src$index"),
_array=require("module$node_modules$d3_contour$src$array"),_ascending=_interopRequireDefault(require("module$node_modules$d3_contour$src$ascending")),_area=_interopRequireDefault(require("module$node_modules$d3_contour$src$area")),_constant=_interopRequireDefault(require("module$node_modules$d3_contour$src$constant")),_contains=_interopRequireDefault(require("module$node_modules$d3_contour$src$contains")),_noop=_interopRequireDefault(require("module$node_modules$d3_contour$src$noop")),cases=[[],[[[1,
1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]]}
//# sourceMappingURL=module$node_modules$d3_contour$src$contours.js.map
