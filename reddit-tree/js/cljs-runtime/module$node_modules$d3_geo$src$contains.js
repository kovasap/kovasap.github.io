shadow$provide.module$node_modules$d3_geo$src$contains=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function containsGeometry(geometry,point){return geometry&&containsGeometryType.hasOwnProperty(geometry.type)?containsGeometryType[geometry.type](geometry,point):!1}function containsPoint(coordinates,point){return 0===(0,_distance.default)(coordinates,point)}function containsLine(coordinates,point){for(var ao,bo,ab,i=0,n=coordinates.length;i<
n;i++){bo=(0,_distance.default)(coordinates[i],point);if(0===bo||0<i&&(ab=(0,_distance.default)(coordinates[i],coordinates[i-1]),0<ab&&ao<=ab&&bo<=ab&&(ao+bo-ab)*(1-Math.pow((ao-bo)/ab,2))<_math.epsilon2*ab))return!0;ao=bo}return!1}function containsPolygon(coordinates,point){return!!(0,_polygonContains.default)(coordinates.map(ringRadians),pointRadians(point))}function ringRadians(ring){return ring=ring.map(pointRadians),ring.pop(),ring}function pointRadians(point){return[point[0]*_math.radians,point[1]*
_math.radians]}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(object,point){return(object&&containsObjectType.hasOwnProperty(object.type)?containsObjectType[object.type]:containsGeometry)(object,point)};var _polygonContains=_interopRequireDefault(require("module$node_modules$d3_geo$src$polygonContains")),_distance=_interopRequireDefault(require("module$node_modules$d3_geo$src$distance")),_math=require("module$node_modules$d3_geo$src$math"),containsObjectType={Feature:function(object,
point){return containsGeometry(object.geometry,point)},FeatureCollection:function(object,point){object=object.features;for(var i=-1,n=object.length;++i<n;)if(containsGeometry(object[i].geometry,point))return!0;return!1}},containsGeometryType={Sphere:function(){return!0},Point:function(object,point){return containsPoint(object.coordinates,point)},MultiPoint:function(object,point){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)if(containsPoint(object[i],point))return!0;return!1},LineString:function(object,
point){return containsLine(object.coordinates,point)},MultiLineString:function(object,point){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)if(containsLine(object[i],point))return!0;return!1},Polygon:function(object,point){return containsPolygon(object.coordinates,point)},MultiPolygon:function(object,point){object=object.coordinates;for(var i=-1,n=object.length;++i<n;)if(containsPolygon(object[i],point))return!0;return!1},GeometryCollection:function(object,point){object=object.geometries;
for(var i=-1,n=object.length;++i<n;)if(containsGeometry(object[i],point))return!0;return!1}}}
//# sourceMappingURL=module$node_modules$d3_geo$src$contains.js.map
