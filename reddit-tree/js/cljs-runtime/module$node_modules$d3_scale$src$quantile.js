shadow$provide.module$node_modules$d3_scale$src$quantile=function(global,require,module,exports){function quantile(){function rescale(){var i=0,n=Math.max(1,range.length);for(thresholds=Array(n-1);++i<n;)thresholds[i-1]=(0,_d3Array.quantileSorted)(domain,i/n);return scale}function scale(x){return null==x||isNaN(x=+x)?unknown:range[(0,_d3Array.bisect)(thresholds,x)]}var domain=[],range=[],thresholds=[],unknown;scale.invertExtent=function(y){y=range.indexOf(y);return 0>y?[NaN,NaN]:[0<y?thresholds[y-
1]:domain[0],y<thresholds.length?thresholds[y]:domain[domain.length-1]]};scale.domain=function(_){if(!arguments.length)return domain.slice();domain=[];for(let d of _)null==d||isNaN(d=+d)||domain.push(d);domain.sort(_d3Array.ascending);return rescale()};scale.range=function(_){return arguments.length?(range=Array.from(_),rescale()):range.slice()};scale.unknown=function(_){return arguments.length?(unknown=_,scale):unknown};scale.quantiles=function(){return thresholds.slice()};scale.copy=function(){return quantile().domain(domain).range(range).unknown(unknown)};
return _init.initRange.apply(scale,arguments)}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=quantile;var _d3Array=require("module$node_modules$d3_array$src$index"),_init=require("module$node_modules$d3_scale$src$init")}
//# sourceMappingURL=module$node_modules$d3_scale$src$quantile.js.map
