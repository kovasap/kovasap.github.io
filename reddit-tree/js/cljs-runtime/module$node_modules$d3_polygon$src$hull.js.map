{
"version":3,
"file":"module$node_modules$d3_polygon$src$hull.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/d3-polygon/src/hull.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_polygon$src$hull\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _cross = _interopRequireDefault(require(\"./cross.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n        indexes = [0, 1];\n  let size = 2,\n      i;\n\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction _default(points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","lexicographicOrder","a","b","computeUpperHullIndexes","points","n","length","indexes","size","i","_cross","default","slice","Object","defineProperty","value","_default","sortedPoints","Array","flippedPoints","sort","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","push","_interopRequireDefault","obj","__esModule"]
}
