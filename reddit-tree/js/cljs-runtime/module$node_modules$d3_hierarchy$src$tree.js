shadow$provide.module$node_modules$d3_hierarchy$src$tree=function(global,require,module,exports){function defaultSeparation(a,b){return a.parent===b.parent?1:2}function nextLeft(v){var children=v.children;return children?children[0]:v.t}function nextRight(v){var children=v.children;return children?children[children.length-1]:v.t}function TreeNode(node,i){this._=node;this.A=this.children=this.parent=null;this.a=this;this.s=this.c=this.m=this.z=0;this.t=null;this.i=i}function treeRoot(root){root=new TreeNode(root,
0);for(var node,nodes=[root],child,children,i;node=nodes.pop();)if(children=node._.children)for(node.children=Array(child=children.length),i=child-1;0<=i;--i)nodes.push(child=node.children[i]=new TreeNode(children[i],i)),child.parent=node;(root.parent=new TreeNode(null,0)).children=[root];return root}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(){function tree(root){var t=treeRoot(root);t.eachAfter(firstWalk);t.parent.m=-t.z;t.eachBefore(secondWalk);if(nodeSize)root.eachBefore(sizeNode);
else{var left=root,right=root,bottom=root;root.eachBefore(function(node){node.x<left.x&&(left=node);node.x>right.x&&(right=node);node.depth>bottom.depth&&(bottom=node)});t=left===right?1:separation(left,right)/2;var tx=t-left.x,kx=dx/(right.x+t+tx),ky=dy/(bottom.depth||1);root.eachBefore(function(node){node.x=(node.x+tx)*kx;node.y=node.depth*ky})}return root}function firstWalk(v){var children=v.children,siblings=v.parent.children,w=v.i?siblings[v.i-1]:null;if(children){for(var shift=0,change=0,children$jscomp$0=
v.children,i=children$jscomp$0.length,w$jscomp$0;0<=--i;)w$jscomp$0=children$jscomp$0[i],w$jscomp$0.z+=shift,w$jscomp$0.m+=shift,shift+=w$jscomp$0.s+(change+=w$jscomp$0.c);children=(children[0].z+children[children.length-1].z)/2;w?(v.z=w.z+separation(v._,w._),v.m=v.z-children):v.z=children}else w&&(v.z=w.z+separation(v._,w._));children=v.parent;siblings=v.parent.A||siblings[0];if(w){change=shift=v;children$jscomp$0=shift.parent.children[0];i=shift.m;w$jscomp$0=change.m;for(var sim=w.m,som=children$jscomp$0.m,
shift$jscomp$0;w=nextRight(w),shift=nextLeft(shift),w&&shift;){children$jscomp$0=nextLeft(children$jscomp$0);change=nextRight(change);change.a=v;shift$jscomp$0=w.z+sim-shift.z-i+separation(w._,shift._);if(0<shift$jscomp$0){var wm=w.a.parent===v.parent?w.a:siblings,wp=v,shift$jscomp$1=shift$jscomp$0,change$jscomp$0=shift$jscomp$1/(wp.i-wm.i);wp.c-=change$jscomp$0;wp.s+=shift$jscomp$1;wm.c+=change$jscomp$0;wp.z+=shift$jscomp$1;wp.m+=shift$jscomp$1;i+=shift$jscomp$0;w$jscomp$0+=shift$jscomp$0}sim+=w.m;
i+=shift.m;som+=children$jscomp$0.m;w$jscomp$0+=change.m}w&&!nextRight(change)&&(change.t=w,change.m+=sim-w$jscomp$0);shift&&!nextLeft(children$jscomp$0)&&(children$jscomp$0.t=shift,children$jscomp$0.m+=i-som,siblings=v)}children.A=siblings}function secondWalk(v){v._.x=v.z+v.parent.m;v.m+=v.parent.m}function sizeNode(node){node.x*=dx;node.y=node.depth*dy}var separation=defaultSeparation,dx=1,dy=1,nodeSize=null;tree.separation=function(x){return arguments.length?(separation=x,tree):separation};tree.size=
function(x){return arguments.length?(nodeSize=!1,dx=+x[0],dy=+x[1],tree):nodeSize?null:[dx,dy]};tree.nodeSize=function(x){return arguments.length?(nodeSize=!0,dx=+x[0],dy=+x[1],tree):nodeSize?[dx,dy]:null};return tree};global=require("module$node_modules$d3_hierarchy$src$hierarchy$index");TreeNode.prototype=Object.create(global.Node.prototype)}
//# sourceMappingURL=module$node_modules$d3_hierarchy$src$tree.js.map
