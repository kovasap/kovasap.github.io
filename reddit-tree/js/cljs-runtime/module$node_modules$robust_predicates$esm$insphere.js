shadow$provide.module$node_modules$robust_predicates$esm$insphere=function(global,require,module,exports){function sum_three_scale(a,b,c,az,bz,cz,out){return(0,_util.sum_three)((0,_util.scale)(4,a,az,_8),_8,(0,_util.scale)(4,b,bz,_8b),_8b,(0,_util.scale)(4,c,cz,_8c),_8c,_16,out)}function liftexact(alen,a,blen,b,clen,c,dlen,d,x,y,z,out){alen=(0,_util.sum)((0,_util.sum)(alen,a,blen,b,_48),_48,(0,_util.negate)((0,_util.sum)(clen,c,dlen,d,_48b),_48b),_48b,_96);return(0,_util.sum_three)((0,_util.scale)((0,
_util.scale)(alen,_96,x,_192),_192,x,_384x),_384x,(0,_util.scale)((0,_util.scale)(alen,_96,y,_192),_192,y,_384y),_384y,(0,_util.scale)((0,_util.scale)(alen,_96,z,_192),_192,z,_384z),_384z,_768,out)}function liftadapt(a,b,c,az,bz,cz,x,y,z,out){a=sum_three_scale(a,b,c,az,bz,cz,_24);return(0,_util.sum_three)((0,_util.scale)((0,_util.scale)(a,_24,x,_48),_48,x,xdet),xdet,(0,_util.scale)((0,_util.scale)(a,_24,y,_48),_48,y,ydet),ydet,(0,_util.scale)((0,_util.scale)(a,_24,z,_48),_48,z,zdet),zdet,_192,out)}
Object.defineProperty(exports,"__esModule",{value:!0});exports.insphere=function(ax,ay,az,bx,by,bz,cx,cy,cz,dx,dy,dz,ex,ey,ez){const aex$jscomp$0=ax-ex,bex$jscomp$0=bx-ex,cex$jscomp$0=cx-ex,dex$jscomp$0=dx-ex,aey$jscomp$0=ay-ey,bey$jscomp$0=by-ey,cey$jscomp$0=cy-ey,dey$jscomp$0=dy-ey,aez$jscomp$0=az-ez,bez$jscomp$0=bz-ez,cez$jscomp$0=cz-ez,dez$jscomp$0=dz-ez,aexbey=aex$jscomp$0*bey$jscomp$0,bexaey=bex$jscomp$0*aey$jscomp$0,ab=aexbey-bexaey,bexcey=bex$jscomp$0*cey$jscomp$0,cexbey=cex$jscomp$0*bey$jscomp$0,
bc=bexcey-cexbey,cexdey=cex$jscomp$0*dey$jscomp$0,dexcey=dex$jscomp$0*cey$jscomp$0,cd=cexdey-dexcey,dexaey=dex$jscomp$0*aey$jscomp$0,aexdey=aex$jscomp$0*dey$jscomp$0,da=dexaey-aexdey,aexcey=aex$jscomp$0*cey$jscomp$0,cexaey=cex$jscomp$0*aey$jscomp$0,ac=aexcey-cexaey,bexdey=bex$jscomp$0*dey$jscomp$0,dexbey=dex$jscomp$0*bey$jscomp$0,bd=bexdey-dexbey,alift=aex$jscomp$0*aex$jscomp$0+aey$jscomp$0*aey$jscomp$0+aez$jscomp$0*aez$jscomp$0,blift=bex$jscomp$0*bex$jscomp$0+bey$jscomp$0*bey$jscomp$0+bez$jscomp$0*
bez$jscomp$0,clift=cex$jscomp$0*cex$jscomp$0+cey$jscomp$0*cey$jscomp$0+cez$jscomp$0*cez$jscomp$0,dlift=dex$jscomp$0*dex$jscomp$0+dey$jscomp$0*dey$jscomp$0+dez$jscomp$0*dez$jscomp$0,det$jscomp$0=clift*(dez$jscomp$0*ab+aez$jscomp$0*bd+bez$jscomp$0*da)-dlift*(aez$jscomp$0*bc-bez$jscomp$0*ac+cez$jscomp$0*ab)+(alift*(bez$jscomp$0*cd-cez$jscomp$0*bd+dez$jscomp$0*bc)-blift*(cez$jscomp$0*da+dez$jscomp$0*ac+aez$jscomp$0*cd)),aezplus=Math.abs(aez$jscomp$0),bezplus=Math.abs(bez$jscomp$0),cezplus=Math.abs(cez$jscomp$0),
dezplus=Math.abs(dez$jscomp$0),aexbeyplus=Math.abs(aexbey),bexaeyplus=Math.abs(bexaey),bexceyplus=Math.abs(bexcey),cexbeyplus=Math.abs(cexbey),cexdeyplus=Math.abs(cexdey),dexceyplus=Math.abs(dexcey),dexaeyplus=Math.abs(dexaey),aexdeyplus=Math.abs(aexdey),aexceyplus=Math.abs(aexcey),cexaeyplus=Math.abs(cexaey),bexdeyplus=Math.abs(bexdey),dexbeyplus=Math.abs(dexbey),permanent=((cexdeyplus+dexceyplus)*bezplus+(dexbeyplus+bexdeyplus)*cezplus+(bexceyplus+cexbeyplus)*dezplus)*alift+((dexaeyplus+aexdeyplus)*
cezplus+(aexceyplus+cexaeyplus)*dezplus+(cexdeyplus+dexceyplus)*aezplus)*blift+((aexbeyplus+bexaeyplus)*dezplus+(bexdeyplus+dexbeyplus)*aezplus+(dexaeyplus+aexdeyplus)*bezplus)*clift+((bexceyplus+cexbeyplus)*aezplus+(cexaeyplus+aexceyplus)*bezplus+(aexbeyplus+bexaeyplus)*cezplus)*dlift,errbound$jscomp$0=isperrboundA*permanent;if(det$jscomp$0>errbound$jscomp$0||-det$jscomp$0>errbound$jscomp$0)return det$jscomp$0;{let ab3,bc3,cd3,da3,ac3,bd3,aextail,bextail,cextail,dextail,aeytail,beytail,ceytail,deytail,
aeztail,beztail,ceztail,deztail,bvirt$jscomp$0,c$jscomp$0,ahi$jscomp$0,alo$jscomp$0,bhi$jscomp$0,blo$jscomp$0,_i$jscomp$0,_j$jscomp$0,_0$jscomp$0,s1$jscomp$0,s0$jscomp$0,t1$jscomp$0,t0$jscomp$0;const aex=ax-ex,bex=bx-ex,cex=cx-ex,dex=dx-ex,aey=ay-ey,bey=by-ey,cey=cy-ey,dey=dy-ey,aez=az-ez,bez=bz-ez,cez=cz-ez,dez=dz-ez;s1$jscomp$0=aex*bey;c$jscomp$0=_util.splitter*aex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-aex);alo$jscomp$0=aex-ahi$jscomp$0;c$jscomp$0=_util.splitter*bey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-
bey);blo$jscomp$0=bey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=bex*aey;c$jscomp$0=_util.splitter*bex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bex);alo$jscomp$0=bex-ahi$jscomp$0;c$jscomp$0=_util.splitter*aey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-aey);blo$jscomp$0=aey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*
blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;ab$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;ab$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);ab3=_j$jscomp$0+
_i$jscomp$0;bvirt$jscomp$0=ab3-_j$jscomp$0;ab$jscomp$0[2]=_j$jscomp$0-(ab3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);ab$jscomp$0[3]=ab3;s1$jscomp$0=bex*cey;c$jscomp$0=_util.splitter*bex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bex);alo$jscomp$0=bex-ahi$jscomp$0;c$jscomp$0=_util.splitter*cey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cey);blo$jscomp$0=cey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=
cex*bey;c$jscomp$0=_util.splitter*cex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-cex);alo$jscomp$0=cex-ahi$jscomp$0;c$jscomp$0=_util.splitter*bey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-bey);blo$jscomp$0=bey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;bc$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=
s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;bc$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);bc3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=bc3-_j$jscomp$0;bc$jscomp$0[2]=_j$jscomp$0-(bc3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);bc$jscomp$0[3]=bc3;s1$jscomp$0=cex*dey;c$jscomp$0=_util.splitter*
cex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-cex);alo$jscomp$0=cex-ahi$jscomp$0;c$jscomp$0=_util.splitter*dey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-dey);blo$jscomp$0=dey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=dex*cey;c$jscomp$0=_util.splitter*dex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dex);alo$jscomp$0=dex-ahi$jscomp$0;c$jscomp$0=_util.splitter*cey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cey);blo$jscomp$0=
cey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;cd$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=
_0$jscomp$0-_i$jscomp$0;cd$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);cd3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=cd3-_j$jscomp$0;cd$jscomp$0[2]=_j$jscomp$0-(cd3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);cd$jscomp$0[3]=cd3;s1$jscomp$0=dex*aey;c$jscomp$0=_util.splitter*dex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dex);alo$jscomp$0=dex-ahi$jscomp$0;c$jscomp$0=_util.splitter*aey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-aey);blo$jscomp$0=aey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*
blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=aex*dey;c$jscomp$0=_util.splitter*aex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-aex);alo$jscomp$0=aex-ahi$jscomp$0;c$jscomp$0=_util.splitter*dey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-dey);blo$jscomp$0=dey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=
s0$jscomp$0-_i$jscomp$0;da$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;da$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);da3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=da3-_j$jscomp$0;da$jscomp$0[2]=_j$jscomp$0-
(da3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);da$jscomp$0[3]=da3;s1$jscomp$0=aex*cey;c$jscomp$0=_util.splitter*aex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-aex);alo$jscomp$0=aex-ahi$jscomp$0;c$jscomp$0=_util.splitter*cey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-cey);blo$jscomp$0=cey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=cex*aey;c$jscomp$0=_util.splitter*cex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-
cex);alo$jscomp$0=cex-ahi$jscomp$0;c$jscomp$0=_util.splitter*aey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-aey);blo$jscomp$0=aey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;ac$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;
_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;ac$jscomp$0[1]=_0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);ac3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=ac3-_j$jscomp$0;ac$jscomp$0[2]=_j$jscomp$0-(ac3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);ac$jscomp$0[3]=ac3;s1$jscomp$0=bex*dey;c$jscomp$0=_util.splitter*bex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-bex);alo$jscomp$0=
bex-ahi$jscomp$0;c$jscomp$0=_util.splitter*dey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-dey);blo$jscomp$0=dey-bhi$jscomp$0;s0$jscomp$0=alo$jscomp$0*blo$jscomp$0-(s1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);t1$jscomp$0=dex*bey;c$jscomp$0=_util.splitter*dex;ahi$jscomp$0=c$jscomp$0-(c$jscomp$0-dex);alo$jscomp$0=dex-ahi$jscomp$0;c$jscomp$0=_util.splitter*bey;bhi$jscomp$0=c$jscomp$0-(c$jscomp$0-bey);blo$jscomp$0=bey-bhi$jscomp$0;t0$jscomp$0=alo$jscomp$0*blo$jscomp$0-
(t1$jscomp$0-ahi$jscomp$0*bhi$jscomp$0-alo$jscomp$0*bhi$jscomp$0-ahi$jscomp$0*blo$jscomp$0);_i$jscomp$0=s0$jscomp$0-t0$jscomp$0;bvirt$jscomp$0=s0$jscomp$0-_i$jscomp$0;bd$jscomp$0[0]=s0$jscomp$0-(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t0$jscomp$0);_j$jscomp$0=s1$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=_j$jscomp$0-s1$jscomp$0;_0$jscomp$0=s1$jscomp$0-(_j$jscomp$0-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);_i$jscomp$0=_0$jscomp$0-t1$jscomp$0;bvirt$jscomp$0=_0$jscomp$0-_i$jscomp$0;bd$jscomp$0[1]=_0$jscomp$0-
(_i$jscomp$0+bvirt$jscomp$0)+(bvirt$jscomp$0-t1$jscomp$0);bd3=_j$jscomp$0+_i$jscomp$0;bvirt$jscomp$0=bd3-_j$jscomp$0;bd$jscomp$0[2]=_j$jscomp$0-(bd3-bvirt$jscomp$0)+(_i$jscomp$0-bvirt$jscomp$0);bd$jscomp$0[3]=bd3;const finlen=(0,_util.sum)((0,_util.sum)((0,_util.negate)(liftadapt(bc$jscomp$0,cd$jscomp$0,bd$jscomp$0,dez,bez,-cez,aex,aey,aez,adet),adet),adet,liftadapt(cd$jscomp$0,da$jscomp$0,ac$jscomp$0,aez,cez,dez,bex,bey,bez,bdet),bdet,abdet),abdet,(0,_util.sum)((0,_util.negate)(liftadapt(da$jscomp$0,
ab$jscomp$0,bd$jscomp$0,bez,dez,aez,cex,cey,cez,cdet),cdet),cdet,liftadapt(ab$jscomp$0,bc$jscomp$0,ac$jscomp$0,cez,aez,-bez,dex,dey,dez,ddet),ddet,cddet),cddet,fin);let det=(0,_util.estimate)(finlen,fin),errbound=isperrboundB*permanent;if(det>=errbound||-det>=errbound)var JSCompiler_inline_result=det;else if(bvirt$jscomp$0=ax-aex,aextail=ax-(aex+bvirt$jscomp$0)+(bvirt$jscomp$0-ex),bvirt$jscomp$0=ay-aey,aeytail=ay-(aey+bvirt$jscomp$0)+(bvirt$jscomp$0-ey),bvirt$jscomp$0=az-aez,aeztail=az-(aez+bvirt$jscomp$0)+
(bvirt$jscomp$0-ez),bvirt$jscomp$0=bx-bex,bextail=bx-(bex+bvirt$jscomp$0)+(bvirt$jscomp$0-ex),bvirt$jscomp$0=by-bey,beytail=by-(bey+bvirt$jscomp$0)+(bvirt$jscomp$0-ey),bvirt$jscomp$0=bz-bez,beztail=bz-(bez+bvirt$jscomp$0)+(bvirt$jscomp$0-ez),bvirt$jscomp$0=cx-cex,cextail=cx-(cex+bvirt$jscomp$0)+(bvirt$jscomp$0-ex),bvirt$jscomp$0=cy-cey,ceytail=cy-(cey+bvirt$jscomp$0)+(bvirt$jscomp$0-ey),bvirt$jscomp$0=cz-cez,ceztail=cz-(cez+bvirt$jscomp$0)+(bvirt$jscomp$0-ez),bvirt$jscomp$0=dx-dex,dextail=dx-(dex+
bvirt$jscomp$0)+(bvirt$jscomp$0-ex),bvirt$jscomp$0=dy-dey,deytail=dy-(dey+bvirt$jscomp$0)+(bvirt$jscomp$0-ey),bvirt$jscomp$0=dz-dez,deztail=dz-(dez+bvirt$jscomp$0)+(bvirt$jscomp$0-ez),0===aextail&&0===aeytail&&0===aeztail&&0===bextail&&0===beytail&&0===beztail&&0===cextail&&0===ceytail&&0===ceztail&&0===dextail&&0===deytail&&0===deztail)JSCompiler_inline_result=det;else{errbound=isperrboundC*permanent+_util.resulterrbound*Math.abs(det);var abeps=aex*beytail+bey*aextail-(aey*bextail+bex*aeytail),bceps=
bex*ceytail+cey*bextail-(bey*cextail+cex*beytail),cdeps=cex*deytail+dey*cextail-(cey*dextail+dex*ceytail),daeps=dex*aeytail+aey*dextail-(dey*aextail+aex*deytail),aceps=aex*ceytail+cey*aextail-(aey*cextail+cex*aeytail),bdeps=bex*deytail+dey*bextail-(bey*dextail+dex*beytail);det+=(bex*bex+bey*bey+bez*bez)*(cez*daeps+dez*aceps+aez*cdeps+(ceztail*da3+deztail*ac3+aeztail*cd3))+(dex*dex+dey*dey+dez*dez)*(aez*bceps-bez*aceps+cez*abeps+(aeztail*bc3-beztail*ac3+ceztail*ab3))-((aex*aex+aey*aey+aez*aez)*(bez*
cdeps-cez*bdeps+dez*bceps+(beztail*cd3-ceztail*bd3+deztail*bc3))+(cex*cex+cey*cey+cez*cez)*(dez*abeps+aez*bdeps+bez*daeps+(deztail*ab3+aeztail*bd3+beztail*da3)))+2*((bex*bextail+bey*beytail+bez*beztail)*(cez*da3+dez*ac3+aez*cd3)+(dex*dextail+dey*deytail+dez*deztail)*(aez*bc3-bez*ac3+cez*ab3)-((aex*aextail+aey*aeytail+aez*aeztail)*(bez*cd3-cez*bd3+dez*bc3)+(cex*cextail+cey*ceytail+cez*ceztail)*(dez*ab3+aez*bd3+bez*da3)));if(det>=errbound||-det>=errbound)var JSCompiler_temp=det;else{let bvirt,c,ahi,
alo,bhi,blo,_i,_j,_0,s1,s0,t1,t0,u3;s1=ax*by;c=_util.splitter*ax;ahi=c-(c-ax);alo=ax-ahi;c=_util.splitter*by;bhi=c-(c-by);blo=by-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=bx*ay;c=_util.splitter*bx;ahi=c-(c-bx);alo=bx-ahi;c=_util.splitter*ay;bhi=c-(c-ay);blo=ay-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;ab$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;ab$jscomp$0[1]=_0-(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;
ab$jscomp$0[2]=_j-(u3-bvirt)+(_i-bvirt);ab$jscomp$0[3]=u3;s1=bx*cy;c=_util.splitter*bx;ahi=c-(c-bx);alo=bx-ahi;c=_util.splitter*cy;bhi=c-(c-cy);blo=cy-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=cx*by;c=_util.splitter*cx;ahi=c-(c-cx);alo=cx-ahi;c=_util.splitter*by;bhi=c-(c-by);blo=by-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;bc$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;bc$jscomp$0[1]=_0-(_i+bvirt)+(bvirt-t1);
u3=_j+_i;bvirt=u3-_j;bc$jscomp$0[2]=_j-(u3-bvirt)+(_i-bvirt);bc$jscomp$0[3]=u3;s1=cx*dy;c=_util.splitter*cx;ahi=c-(c-cx);alo=cx-ahi;c=_util.splitter*dy;bhi=c-(c-dy);blo=dy-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=dx*cy;c=_util.splitter*dx;ahi=c-(c-dx);alo=dx-ahi;c=_util.splitter*cy;bhi=c-(c-cy);blo=cy-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;cd$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;cd$jscomp$0[1]=_0-
(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;cd$jscomp$0[2]=_j-(u3-bvirt)+(_i-bvirt);cd$jscomp$0[3]=u3;s1=dx*ey;c=_util.splitter*dx;ahi=c-(c-dx);alo=dx-ahi;c=_util.splitter*ey;bhi=c-(c-ey);blo=ey-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=ex*dy;c=_util.splitter*ex;ahi=c-(c-ex);alo=ex-ahi;c=_util.splitter*dy;bhi=c-(c-dy);blo=dy-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;de[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;de[1]=
_0-(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;de[2]=_j-(u3-bvirt)+(_i-bvirt);de[3]=u3;s1=ex*ay;c=_util.splitter*ex;ahi=c-(c-ex);alo=ex-ahi;c=_util.splitter*ay;bhi=c-(c-ay);blo=ay-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=ax*ey;c=_util.splitter*ax;ahi=c-(c-ax);alo=ax-ahi;c=_util.splitter*ey;bhi=c-(c-ey);blo=ey-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;ea[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;ea[1]=_0-(_i+bvirt)+
(bvirt-t1);u3=_j+_i;bvirt=u3-_j;ea[2]=_j-(u3-bvirt)+(_i-bvirt);ea[3]=u3;s1=ax*cy;c=_util.splitter*ax;ahi=c-(c-ax);alo=ax-ahi;c=_util.splitter*cy;bhi=c-(c-cy);blo=cy-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=cx*ay;c=_util.splitter*cx;ahi=c-(c-cx);alo=cx-ahi;c=_util.splitter*ay;bhi=c-(c-ay);blo=ay-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;ac$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;ac$jscomp$0[1]=_0-(_i+bvirt)+
(bvirt-t1);u3=_j+_i;bvirt=u3-_j;ac$jscomp$0[2]=_j-(u3-bvirt)+(_i-bvirt);ac$jscomp$0[3]=u3;s1=bx*dy;c=_util.splitter*bx;ahi=c-(c-bx);alo=bx-ahi;c=_util.splitter*dy;bhi=c-(c-dy);blo=dy-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=dx*by;c=_util.splitter*dx;ahi=c-(c-dx);alo=dx-ahi;c=_util.splitter*by;bhi=c-(c-by);blo=by-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;bd$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;bd$jscomp$0[1]=
_0-(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;bd$jscomp$0[2]=_j-(u3-bvirt)+(_i-bvirt);bd$jscomp$0[3]=u3;s1=cx*ey;c=_util.splitter*cx;ahi=c-(c-cx);alo=cx-ahi;c=_util.splitter*ey;bhi=c-(c-ey);blo=ey-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=ex*cy;c=_util.splitter*ex;ahi=c-(c-ex);alo=ex-ahi;c=_util.splitter*cy;bhi=c-(c-cy);blo=cy-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;ce[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;ce[1]=
_0-(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;ce[2]=_j-(u3-bvirt)+(_i-bvirt);ce[3]=u3;s1=dx*ay;c=_util.splitter*dx;ahi=c-(c-dx);alo=dx-ahi;c=_util.splitter*ay;bhi=c-(c-ay);blo=ay-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=ax*dy;c=_util.splitter*ax;ahi=c-(c-ax);alo=ax-ahi;c=_util.splitter*dy;bhi=c-(c-dy);blo=dy-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;da$jscomp$0[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;da$jscomp$0[1]=
_0-(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;da$jscomp$0[2]=_j-(u3-bvirt)+(_i-bvirt);da$jscomp$0[3]=u3;s1=ex*by;c=_util.splitter*ex;ahi=c-(c-ex);alo=ex-ahi;c=_util.splitter*by;bhi=c-(c-by);blo=by-bhi;s0=alo*blo-(s1-ahi*bhi-alo*bhi-ahi*blo);t1=bx*ey;c=_util.splitter*bx;ahi=c-(c-bx);alo=bx-ahi;c=_util.splitter*ey;bhi=c-(c-ey);blo=ey-bhi;t0=alo*blo-(t1-ahi*bhi-alo*bhi-ahi*blo);_i=s0-t0;bvirt=s0-_i;eb[0]=s0-(_i+bvirt)+(bvirt-t0);_j=s1+_i;bvirt=_j-s1;_0=s1-(_j-bvirt)+(_i-bvirt);_i=_0-t1;bvirt=_0-_i;eb[1]=
_0-(_i+bvirt)+(bvirt-t1);u3=_j+_i;bvirt=u3-_j;eb[2]=_j-(u3-bvirt)+(_i-bvirt);eb[3]=u3;const abclen=sum_three_scale(ab$jscomp$0,bc$jscomp$0,ac$jscomp$0,cz,az,-bz,abc),bcdlen=sum_three_scale(bc$jscomp$0,cd$jscomp$0,bd$jscomp$0,dz,bz,-cz,bcd),cdelen=sum_three_scale(cd$jscomp$0,de,ce,ez,cz,-dz,cde),dealen=sum_three_scale(de,ea,da$jscomp$0,az,dz,-ez,dea),eablen=sum_three_scale(ea,ab$jscomp$0,eb,bz,ez,-az,eab),abdlen=sum_three_scale(ab$jscomp$0,bd$jscomp$0,da$jscomp$0,dz,az,bz,abd),bcelen=sum_three_scale(bc$jscomp$0,
ce,eb,ez,bz,cz,bce),cdalen=sum_three_scale(cd$jscomp$0,da$jscomp$0,ac$jscomp$0,az,cz,dz,cda),deblen=sum_three_scale(de,eb,bd$jscomp$0,bz,dz,ez,deb),eaclen=sum_three_scale(ea,ac$jscomp$0,ce,cz,ez,az,eac),deterlen=(0,_util.sum_three)(liftexact(cdelen,cde,bcelen,bce,deblen,deb,bcdlen,bcd,ax,ay,az,adet),adet,liftexact(dealen,dea,cdalen,cda,eaclen,eac,cdelen,cde,bx,by,bz,bdet),bdet,(0,_util.sum_three)(liftexact(eablen,eab,deblen,deb,abdlen,abd,dealen,dea,cx,cy,cz,cdet),cdet,liftexact(abclen,abc,eaclen,
eac,bcelen,bce,eablen,eab,dx,dy,dz,ddet),ddet,liftexact(bcdlen,bcd,abdlen,abd,cdalen,cda,abclen,abc,ex,ey,ez,edet),edet,cddet,cdedet),cdedet,abdet,deter);JSCompiler_temp=deter[deterlen-1]}JSCompiler_inline_result=JSCompiler_temp}}return-JSCompiler_inline_result};exports.inspherefast=function(pax,pay,paz,pbx,pby,pbz,pcx,pcy,pcz,pdx,pdy,pdz,pex,pey,pez){pax-=pex;pbx-=pex;pcx-=pex;pdx-=pex;pay-=pey;pby-=pey;pcy-=pey;pdy-=pey;paz-=pez;pbz-=pez;pcz-=pez;pdz-=pez;pez=pax*pby-pbx*pay;pey=pbx*pcy-pcx*pby;
pex=pcx*pdy-pdx*pcy;const da=pdx*pay-pax*pdy,ac=pax*pcy-pcx*pay,bd=pbx*pdy-pdx*pby;return(pcx*pcx+pcy*pcy+pcz*pcz)*(pdz*pez+paz*bd+pbz*da)-(pdx*pdx+pdy*pdy+pdz*pdz)*(paz*pey-pbz*ac+pcz*pez)+((pax*pax+pay*pay+paz*paz)*(pbz*pex-pcz*bd+pdz*pey)-(pbx*pbx+pby*pby+pbz*pbz)*(pcz*da+pdz*ac+paz*pex))};var _util=require("module$node_modules$robust_predicates$esm$util");const isperrboundA=(16+224*_util.epsilon)*_util.epsilon,isperrboundB=(5+72*_util.epsilon)*_util.epsilon,isperrboundC=(71+1408*_util.epsilon)*
_util.epsilon*_util.epsilon,ab$jscomp$0=(0,_util.vec)(4),bc$jscomp$0=(0,_util.vec)(4),cd$jscomp$0=(0,_util.vec)(4),de=(0,_util.vec)(4),ea=(0,_util.vec)(4),ac$jscomp$0=(0,_util.vec)(4),bd$jscomp$0=(0,_util.vec)(4),ce=(0,_util.vec)(4),da$jscomp$0=(0,_util.vec)(4),eb=(0,_util.vec)(4),abc=(0,_util.vec)(24),bcd=(0,_util.vec)(24),cde=(0,_util.vec)(24),dea=(0,_util.vec)(24),eab=(0,_util.vec)(24),abd=(0,_util.vec)(24),bce=(0,_util.vec)(24),cda=(0,_util.vec)(24),deb=(0,_util.vec)(24),eac=(0,_util.vec)(24),
adet=(0,_util.vec)(1152),bdet=(0,_util.vec)(1152),cdet=(0,_util.vec)(1152),ddet=(0,_util.vec)(1152),edet=(0,_util.vec)(1152),abdet=(0,_util.vec)(2304),cddet=(0,_util.vec)(2304),cdedet=(0,_util.vec)(3456),deter=(0,_util.vec)(5760),_8=(0,_util.vec)(8),_8b=(0,_util.vec)(8),_8c=(0,_util.vec)(8),_16=(0,_util.vec)(16),_24=(0,_util.vec)(24),_48=(0,_util.vec)(48),_48b=(0,_util.vec)(48),_96=(0,_util.vec)(96),_192=(0,_util.vec)(192),_384x=(0,_util.vec)(384),_384y=(0,_util.vec)(384),_384z=(0,_util.vec)(384),
_768=(0,_util.vec)(768),xdet=(0,_util.vec)(96),ydet=(0,_util.vec)(96),zdet=(0,_util.vec)(96),fin=(0,_util.vec)(1152)}
//# sourceMappingURL=module$node_modules$robust_predicates$esm$insphere.js.map
