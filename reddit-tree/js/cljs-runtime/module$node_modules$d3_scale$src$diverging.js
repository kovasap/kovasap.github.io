shadow$provide.module$node_modules$d3_scale$src$diverging=function(global,require,module,exports){function transformer(){function scale(x){return isNaN(x=+x)?unknown:(x=.5+((x=+transform(x))-t1)*(s*x<s*t1?k10:k21),interpolator(clamp?Math.max(0,Math.min(1,x)):x))}function range(interpolate){return function(_){var r0,r1,r2;return arguments.length?([r0,r1,r2]=_,interpolator=(0,_d3Interpolate.piecewise)(interpolate,[r0,r1,r2]),scale):[interpolator(0),interpolator(.5),interpolator(1)]}}var x0=0,x1=.5,
x2=1,s=1,t0,t1,t2,k10,k21,interpolator=_continuous.identity,transform,clamp=!1,unknown;scale.domain=function(_){return arguments.length?([x0,x1,x2]=_,t0=transform(x0=+x0),t1=transform(x1=+x1),t2=transform(x2=+x2),k10=t0===t1?0:.5/(t1-t0),k21=t1===t2?0:.5/(t2-t1),s=t1<t0?-1:1,scale):[x0,x1,x2]};scale.clamp=function(_){return arguments.length?(clamp=!!_,scale):clamp};scale.interpolator=function(_){return arguments.length?(interpolator=_,scale):interpolator};scale.range=range(_d3Interpolate.interpolate);
scale.rangeRound=range(_d3Interpolate.interpolateRound);scale.unknown=function(_){return arguments.length?(unknown=_,scale):unknown};return function(t){transform=t;t0=t(x0);t1=t(x1);t2=t(x2);k10=t0===t1?0:.5/(t1-t0);k21=t1===t2?0:.5/(t2-t1);s=t1<t0?-1:1;return scale}}function diverging(){var scale=(0,_linear.linearish)(transformer()(_continuous.identity));scale.copy=function(){return(0,_sequential.copy)(scale,diverging())};return _init.initInterpolator.apply(scale,arguments)}function divergingLog(){var scale=
(0,_log.loggish)(transformer()).domain([.1,1,10]);scale.copy=function(){return(0,_sequential.copy)(scale,divergingLog()).base(scale.base())};return _init.initInterpolator.apply(scale,arguments)}function divergingSymlog(){var scale=(0,_symlog.symlogish)(transformer());scale.copy=function(){return(0,_sequential.copy)(scale,divergingSymlog()).constant(scale.constant())};return _init.initInterpolator.apply(scale,arguments)}function divergingPow(){var scale=(0,_pow.powish)(transformer());scale.copy=function(){return(0,
_sequential.copy)(scale,divergingPow()).exponent(scale.exponent())};return _init.initInterpolator.apply(scale,arguments)}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=diverging;exports.divergingLog=divergingLog;exports.divergingSymlog=divergingSymlog;exports.divergingPow=divergingPow;exports.divergingSqrt=function(){return divergingPow.apply(null,arguments).exponent(.5)};var _d3Interpolate=require("module$node_modules$d3_interpolate$src$index"),_continuous=require("module$node_modules$d3_scale$src$continuous"),
_init=require("module$node_modules$d3_scale$src$init"),_linear=require("module$node_modules$d3_scale$src$linear"),_log=require("module$node_modules$d3_scale$src$log"),_sequential=require("module$node_modules$d3_scale$src$sequential"),_symlog=require("module$node_modules$d3_scale$src$symlog"),_pow=require("module$node_modules$d3_scale$src$pow")}
//# sourceMappingURL=module$node_modules$d3_scale$src$diverging.js.map
