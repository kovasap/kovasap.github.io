{
"version":3,
"file":"module$node_modules$delaunator$index.js",
"lineCount":18,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA4YjGC,QAASA,KAAI,CAACC,EAAD,CAAKC,EAAL,CAASC,EAAT,CAAaC,EAAb,CAAiB,CACjBH,EAALI,EAAUF,EACLD,GAALI,EAAUF,EAChB,OAAOC,GAAP,CAAYA,EAAZ,CAAiBC,EAAjB,CAAsBA,EAHM,CAgD9BC,QAASA,UAAS,CAACC,GAAD,CAAMC,KAAN,CAAaC,IAAb,CAAmBC,KAAnB,CAA0B,CAC1C,GAAoB,EAApB,EAAIA,KAAJ,CAAYD,IAAZ,CACE,IAAK,IAAIE,EAAIF,IAAJE,CAAW,CAApB,CAAuBA,CAAvB,EAA4BD,KAA5B,CAAmCC,CAAA,EAAnC,CAAwC,CAKtC,IAJA,IAAMC,KAAOL,GAAA,CAAII,CAAJ,CAAb,CACME,SAAWL,KAAA,CAAMI,IAAN,CADjB,CAEIE,EAAIH,CAAJG,CAAQ,CAEZ,CAAOA,CAAP,EAAYL,IAAZ,EAAoBD,KAAA,CAAMD,GAAA,CAAIO,CAAJ,CAAN,CAApB,CAAoCD,QAApC,CAAA,CAA8CN,GAAA,CAAIO,CAAJ,CAAQ,CAAR,CAAA,CAAaP,GAAA,CAAIO,CAAA,EAAJ,CAE3DP,IAAA,CAAIO,CAAJ,CAAQ,CAAR,CAAA,CAAaF,IAPyB,CAD1C,IAUO,CAEDD,CAAAA,CAAIF,IAAJE,CAAW,CACXG,KAAAA,CAAIJ,KACRK,KAAA,CAAKR,GAAL,CAHeE,IAGf,CAHsBC,KAGtB,EAH+B,CAG/B,CAAkBC,CAAlB,CACIH,MAAA,CAAMD,GAAA,CAAIE,IAAJ,CAAN,CAAJ,CAAuBD,KAAA,CAAMD,GAAA,CAAIG,KAAJ,CAAN,CAAvB,EAA0CK,IAAA,CAAKR,GAAL,CAAUE,IAAV,CAAgBC,KAAhB,CACtCF,MAAA,CAAMD,GAAA,CAAII,CAAJ,CAAN,CAAJ,CAAoBH,KAAA,CAAMD,GAAA,CAAIG,KAAJ,CAAN,CAApB,EAAuCK,IAAA,CAAKR,GAAL;AAAUI,CAAV,CAAaD,KAAb,CACnCF,MAAA,CAAMD,GAAA,CAAIE,IAAJ,CAAN,CAAJ,CAAuBD,KAAA,CAAMD,GAAA,CAAII,CAAJ,CAAN,CAAvB,EAAsCI,IAAA,CAAKR,GAAL,CAAUE,IAAV,CAAgBE,CAAhB,CAChCC,SAAAA,CAAOL,GAAA,CAAII,CAAJ,CAGb,KAFME,CAEN,CAFiBL,KAAA,CAAMI,QAAN,CAEjB,CAAA,CAAA,CAAa,CACX,EAAGD,EAAA,EAAH,OAAeH,KAAA,CAAMD,GAAA,CAAII,CAAJ,CAAN,CAAf,CAA+BE,CAA/B,CAEA,GAAGC,KAAA,EAAH,OAAeN,KAAA,CAAMD,GAAA,CAAIO,IAAJ,CAAN,CAAf,CAA+BD,CAA/B,CAEA,IAAIC,IAAJ,CAAQH,CAAR,CAAW,KACXI,KAAA,CAAKR,GAAL,CAAUI,CAAV,CAAaG,IAAb,CANW,CASbP,GAAA,CAAIE,IAAJ,CAAW,CAAX,CAAA,CAAgBF,GAAA,CAAIO,IAAJ,CAChBP,IAAA,CAAIO,IAAJ,CAAA,CAASF,QAELF,MAAJ,CAAYC,CAAZ,CAAgB,CAAhB,EAAqBG,IAArB,CAAyBL,IAAzB,EACEH,SAAA,CAAUC,GAAV,CAAeC,KAAf,CAAsBG,CAAtB,CAAyBD,KAAzB,CACA,CAAAJ,SAAA,CAAUC,GAAV,CAAeC,KAAf,CAAsBC,IAAtB,CAA4BK,IAA5B,CAAgC,CAAhC,CAFF,GAIER,SAAA,CAAUC,GAAV,CAAeC,KAAf,CAAsBC,IAAtB,CAA4BK,IAA5B,CAAgC,CAAhC,CACA,CAAAR,SAAA,CAAUC,GAAV,CAAeC,KAAf,CAAsBG,CAAtB,CAAyBD,KAAzB,CALF,CAvBK,CAXmC,CA4C5CK,QAASA,KAAI,CAACC,GAAD,CAAML,CAAN,CAASG,CAAT,CAAY,CACvB,MAAMG,IAAMD,GAAA,CAAIL,CAAJ,CACZK,IAAA,CAAIL,CAAJ,CAAA,CAASK,GAAA,CAAIF,CAAJ,CACTE,IAAA,CAAIF,CAAJ,CAAA,CAASG,GAHc,CAMzBC,QAASA,YAAW,CAACC,CAAD,CAAI,CACtB,MAAOA,EAAA,CAAE,CAAF,CADe,CAIxBC,QAASA,YAAW,CAACD,CAAD,CAAI,CACtB,MAAOA,EAAA,CAAE,CAAF,CADe;AA/exBE,MAAOC,CAAAA,cAAP,CAAsBxB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CyB,MAAO,CAAA,CADoC,CAA7C,CAGAzB,QAAQ0B,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIC,kBAAoB7B,OAAA,CAAQ,6CAAR,CAExB,OAAM8B,QAAUC,IAAKC,CAAAA,GAAL,CAAS,CAAT,CAAY,GAAZ,CAAhB,CACMC,WAAa,IAAIC,WAAJ,CAAgB,GAAhB,CAEnB,MAAMC,WAAN,CACSC,WAAI,CAACC,MAAD,CAASC,IAAA,CAAOhB,WAAhB,CAA6BiB,IAAA,CAAOf,WAApC,CAAiD,CAC1D,MAAMgB,EAAIH,MAAOI,CAAAA,MAAjB,CACMC,OAAS,IAAIC,YAAJ,CAAqB,CAArB,CAAiBH,CAAjB,CAEf,KAAK,IAAIzB,EAAI,CAAb,CAAgBA,CAAhB,CAAoByB,CAApB,CAAuBzB,CAAA,EAAvB,CAA4B,CAC1B,MAAMQ,EAAIc,MAAA,CAAOtB,CAAP,CACV2B,OAAA,CAAO,CAAP,CAAW3B,CAAX,CAAA,CAAgBuB,IAAA,CAAKf,CAAL,CAChBmB,OAAA,CAAO,CAAP,CAAW3B,CAAX,CAAe,CAAf,CAAA,CAAoBwB,IAAA,CAAKhB,CAAL,CAHM,CAM5B,MAAO,KAAIY,UAAJ,CAAeO,MAAf,CAVmD,CAa5DE,WAAW,CAACF,MAAD,CAAS,CAClB,MAAMF,EAAIE,MAAOD,CAAAA,MAAXD,EAAqB,CAC3B,IAAQ,CAAR,CAAIA,CAAJ;AAAkC,QAAlC,GAAa,MAAOE,OAAA,CAAO,CAAP,CAApB,CAA4C,KAAUG,MAAJ,CAAU,qCAAV,CAAN,CAC5C,IAAKH,CAAAA,MAAL,CAAcA,MAERI,OAAAA,CAAef,IAAKgB,CAAAA,GAAL,CAAS,CAAT,CAAaP,CAAb,CAAiB,CAAjB,CAAoB,CAApB,CACrB,KAAKQ,CAAAA,UAAL,CAAkB,IAAId,WAAJ,CAA+B,CAA/B,CAAgBY,MAAhB,CAClB,KAAKG,CAAAA,UAAL,CAAkB,IAAIC,UAAJ,CAA8B,CAA9B,CAAeJ,MAAf,CAElB,KAAKK,CAAAA,SAAL,CAAiBpB,IAAKqB,CAAAA,IAAL,CAAUrB,IAAKsB,CAAAA,IAAL,CAAUb,CAAV,CAAV,CACjB,KAAKc,CAAAA,SAAL,CAAiB,IAAIpB,WAAJ,CAAgBM,CAAhB,CAEjB,KAAKe,CAAAA,SAAL,CAAiB,IAAIrB,WAAJ,CAAgBM,CAAhB,CAEjB,KAAKgB,CAAAA,QAAL,CAAgB,IAAItB,WAAJ,CAAgBM,CAAhB,CAEhB,KAAKiB,CAAAA,SAAL,CAAgDC,CAA/B,IAAIR,UAAJ,CAAe,IAAKC,CAAAA,SAApB,CAA+BO,EAAAA,IAA/B,CAAoC,EAApC,CAGjB,KAAKC,CAAAA,IAAL,CAAY,IAAIzB,WAAJ,CAAgBM,CAAhB,CACZ,KAAKoB,CAAAA,MAAL,CAAc,IAAIjB,YAAJ,CAAiBH,CAAjB,CACd,KAAKqB,CAAAA,MAAL,EArBkB,CAwBpBA,MAAM,EAAG,CACP,MAAM,CACJnB,MADI;AAEJ,UAAWoB,QAFP,CAGJ,UAAWC,QAHP,CAIJ,SAAUC,OAJN,CAKJ,UAAWC,QALP,CAAA,CAMF,IACJ,KAAMzB,EAAIE,MAAOD,CAAAA,MAAXD,EAAqB,CAA3B,CAEI0B,KAAOC,QAFX,CAGIC,KAAOD,QAHX,CAIIE,KAAO,CAACF,QAJZ,CAKIG,KAAO,CAACH,QAEZ,KAAK,IAAIpD,WAAI,CAAb,CAAgBA,UAAhB,CAAoByB,CAApB,CAAuBzB,UAAA,EAAvB,CAA4B,CAC1B,IAAMwD,EAAI7B,MAAA,CAAO,CAAP,CAAW3B,UAAX,CACJyD,KAAAA,gCAAI9B,MAAA,CAAO,CAAP,CAAW3B,UAAX,CAAe,CAAf,CACNwD,EAAJ,CAAQL,IAAR,GAAcA,IAAd,CAAqBK,CAArB,CACIC,gCAAJ,CAAQJ,IAAR,GAAcA,IAAd,CAAqBI,+BAArB,CACID,EAAJ,CAAQF,IAAR,GAAcA,IAAd,CAAqBE,CAArB,CACIC,gCAAJ,CAAQF,IAAR,GAAcA,IAAd,CAAqBE,+BAArB,CACA,KAAKb,CAAAA,IAAL,CAAU5C,UAAV,CAAA;AAAeA,UAPW,CAUtB0D,IAAAA,EAAMP,IAANO,CAAaJ,IAAbI,EAAqB,CACrBC,KAAAA,EAAMN,IAANM,CAAaJ,IAAbI,EAAqB,CACvBC,KAAAA,CAAUR,QAGd,KAASpD,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoByB,CAApB,CAAuBzB,IAAA,EAAvB,CAGE,GAFM6D,UAEF,CAFMzE,IAAA,CAAKsE,IAAL,CAASC,IAAT,CAAahC,MAAA,CAAO,CAAP,CAAW3B,IAAX,CAAb,CAA4B2B,MAAA,CAAO,CAAP,CAAW3B,IAAX,CAAe,CAAf,CAA5B,CAEN,CAAA6D,UAAA,CAAID,IAAR,CAAiB,CACf,IAAAE,GAAK9D,IACL4D,KAAA,CAAUC,UAFK,CAMbE,IAAAA,CAAMpC,MAAA,CAAO,CAAP,CAAWmC,EAAX,CACNE,KAAAA,CAAMrC,MAAA,CAAO,CAAP,CAAWmC,EAAX,CAAgB,CAAhB,CACZF,KAAA,CAAUR,QAEV,KAASpD,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoByB,CAApB,CAAuBzB,IAAA,EAAvB,CACE,GAAIA,IAAJ,GAAU8D,EAAV,GACMD,UAEF,CAFMzE,IAAA,CAAK2E,IAAL,CAAUC,IAAV,CAAerC,MAAA,CAAO,CAAP,CAAW3B,IAAX,CAAf,CAA8B2B,MAAA,CAAO,CAAP,CAAW3B,IAAX,CAAe,CAAf,CAA9B,CAEN,CAAA6D,UAAA,CAAID,IAAJ,EAAmB,CAAnB,CAAeC,UAHnB,EAG0B,CACxB,IAAAI,GAAKjE,IACL4D,KAAA,CAAUC,UAFc,CAMxBK,IAAAA,CAAMvC,MAAA,CAAO,CAAP,CAAWsC,EAAX,CACNE,KAAAA,CAAMxC,MAAA,CAAO,CAAP,CAAWsC,EAAX,CAAgB,CAAhB,CACNG,gCAAAA,CAAYhB,QAEhB,KAASpD,UAAT,CAAa,CAAb,CAAgBA,UAAhB;AAAoByB,CAApB,CAAuBzB,UAAA,EAAvB,CACE,GAAIA,UAAJ,GAAU8D,EAAV,EAAgB9D,UAAhB,GAAsBiE,EAAtB,CAAA,CAmTExE,CAAAA,CAlT+ByE,IAkT/BzE,CAlTqBsE,IAmT3B,KAAMrE,GAnToCyE,IAmTpCzE,CAnT0BsE,IAoT1BK,KAAAA,gCApTyC1C,MAAA+B,CAAO,CAAPA,CAAW1D,UAAX0D,CAoTzCW,CApTqBN,IAqT3B,KAAMO,GArTwD3C,MAAAgC,CAAO,CAAPA,CAAW3D,UAAX2D,CAAe,CAAfA,CAqTxDW,CArT0BN,IAqThC,CACMO,GAAK9E,CAAL8E,CAAU9E,CAAV8E,CAAe7E,EAAf6E,CAAoB7E,EAD1B,CAEM8E,GAAKH,+BAALG,CAAUH,+BAAVG,CAAeF,EAAfE,CAAoBF,EAF1B,CAGMT,EAAI,EAAJA,EAAWpE,CAAXoE,CAAgBS,EAAhBT,CAAqBnE,EAArBmE,CAA0BQ,+BAA1BR,CACAL,GAAAA,EAAKc,EAALd,CAAUe,EAAVf,CAAe9D,EAAf8D,CAAoBgB,EAApBhB,EAA0BK,CAC1BJ,EAAAA,EAAKhE,CAALgE,CAAUe,EAAVf,CAAeY,+BAAfZ,CAAoBc,EAApBd,EAA0BI,CA1TtBY,EAAAA,CA2THjB,EA3TGiB,CA2TCjB,EA3TDiB,CA2TKhB,CA3TLgB,CA2TShB,CAzTf,IAAIgB,CAAJ,CAAQL,+BAAR,CAAmB,CACjB,IAAAM,GAAK1E,UACLoE,gCAAA,CAAYK,CAFK,CAHnB,CASEE,UAAAA,CAAMhD,MAAA,CAAO,CAAP,CAAW+C,EAAX,CACNE;CAAAA,CAAMjD,MAAA,CAAO,CAAP,CAAW+C,EAAX,CAAgB,CAAhB,CAEV,IAAkBtB,QAAlB,GAAIgB,+BAAJ,CAA4B,CAG1B,IAASpE,EAAT,CAAa,CAAb,CAAgBA,EAAhB,CAAoByB,CAApB,CAAuBzB,EAAA,EAAvB,CACE,IAAK6C,CAAAA,MAAL,CAAY7C,EAAZ,CAAA,CAAiB2B,MAAA,CAAO,CAAP,CAAW3B,EAAX,CAAjB,CAAiC2B,MAAA,CAAO,CAAP,CAAjC,EAA8CA,MAAA,CAAO,CAAP,CAAW3B,EAAX,CAAe,CAAf,CAA9C,CAAkE2B,MAAA,CAAO,CAAP,CAGpEhC,UAAA,CAAU,IAAKiD,CAAAA,IAAf,CAAqB,IAAKC,CAAAA,MAA1B,CAAkC,CAAlC,CAAqCpB,CAArC,CAAyC,CAAzC,CACMoD,GAAAA,CAAO,IAAI1D,WAAJ,CAAgBM,CAAhB,CACTtB,GAAAA,CAAI,CAER,KAAK,IAAIH,EAAI,CAAR,CAAW8E,GAAK,CAAC1B,QAAtB,CAAgCpD,CAAhC,CAAoCyB,CAApC,CAAuCzB,CAAA,EAAvC,CACQ+E,EAEN,CAFW,IAAKnC,CAAAA,IAAL,CAAU5C,CAAV,CAEX,CAAI,IAAK6C,CAAAA,MAAL,CAAYkC,EAAZ,CAAJ,CAAsBD,EAAtB,GACED,EAAA,CAAK1E,EAAA,EAAL,CACA,CADY4E,EACZ,CAAAD,EAAA,CAAK,IAAKjC,CAAAA,MAAL,CAAYkC,EAAZ,CAFP,CAMF,KAAKF,CAAAA,IAAL,CAAYA,EAAKG,CAAAA,QAAL,CAAc,CAAd,CAAiB7E,EAAjB,CACZ,KAAK8E,CAAAA,SAAL,CAAiB,IAAI9D,WAAJ,CAAgB,CAAhB,CACjB,KAAK+D,CAAAA,SAAL,CAAiB,IAAI/D,WAAJ,CAAgB,CAAhB,CAtBS,CAA5B,IAAA,CA2BoE,CAApE,CAAI,CAAC,CAAA,CAAGL,iBAAkBqE,CAAAA,QAAtB,EAAgCpB,IAAhC,CAAqCC,IAArC,CAA0CE,IAA1C,CAA+CC,IAA/C,CAAoDQ,UAApD,CAAyDC,CAAzD,CAAJ,GACQ5E,+BAQN;AARUiE,EAQV,CAPMT,+BAON,CAPUU,IAOV,CANMT,EAMN,CANUU,IAMV,CALAF,EAKA,CALKS,EAKL,CAJAR,IAIA,CAJMS,UAIN,CAHAR,IAGA,CAHMS,CAGN,CAFAF,EAEA,CAFK1E,+BAEL,CADA2E,UACA,CADMnB,+BACN,CAAAoB,CAAA,CAAMnB,EATR,CAyRIhE,gCAAAA,CA7QkCyE,IA6QlCzE,CA7QwBsE,IA8QxBrE,gCAAAA,CA9QuCyE,IA8QvCzE,CA9Q6BsE,IA+Q7BK,GAAAA,CA/Q4CM,UA+Q5CN,CA/QwBN,IAgRxBO,GAAAA,CAhRiDM,CAgRjDN,CAhR6BN,IAiR7BO,GAAAA,CAAK9E,+BAAL8E,CAAU9E,+BAAV8E,CAAe7E,+BAAf6E,CAAoB7E,+BACpB8E,EAAAA,CAAKH,EAALG,CAAUH,EAAVG,CAAeF,EAAfE,CAAoBF,EACpBT,GAAAA,CAAI,EAAJA,EAAWpE,+BAAXoE,CAAgBS,EAAhBT,CAAqBnE,+BAArBmE,CAA0BQ,EAA1BR,CAGN,gCAAA;AAtR8BE,IAsR9B,EAFgBO,EAEhB,CAFqBC,EAErB,CAF0B7E,+BAE1B,CAF+B8E,CAE/B,EAFqCX,EAErC,gCAAA,CAtRmCG,IAsRnC,EADgBvE,+BAChB,CADqB+E,CACrB,CAD0BH,EAC1B,CAD+BE,EAC/B,EADqCV,EApRnC,KAAKuB,CAAAA,GAAL,CAAkB5B,+BAClB,KAAK6B,CAAAA,GAAL,CAAkB5B,+BAElB,KAASzD,EAAT,CAAa,CAAb,CAAgBA,EAAhB,CAAoByB,CAApB,CAAuBzB,EAAA,EAAvB,CACE,IAAK6C,CAAAA,MAAL,CAAY7C,EAAZ,CAAA,CAAiBZ,IAAA,CAAKuC,MAAA,CAAO,CAAP,CAAW3B,EAAX,CAAL,CAAoB2B,MAAA,CAAO,CAAP,CAAW3B,EAAX,CAAe,CAAf,CAApB,CAA8CwD,+BAA9C,CAAwDC,+BAAxD,CAInB9D,UAAA,CAAU,IAAKiD,CAAAA,IAAf,CAAqB,IAAKC,CAAAA,MAA1B,CAAkC,CAAlC,CAAqCpB,CAArC,CAAyC,CAAzC,CAEA,KAAK6D,CAAAA,UAAL,CAAkBxB,EACdyB,EAAAA,CAAW,CACfvC,SAAA,CAASc,EAAT,CAAA,CAAef,QAAA,CAAS2B,EAAT,CAAf,CAA8BT,EAC9BjB,SAAA,CAASiB,EAAT,CAAA,CAAelB,QAAA,CAASe,EAAT,CAAf,CAA8BY,EAC9B1B,SAAA,CAAS0B,EAAT,CAAA,CAAe3B,QAAA,CAASkB,EAAT,CAAf,CAA8BH,EAC9Bb,QAAA,CAAQa,EAAR,CAAA;AAAc,CACdb,QAAA,CAAQgB,EAAR,CAAA,CAAc,CACdhB,QAAA,CAAQyB,EAAR,CAAA,CAAc,CACdxB,SAASP,CAAAA,IAAT,CAAc,EAAd,CACAO,SAAA,CAAS,IAAKsC,CAAAA,QAAL,CAAczB,IAAd,CAAmBC,IAAnB,CAAT,CAAA,CAAoCF,EACpCZ,SAAA,CAAS,IAAKsC,CAAAA,QAAL,CAActB,IAAd,CAAmBC,IAAnB,CAAT,CAAA,CAAoCF,EACpCf,SAAA,CAAS,IAAKsC,CAAAA,QAAL,CAAcb,UAAd,CAAmBC,CAAnB,CAAT,CAAA,CAAoCF,EACpC,KAAKe,CAAAA,YAAL,CAAoB,CAEpB,KAAKC,CAAAA,YAAL,CAAkB5B,EAAlB,CAAsBG,EAAtB,CAA0BS,EAA1B,CAA8B,EAA9B,CAAkC,EAAlC,CAAsC,EAAtC,CAEA,KAAK,IAAIiB,EAAI,CAAR,CAAWC,EAAX,CAAeC,EAApB,CAAwBF,CAAxB,CAA4B,IAAK/C,CAAAA,IAAKlB,CAAAA,MAAtC,CAA8CiE,CAAA,EAA9C,CAAmD,CAC3C3F,IAAAA,CAAI,IAAK4C,CAAAA,IAAL,CAAU+C,CAAV,CACJnC,KAAAA,CAAI7B,MAAA,CAAO,CAAP,CAAW3B,IAAX,CACJyD,KAAAA,CAAI9B,MAAA,CAAO,CAAP,CAAW3B,IAAX,CAAe,CAAf,CAEV,IAAQ,CAAR,CAAI2F,CAAJ,EAAa3E,IAAK8E,CAAAA,GAAL,CAAStC,IAAT,CAAaoC,EAAb,CAAb,EAAiC7E,OAAjC,EAA4CC,IAAK8E,CAAAA,GAAL,CAASrC,IAAT,CAAaoC,EAAb,CAA5C,EAAgE9E,OAAhE,CAAyE,QACzE6E,GAAA,CAAKpC,IACLqC,GAAA,CAAKpC,IAEL,IAAIzD,IAAJ,GAAU8D,EAAV,EAAgB9D,IAAhB,GAAsBiE,EAAtB,EAA4BjE,IAA5B,GAAkC0E,EAAlC,CAAsC,QAElCqB,KAAAA,CAAQ,CAEZ,KAAK,IAAI5F,EAAI,CAAR,CAAW6F,IAAM,IAAKR,CAAAA,QAAL,CAAchC,IAAd,CAAiBC,IAAjB,CAAtB,CAA2CtD,CAA3C;AAA+C,IAAKiC,CAAAA,SAApD,GACE2D,IACI,CADI7C,QAAA,EAAU8C,GAAV,CAAgB7F,CAAhB,EAAqB,IAAKiC,CAAAA,SAA1B,CACJ,CAAU,EAAV,GAAA2D,IAAA,EAAgBA,IAAhB,GAA0B/C,QAAA,CAAS+C,IAAT,CAFhC,EAA+D5F,CAAA,EAA/D,EAMI8F,UAAAA,CADJF,IACIE,CADIlD,QAAA,CAASgD,IAAT,CACR,KACIG,CAEJ,KAAA,CAAOA,CAAA,CAAIlD,QAAA,CAASiD,UAAT,CAAJ,CAA8H,CAA9H,EAAiB,CAAC,CAAA,CAAGnF,iBAAkBqE,CAAAA,QAAtB,EAAgC3B,IAAhC,CAAmCC,IAAnC,CAAsC9B,MAAA,CAAO,CAAP,CAAWsE,UAAX,CAAtC,CAAqDtE,MAAA,CAAO,CAAP,CAAWsE,UAAX,CAAe,CAAf,CAArD,CAAwEtE,MAAA,CAAO,CAAP,CAAWuE,CAAX,CAAxE,CAAuFvE,MAAA,CAAO,CAAP,CAAWuE,CAAX,CAAe,CAAf,CAAvF,CAAxB,CAAA,CAGE,GAFAD,UAEI,CAFAC,CAEA,CAAAD,UAAA,GAAMF,IAAV,CAAiB,CACfE,UAAA,CAAI,EACJ,MAFe,CAMnB,GAAU,EAAV,GAAIA,UAAJ,CAAA,CAGIE,CAAAA,CAAI,IAAKT,CAAAA,YAAL,CAAkBO,UAAlB,CAAqBjG,IAArB,CAAwBgD,QAAA,CAASiD,UAAT,CAAxB,CAAqC,EAArC,CAAyC,EAAzC,CAA6ChD,OAAA,CAAQgD,UAAR,CAA7C,CAGRhD,QAAA,CAAQjD,IAAR,CAAA,CAAa,IAAKoG,CAAAA,SAAL,CAAeD,CAAf,CAAmB,CAAnB,CACblD,QAAA,CAAQgD,UAAR,CAAA,CAAaE,CAEbZ,EAAA,EAIA,KAFI9D,+BAEJ;AAFQuB,QAAA,CAASiD,UAAT,CAER,CAAOC,CAAA,CAAIlD,QAAA,CAASvB,+BAAT,CAAJ,CAA6H,CAA7H,CAAiB,CAAC,CAAA,CAAGX,iBAAkBqE,CAAAA,QAAtB,EAAgC3B,IAAhC,CAAmCC,IAAnC,CAAsC9B,MAAA,CAAO,CAAP,CAAWF,+BAAX,CAAtC,CAAqDE,MAAA,CAAO,CAAP,CAAWF,+BAAX,CAAe,CAAf,CAArD,CAAwEE,MAAA,CAAO,CAAP,CAAWuE,CAAX,CAAxE,CAAuFvE,MAAA,CAAO,CAAP,CAAWuE,CAAX,CAAe,CAAf,CAAvF,CAAxB,CAAA,CACEC,CAKA,CALI,IAAKT,CAAAA,YAAL,CAAkBjE,+BAAlB,CAAqBzB,IAArB,CAAwBkG,CAAxB,CAA2BjD,OAAA,CAAQjD,IAAR,CAA3B,CAAuC,EAAvC,CAA2CiD,OAAA,CAAQxB,+BAAR,CAA3C,CAKJ,CAJAwB,OAAA,CAAQjD,IAAR,CAIA,CAJa,IAAKoG,CAAAA,SAAL,CAAeD,CAAf,CAAmB,CAAnB,CAIb,CAHAnD,QAAA,CAASvB,+BAAT,CAGA,CAHcA,+BAGd,CADA8D,CAAA,EACA,CAAA9D,+BAAA,CAAIyE,CAIN,IAAID,UAAJ;AAAUF,IAAV,CACE,IAAA,CAAOG,CAAA,CAAInD,QAAA,CAASkD,UAAT,CAAJ,CAA6H,CAA7H,CAAiB,CAAC,CAAA,CAAGnF,iBAAkBqE,CAAAA,QAAtB,EAAgC3B,IAAhC,CAAmCC,IAAnC,CAAsC9B,MAAA,CAAO,CAAP,CAAWuE,CAAX,CAAtC,CAAqDvE,MAAA,CAAO,CAAP,CAAWuE,CAAX,CAAe,CAAf,CAArD,CAAwEvE,MAAA,CAAO,CAAP,CAAWsE,UAAX,CAAxE,CAAuFtE,MAAA,CAAO,CAAP,CAAWsE,UAAX,CAAe,CAAf,CAAvF,CAAxB,CAAA,CACEE,CAQA,CARI,IAAKT,CAAAA,YAAL,CAAkBQ,CAAlB,CAAqBlG,IAArB,CAAwBiG,UAAxB,CAA2B,EAA3B,CAA+BhD,OAAA,CAAQgD,UAAR,CAA/B,CAA2ChD,OAAA,CAAQiD,CAAR,CAA3C,CAQJ,CANA,IAAKE,CAAAA,SAAL,CAAeD,CAAf,CAAmB,CAAnB,CAMA,CAJAlD,OAAA,CAAQiD,CAAR,CAIA,CAJaC,CAIb,CAHAnD,QAAA,CAASiD,UAAT,CAGA,CAHcA,UAGd,CADAV,CAAA,EACA,CAAAU,UAAA,CAAIC,CAKR,KAAKZ,CAAAA,UAAL,CAAkBvC,QAAA,CAAS/C,IAAT,CAAlB,CAAgCiG,UAChCjD,SAAA,CAASiD,UAAT,CAAA,CAAclD,QAAA,CAAStB,+BAAT,CAAd,CAA4BzB,IAC5BgD,SAAA,CAAShD,IAAT,CAAA,CAAcyB,+BAEdyB,SAAA,CAAS,IAAKsC,CAAAA,QAAL,CAAchC,IAAd,CAAiBC,IAAjB,CAAT,CAAA,CAAgCzD,IAChCkD,SAAA,CAAS,IAAKsC,CAAAA,QAAL,CAAc7D,MAAA,CAAO,CAAP;AAAWsE,UAAX,CAAd,CAA6BtE,MAAA,CAAO,CAAP,CAAWsE,UAAX,CAAe,CAAf,CAA7B,CAAT,CAAA,CAA4DA,UA3C5D,CA/BiD,CA6EnD,IAAKpB,CAAAA,IAAL,CAAY,IAAI1D,WAAJ,CAAgBoE,CAAhB,CAEZ,KAAK,IAAIvF,EAAI,CAAR,CAAWiG,EAAI,IAAKX,CAAAA,UAAzB,CAAqCtF,CAArC,CAAyCuF,CAAzC,CAAmDvF,CAAA,EAAnD,CACE,IAAK6E,CAAAA,IAAL,CAAU7E,CAAV,CACA,CADeiG,CACf,CAAAA,CAAA,CAAIjD,QAAA,CAASiD,CAAT,CAIN,KAAKhB,CAAAA,SAAL,CAAiB,IAAKhD,CAAAA,UAAW+C,CAAAA,QAAhB,CAAyB,CAAzB,CAA4B,IAAKS,CAAAA,YAAjC,CACjB,KAAKP,CAAAA,SAAL,CAAiB,IAAKhD,CAAAA,UAAW8C,CAAAA,QAAhB,CAAyB,CAAzB,CAA4B,IAAKS,CAAAA,YAAjC,CAxJjB,CAtEO,CAiOTD,QAAQ,CAAChC,CAAD,CAAIC,CAAJ,CAAO,CACNzC,IAAAA,sBAAAA,IAAuBwC,EAAA,EAAI,IAAK4B,CAAAA,GAAK3B,EAAA,EAAI,IAAK4B,CAAAA,GAmH7C5F,EAAJe,EAAUQ,IAAK8E,CAAAA,GAAL,CAASrG,CAAT,CAAVe,CAAyBQ,IAAK8E,CAAAA,GAAL,CAASpG,CAAT,CAnH7B,OAAOsB,sBAAKqF,CAAAA,KAAL,CAAA,IAAA,CAAArF,qBAAA,EAoHI,CAAL,CAAAtB,CAAA,CAAS,CAAT,CAAac,CAAb,CAAiB,CAAjB,CAAqBA,CApHpB,EAoHyB,CApHzB,CAAqD,IAAK4B,CAAAA,SAA1D,CAAP,CAA8E,IAAKA,CAAAA,SADtE,CAIfgE,SAAS,CAACE,CAAD,CAAI,CACX,MAAM,CACJ,WAAYrB,SADR;AAEJ,WAAYC,SAFR,CAGJvD,MAHI,CAAA,CAIF,IACJ,KAAI3B,EAAI,CAGR,KAFA,IAAIuG,EAEJ,CAAA,CAAA,CAAa,CACX,MAAMC,EAAItB,SAAA,CAAUoB,CAAV,CAiBV,KAAMG,GAAKH,CAALG,CAASH,CAATG,CAAa,CACnBF,GAAA,CAAKE,EAAL,EAAWH,CAAX,CAAe,CAAf,EAAoB,CAEpB,IAAU,EAAV,GAAIE,CAAJ,CAAc,CAEZ,GAAU,CAAV,GAAIxG,CAAJ,CAAa,KACbsG,EAAA,CAAIpF,UAAA,CAAW,EAAElB,CAAb,CACJ,SAJY,CAOd,MAAM0G,GAAKF,CAALE,CAASF,CAATE,CAAa,CAAnB,CAEMnC,GAAKmC,EAALnC,EAAWiC,CAAXjC,CAAe,CAAfA,EAAoB,CAC1B,KAAMoC,GAAK1B,SAAA,CAAUsB,EAAV,CAAX,CACMK,GAAK3B,SAAA,CAAUqB,CAAV,CADX,CAEMO,GAAK5B,SAAA,CAJAwB,EAIA,EAJMH,CAIN,CAJU,CAIV,EAJe,CAIf,CACLQ,GAAAA,CAAK7B,SAAA,CAAUV,EAAV,CAC0H,KAAA,GAAA5C,MAAA,CAAO,CAAP,CAAWmF,EAAX,CAAA,CAAgB,GAAAnF,MAAA,CAAO,CAAP,CAAWmF,EAAX,CAAgB,CAAhB,CA+EzJ,OAAMrH,GA/EuBkC,MAAAtC,CAAO,CAAPA,CAAWsH,EAAXtH,CA+EvBI,CAAUsH,EAAhB,CACMrH,GAhFuCiC,MAAArC,CAAO,CAAPA,CAAWqH,EAAXrH,CAAgB,CAAhBA,CAgFvCI,CAAUsH,EADhB,CAEM3C,GAjF2D1C,MAAApC,CAAO,CAAPA,CAAWqH,EAAXrH,CAiF3D8E,CAAU0C,EACVzC,GAAAA,CAlF2E3C,MAAAnC,CAAO,CAAPA,CAAWoH,EAAXpH,CAAgB,CAAhBA,CAkF3E8E,CAAU0C,EACVC,GAAAA,CAnF+FtF,MAAA+B,CAAO,CAAPA,CAAWmD,EAAXnD,CAmF/FuD,CAAUF,EACVG,GAAAA,CApF+GvF,MAAAgC,CAAO,CAAPA,CAAWkD,EAAXlD,CAAgB,CAAhBA,CAoF/GuD,CAAUF,EAEVG,GAAAA,CAAK9C,EAAL8C,CAAU9C,EAAV8C,CAAe7C,EAAf6C,CAAoB7C,EAC1B,OAAM8C,GAAKH,EAALG,CAAUH,EAAVG,CAAeF,EAAfE,CAAoBF,EArFtB,IAsFoF,CAtFpF,CAsFGzH,EAtFH,EAsFS6E,EAtFT,CAsFc8C,EAtFd,CAsFmBD,EAtFnB,CAsFwBD,EAtFxB,EAsF8BxH,EAtF9B,EAsFoC2E,EAtFpC,CAsFyC+C,EAtFzC,CAsF8CD,EAtF9C,CAsFmDF,EAtFnD;CAmFOxH,EAnFP,CAmFYA,EAnFZ,CAmFiBC,EAnFjB,CAmFsBA,EAnFtB,GAsF+D2E,EAtF/D,CAsFoE6C,EAtFpE,CAsFyE5C,EAtFzE,CAsF8E2C,EAtF9E,EAAa,CACXhC,SAAA,CAAUqB,CAAV,CAAA,CAAeQ,EACf7B,UAAA,CAAUuB,CAAV,CAAA,CAAeG,EACTU,GAAAA,CAAMnC,SAAA,CAAUX,EAAV,CAEZ,IAAY,EAAZ,GAAI8C,EAAJ,CAAgB,CACVpB,EAAAA,CAAI,IAAKX,CAAAA,UAEb,GAAG,CACD,GAAI,IAAK7C,CAAAA,QAAL,CAAcwD,EAAd,CAAJ,GAAyB1B,EAAzB,CAA6B,CAC3B,IAAK9B,CAAAA,QAAL,CAAcwD,EAAd,CAAA,CAAmBK,CACnB,MAF2B,CAK7BL,EAAA,CAAI,IAAK1D,CAAAA,SAAL,CAAe0D,EAAf,CANH,CAAH,MAOSA,EAPT,GAOe,IAAKX,CAAAA,UAPpB,CAHc,CAahB,IAAKgC,CAAAA,KAAL,CAAWhB,CAAX,CAAce,EAAd,CAEA,KAAKC,CAAAA,KAAL,CAAWd,CAAX,CAActB,SAAA,CAAUqB,EAAV,CAAd,CAEA,KAAKe,CAAAA,KAAL,CAAWf,EAAX,CAAehC,EAAf,CAEMgD,GAAAA,CAAKb,EAALa,EAAWf,CAAXe,CAAe,CAAfA,EAAoB,CAEtBvH,EAAJ,CAAQkB,UAAWQ,CAAAA,MAAnB,GACER,UAAA,CAAWlB,CAAA,EAAX,CADF,CACoBuH,EADpB,CA1BW,CAAb,IA6BO,CACL,GAAU,CAAV,GAAIvH,CAAJ,CAAa,KACbsG,EAAA,CAAIpF,UAAA,CAAW,EAAElB,CAAb,CAFC,CAlEI,CAwEb,MAAOuG,GAjFI,CAoFbe,KAAK,CAAChB,CAAD,CAAIE,CAAJ,CAAO,CACV,IAAKtE,CAAAA,UAAL,CAAgBoE,CAAhB,CAAA,CAAqBE,CACX,GAAV,GAAIA,CAAJ,GAAc,IAAKtE,CAAAA,UAAL,CAAgBsE,CAAhB,CAAd,CAAmCF,CAAnC,CAFU,CAMZZ,YAAY,CAAC5B,EAAD,CAAKG,EAAL,CAASS,EAAT,CAAa4B,CAAb,CAAgBE,CAAhB,CAAmBgB,CAAnB,CAAsB,CAChC,MAAMrB,EAAI,IAAKV,CAAAA,YACf;IAAKxD,CAAAA,UAAL,CAAgBkE,CAAhB,CAAA,CAAqBrC,EACrB,KAAK7B,CAAAA,UAAL,CAAgBkE,CAAhB,CAAoB,CAApB,CAAA,CAAyBlC,EACzB,KAAKhC,CAAAA,UAAL,CAAgBkE,CAAhB,CAAoB,CAApB,CAAA,CAAyBzB,EAEzB,KAAK4C,CAAAA,KAAL,CAAWnB,CAAX,CAAcG,CAAd,CAEA,KAAKgB,CAAAA,KAAL,CAAWnB,CAAX,CAAe,CAAf,CAAkBK,CAAlB,CAEA,KAAKc,CAAAA,KAAL,CAAWnB,CAAX,CAAe,CAAf,CAAkBqB,CAAlB,CAEA,KAAK/B,CAAAA,YAAL,EAAqB,CACrB,OAAOU,EAbyB,CArWpC,CAwXAhH,OAAQ0B,CAAAA,OAAR,CAAkBO,UArY+E;",
"sources":["node_modules/delaunator/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$delaunator$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _robustPredicates = require(\"robust-predicates\");\n\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nclass Delaunator {\n  static from(points, getX = defaultGetX, getY = defaultGetY) {\n    const n = points.length;\n    const coords = new Float64Array(n * 2);\n\n    for (let i = 0; i < n; i++) {\n      const p = points[i];\n      coords[2 * i] = getX(p);\n      coords[2 * i + 1] = getY(p);\n    }\n\n    return new Delaunator(coords);\n  }\n\n  constructor(coords) {\n    const n = coords.length >> 1;\n    if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n    this.coords = coords; // arrays that will store the triangulation graph\n\n    const maxTriangles = Math.max(2 * n - 5, 0);\n    this._triangles = new Uint32Array(maxTriangles * 3);\n    this._halfedges = new Int32Array(maxTriangles * 3); // temporary arrays for tracking the edges of the advancing convex hull\n\n    this._hashSize = Math.ceil(Math.sqrt(n));\n    this._hullPrev = new Uint32Array(n); // edge to prev edge\n\n    this._hullNext = new Uint32Array(n); // edge to next edge\n\n    this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n\n    this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n    // temporary arrays for sorting points\n\n    this._ids = new Uint32Array(n);\n    this._dists = new Float64Array(n);\n    this.update();\n  }\n\n  update() {\n    const {\n      coords,\n      _hullPrev: hullPrev,\n      _hullNext: hullNext,\n      _hullTri: hullTri,\n      _hullHash: hullHash\n    } = this;\n    const n = coords.length >> 1; // populate an array of point indices; calculate input data bbox\n\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for (let i = 0; i < n; i++) {\n      const x = coords[2 * i];\n      const y = coords[2 * i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      this._ids[i] = i;\n    }\n\n    const cx = (minX + maxX) / 2;\n    const cy = (minY + maxY) / 2;\n    let minDist = Infinity;\n    let i0, i1, i2; // pick a seed point close to the center\n\n    for (let i = 0; i < n; i++) {\n      const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n\n      if (d < minDist) {\n        i0 = i;\n        minDist = d;\n      }\n    }\n\n    const i0x = coords[2 * i0];\n    const i0y = coords[2 * i0 + 1];\n    minDist = Infinity; // find the point closest to the seed\n\n    for (let i = 0; i < n; i++) {\n      if (i === i0) continue;\n      const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n\n      if (d < minDist && d > 0) {\n        i1 = i;\n        minDist = d;\n      }\n    }\n\n    let i1x = coords[2 * i1];\n    let i1y = coords[2 * i1 + 1];\n    let minRadius = Infinity; // find the third point which forms the smallest circumcircle with the first two\n\n    for (let i = 0; i < n; i++) {\n      if (i === i0 || i === i1) continue;\n      const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n\n      if (r < minRadius) {\n        i2 = i;\n        minRadius = r;\n      }\n    }\n\n    let i2x = coords[2 * i2];\n    let i2y = coords[2 * i2 + 1];\n\n    if (minRadius === Infinity) {\n      // order collinear points by dx (or dy if all x are identical)\n      // and return the list as a hull\n      for (let i = 0; i < n; i++) {\n        this._dists[i] = coords[2 * i] - coords[0] || coords[2 * i + 1] - coords[1];\n      }\n\n      quicksort(this._ids, this._dists, 0, n - 1);\n      const hull = new Uint32Array(n);\n      let j = 0;\n\n      for (let i = 0, d0 = -Infinity; i < n; i++) {\n        const id = this._ids[i];\n\n        if (this._dists[id] > d0) {\n          hull[j++] = id;\n          d0 = this._dists[id];\n        }\n      }\n\n      this.hull = hull.subarray(0, j);\n      this.triangles = new Uint32Array(0);\n      this.halfedges = new Uint32Array(0);\n      return;\n    } // swap the order of the seed points for counter-clockwise orientation\n\n\n    if ((0, _robustPredicates.orient2d)(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n      const i = i1;\n      const x = i1x;\n      const y = i1y;\n      i1 = i2;\n      i1x = i2x;\n      i1y = i2y;\n      i2 = i;\n      i2x = x;\n      i2y = y;\n    }\n\n    const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n    this._cx = center.x;\n    this._cy = center.y;\n\n    for (let i = 0; i < n; i++) {\n      this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n    } // sort the points by distance from the seed triangle circumcenter\n\n\n    quicksort(this._ids, this._dists, 0, n - 1); // set up the seed triangle as the starting hull\n\n    this._hullStart = i0;\n    let hullSize = 3;\n    hullNext[i0] = hullPrev[i2] = i1;\n    hullNext[i1] = hullPrev[i0] = i2;\n    hullNext[i2] = hullPrev[i1] = i0;\n    hullTri[i0] = 0;\n    hullTri[i1] = 1;\n    hullTri[i2] = 2;\n    hullHash.fill(-1);\n    hullHash[this._hashKey(i0x, i0y)] = i0;\n    hullHash[this._hashKey(i1x, i1y)] = i1;\n    hullHash[this._hashKey(i2x, i2y)] = i2;\n    this.trianglesLen = 0;\n\n    this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n    for (let k = 0, xp, yp; k < this._ids.length; k++) {\n      const i = this._ids[k];\n      const x = coords[2 * i];\n      const y = coords[2 * i + 1]; // skip near-duplicate points\n\n      if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n      xp = x;\n      yp = y; // skip seed triangle points\n\n      if (i === i0 || i === i1 || i === i2) continue; // find a visible edge on the convex hull using edge hash\n\n      let start = 0;\n\n      for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n        start = hullHash[(key + j) % this._hashSize];\n        if (start !== -1 && start !== hullNext[start]) break;\n      }\n\n      start = hullPrev[start];\n      let e = start,\n          q;\n\n      while (q = hullNext[e], (0, _robustPredicates.orient2d)(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n        e = q;\n\n        if (e === start) {\n          e = -1;\n          break;\n        }\n      }\n\n      if (e === -1) continue; // likely a near-duplicate point; skip it\n      // add the first triangle from the point\n\n      let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]); // recursively flip triangles from the point until they satisfy the Delaunay condition\n\n\n      hullTri[i] = this._legalize(t + 2);\n      hullTri[e] = t; // keep track of boundary triangles on the hull\n\n      hullSize++; // walk forward through the hull, adding more triangles and flipping recursively\n\n      let n = hullNext[e];\n\n      while (q = hullNext[n], (0, _robustPredicates.orient2d)(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n        t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n        hullTri[i] = this._legalize(t + 2);\n        hullNext[n] = n; // mark as removed\n\n        hullSize--;\n        n = q;\n      } // walk backward from the other side, adding more triangles and flipping\n\n\n      if (e === start) {\n        while (q = hullPrev[e], (0, _robustPredicates.orient2d)(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n          t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n\n          this._legalize(t + 2);\n\n          hullTri[q] = t;\n          hullNext[e] = e; // mark as removed\n\n          hullSize--;\n          e = q;\n        }\n      } // update the hull indices\n\n\n      this._hullStart = hullPrev[i] = e;\n      hullNext[e] = hullPrev[n] = i;\n      hullNext[i] = n; // save the two new edges in the hash table\n\n      hullHash[this._hashKey(x, y)] = i;\n      hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n    }\n\n    this.hull = new Uint32Array(hullSize);\n\n    for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n      this.hull[i] = e;\n      e = hullNext[e];\n    } // trim typed triangle mesh arrays\n\n\n    this.triangles = this._triangles.subarray(0, this.trianglesLen);\n    this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n  }\n\n  _hashKey(x, y) {\n    return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n  }\n\n  _legalize(a) {\n    const {\n      _triangles: triangles,\n      _halfedges: halfedges,\n      coords\n    } = this;\n    let i = 0;\n    let ar = 0; // recursion eliminated with a fixed-size stack\n\n    while (true) {\n      const b = halfedges[a];\n      /* if the pair of triangles doesn't satisfy the Delaunay condition\n       * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n       * then do the same check/flip recursively for the new pair of triangles\n       *\n       *           pl                    pl\n       *          /||\\                  /  \\\n       *       al/ || \\bl            al/    \\a\n       *        /  ||  \\              /      \\\n       *       /  a||b  \\    flip    /___ar___\\\n       *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n       *        \\  ||  /              \\      /\n       *       ar\\ || /br             b\\    /br\n       *          \\||/                  \\  /\n       *           pr                    pr\n       */\n\n      const a0 = a - a % 3;\n      ar = a0 + (a + 2) % 3;\n\n      if (b === -1) {\n        // convex hull edge\n        if (i === 0) break;\n        a = EDGE_STACK[--i];\n        continue;\n      }\n\n      const b0 = b - b % 3;\n      const al = a0 + (a + 1) % 3;\n      const bl = b0 + (b + 2) % 3;\n      const p0 = triangles[ar];\n      const pr = triangles[a];\n      const pl = triangles[al];\n      const p1 = triangles[bl];\n      const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n\n      if (illegal) {\n        triangles[a] = p1;\n        triangles[b] = p0;\n        const hbl = halfedges[bl]; // edge swapped on the other side of the hull (rare); fix the halfedge reference\n\n        if (hbl === -1) {\n          let e = this._hullStart;\n\n          do {\n            if (this._hullTri[e] === bl) {\n              this._hullTri[e] = a;\n              break;\n            }\n\n            e = this._hullPrev[e];\n          } while (e !== this._hullStart);\n        }\n\n        this._link(a, hbl);\n\n        this._link(b, halfedges[ar]);\n\n        this._link(ar, bl);\n\n        const br = b0 + (b + 1) % 3; // don't worry about hitting the cap: it can only happen on extremely degenerate input\n\n        if (i < EDGE_STACK.length) {\n          EDGE_STACK[i++] = br;\n        }\n      } else {\n        if (i === 0) break;\n        a = EDGE_STACK[--i];\n      }\n    }\n\n    return ar;\n  }\n\n  _link(a, b) {\n    this._halfedges[a] = b;\n    if (b !== -1) this._halfedges[b] = a;\n  } // add a new triangle given vertex indices and adjacent half-edge ids\n\n\n  _addTriangle(i0, i1, i2, a, b, c) {\n    const t = this.trianglesLen;\n    this._triangles[t] = i0;\n    this._triangles[t + 1] = i1;\n    this._triangles[t + 2] = i2;\n\n    this._link(t, a);\n\n    this._link(t + 1, b);\n\n    this._link(t + 2, c);\n\n    this.trianglesLen += 3;\n    return t;\n  }\n\n} // monotonically increases with real angle, but doesn't need expensive trigonometry\n\n\nexports.default = Delaunator;\n\nfunction pseudoAngle(dx, dy) {\n  const p = dx / (Math.abs(dx) + Math.abs(dy));\n  return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n  const dx = ax - bx;\n  const dy = ay - by;\n  return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const ex = cx - ax;\n  const ey = cy - ay;\n  const bl = dx * dx + dy * dy;\n  const cl = ex * ex + ey * ey;\n  const d = 0.5 / (dx * ey - dy * ex);\n  const x = (ey * bl - dy * cl) * d;\n  const y = (dx * cl - ex * bl) * d;\n  return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const ex = cx - ax;\n  const ey = cy - ay;\n  const bl = dx * dx + dy * dy;\n  const cl = ex * ex + ey * ey;\n  const d = 0.5 / (dx * ey - dy * ex);\n  const x = ax + (ey * bl - dy * cl) * d;\n  const y = ay + (dx * cl - ex * bl) * d;\n  return {\n    x,\n    y\n  };\n}\n\nfunction quicksort(ids, dists, left, right) {\n  if (right - left <= 20) {\n    for (let i = left + 1; i <= right; i++) {\n      const temp = ids[i];\n      const tempDist = dists[temp];\n      let j = i - 1;\n\n      while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n\n      ids[j + 1] = temp;\n    }\n  } else {\n    const median = left + right >> 1;\n    let i = left + 1;\n    let j = right;\n    swap(ids, median, i);\n    if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n    if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n    if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n    const temp = ids[i];\n    const tempDist = dists[temp];\n\n    while (true) {\n      do i++; while (dists[ids[i]] < tempDist);\n\n      do j--; while (dists[ids[j]] > tempDist);\n\n      if (j < i) break;\n      swap(ids, i, j);\n    }\n\n    ids[left + 1] = ids[j];\n    ids[j] = temp;\n\n    if (right - i + 1 >= j - left) {\n      quicksort(ids, dists, i, right);\n      quicksort(ids, dists, left, j - 1);\n    } else {\n      quicksort(ids, dists, left, j - 1);\n      quicksort(ids, dists, i, right);\n    }\n  }\n}\n\nfunction swap(arr, i, j) {\n  const tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n  return p[0];\n}\n\nfunction defaultGetY(p) {\n  return p[1];\n}\n};"],
"names":["shadow$provide","global","require","module","exports","dist","ax","ay","bx","by","dx","dy","quicksort","ids","dists","left","right","i","temp","tempDist","j","swap","arr","tmp","defaultGetX","p","defaultGetY","Object","defineProperty","value","default","_robustPredicates","EPSILON","Math","pow","EDGE_STACK","Uint32Array","Delaunator","from","points","getX","getY","n","length","coords","Float64Array","constructor","Error","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","x","y","cx","cy","minDist","d","i0","i0x","i0y","i1","i1x","i1y","minRadius","ex","ey","bl","cl","r","i2","i2x","i2y","hull","d0","id","subarray","triangles","halfedges","orient2d","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","k","xp","yp","abs","start","key","e","q","t","_legalize","floor","a","ar","b","a0","b0","p0","pr","pl","p1","px","py","fx","fy","bp","cp","hbl","_link","br","c"]
}
