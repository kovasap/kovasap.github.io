{
"version":3,
"file":"module$node_modules$d3_geo$src$clip$rectangle.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/d3-geo/src/clip/rectangle.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_geo$src$clip$rectangle\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = clipRectangle;\n\nvar _math = require(\"../math.js\");\n\nvar _buffer = _interopRequireDefault(require(\"./buffer.js\"));\n\nvar _line = _interopRequireDefault(require(\"./line.js\"));\n\nvar _rejoin = _interopRequireDefault(require(\"./rejoin.js\"));\n\nvar _d3Array = require(\"d3-array\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = (0, _buffer.default)(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = (0, _d3Array.merge)(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","clipRectangle","x0","y0","x1","y1","interpolate","from","to","direction","stream","a","a1","corner","comparePoint","point","p","_math","abs","epsilon","compareIntersection","b","x","ca","cb","y","activeStream","linePoint","v","polygon","ring","push","first","x__","y__","v__","lineStart","v_","x_","Math","max","clipMin","min","clipMax","y_","_line","lineEnd","clean","bufferStream","_buffer","segments","clipStream","NaN","rejoin","result","polygonStart","polygonEnd","startInside","i","winding","n","length","j","m","b0","b1","a0","cleanInside","visible","_d3Array","merge","_rejoin"]
}
