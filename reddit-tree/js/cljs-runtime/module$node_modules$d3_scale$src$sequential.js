shadow$provide.module$node_modules$d3_scale$src$sequential=function(global,require,module,exports){function transformer(){function scale(x){return null==x||isNaN(x=+x)?unknown:interpolator(0===k10?.5:(x=(transform(x)-t0)*k10,clamp?Math.max(0,Math.min(1,x)):x))}function range(interpolate){return function(_){var r0,r1;return arguments.length?([r0,r1]=_,interpolator=interpolate(r0,r1),scale):[interpolator(0),interpolator(1)]}}var x0=0,x1=1,t0,t1,k10,transform,interpolator=_continuous.identity,clamp=
!1,unknown;scale.domain=function(_){return arguments.length?([x0,x1]=_,t0=transform(x0=+x0),t1=transform(x1=+x1),k10=t0===t1?0:1/(t1-t0),scale):[x0,x1]};scale.clamp=function(_){return arguments.length?(clamp=!!_,scale):clamp};scale.interpolator=function(_){return arguments.length?(interpolator=_,scale):interpolator};scale.range=range(_d3Interpolate.interpolate);scale.rangeRound=range(_d3Interpolate.interpolateRound);scale.unknown=function(_){return arguments.length?(unknown=_,scale):unknown};return function(t){transform=
t;t0=t(x0);t1=t(x1);k10=t0===t1?0:1/(t1-t0);return scale}}function copy(source,target){return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown())}function sequential(){var scale=(0,_linear.linearish)(transformer()(_continuous.identity));scale.copy=function(){return copy(scale,sequential())};return _init.initInterpolator.apply(scale,arguments)}function sequentialLog(){var scale=(0,_log.loggish)(transformer()).domain([1,10]);scale.copy=
function(){return copy(scale,sequentialLog()).base(scale.base())};return _init.initInterpolator.apply(scale,arguments)}function sequentialSymlog(){var scale=(0,_symlog.symlogish)(transformer());scale.copy=function(){return copy(scale,sequentialSymlog()).constant(scale.constant())};return _init.initInterpolator.apply(scale,arguments)}function sequentialPow(){var scale=(0,_pow.powish)(transformer());scale.copy=function(){return copy(scale,sequentialPow()).exponent(scale.exponent())};return _init.initInterpolator.apply(scale,
arguments)}Object.defineProperty(exports,"__esModule",{value:!0});exports.copy=copy;exports.default=sequential;exports.sequentialLog=sequentialLog;exports.sequentialSymlog=sequentialSymlog;exports.sequentialPow=sequentialPow;exports.sequentialSqrt=function(){return sequentialPow.apply(null,arguments).exponent(.5)};var _d3Interpolate=require("module$node_modules$d3_interpolate$src$index"),_continuous=require("module$node_modules$d3_scale$src$continuous"),_init=require("module$node_modules$d3_scale$src$init"),
_linear=require("module$node_modules$d3_scale$src$linear"),_log=require("module$node_modules$d3_scale$src$log"),_symlog=require("module$node_modules$d3_scale$src$symlog"),_pow=require("module$node_modules$d3_scale$src$pow")}
//# sourceMappingURL=module$node_modules$d3_scale$src$sequential.js.map
