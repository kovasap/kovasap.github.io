{
"version":3,
"file":"module$node_modules$csv_parse$lib$ResizeableBuffer.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/csv-parse/lib/ResizeableBuffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$csv_parse$lib$ResizeableBuffer\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass ResizeableBuffer {\n  constructor(size = 100) {\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.allocUnsafe(size);\n  }\n\n  prepend(val) {\n    if (Buffer.isBuffer(val)) {\n      const length = this.length + val.length;\n\n      if (length >= this.size) {\n        this.resize();\n\n        if (length >= this.size) {\n          throw Error('INVALID_BUFFER_STATE');\n        }\n      }\n\n      const buf = this.buf;\n      this.buf = Buffer.allocUnsafe(this.size);\n      val.copy(this.buf, 0);\n      buf.copy(this.buf, val.length);\n      this.length += val.length;\n    } else {\n      const length = this.length++;\n\n      if (length === this.size) {\n        this.resize();\n      }\n\n      const buf = this.clone();\n      this.buf[0] = val;\n      buf.copy(this.buf, 1, 0, length);\n    }\n  }\n\n  append(val) {\n    const length = this.length++;\n\n    if (length === this.size) {\n      this.resize();\n    }\n\n    this.buf[length] = val;\n  }\n\n  clone() {\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n\n  resize() {\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.allocUnsafe(this.size);\n    this.buf.copy(buf, 0, 0, length);\n    this.buf = buf;\n  }\n\n  toString(encoding) {\n    if (encoding) {\n      return this.buf.slice(0, this.length).toString(encoding);\n    } else {\n      return Uint8Array.prototype.slice.call(this.buf.slice(0, this.length));\n    }\n  }\n\n  toJSON() {\n    return this.toString('utf8');\n  }\n\n  reset() {\n    this.length = 0;\n  }\n\n}\n\nvar _default = ResizeableBuffer;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","default","ResizeableBuffer","constructor","size","length","buf","allocUnsafe","prepend","val","isBuffer","resize","Error","copy","clone","append","from","slice","toString","encoding","Uint8Array","prototype","call","toJSON","reset"]
}
