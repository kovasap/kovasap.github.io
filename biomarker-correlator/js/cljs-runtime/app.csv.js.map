{"version":3,"sources":["app/csv.cljs"],"mappings":"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","names":["app.csv/csv-data","reagent.core.atom","app.csv/maps-to-csv","maps","js/shadow.js.shim.module$csv_stringify$sync.stringify","cljs.core/clj->js","app.csv/download-as-csv","export-name","data-blob","js/Blob","link","js/document","js/URL","app.csv/first-file","cljs.core.map","e","target","file","app.csv/-remove-empty-rows","parsed-data","cljs.core.filter","row","cljs.core.not_EQ_","cljs.core/set","cljs.core/vals","app.csv/-remove-empty-cols","cljs.core.dissoc","cljs.core.keyword","app.csv/-standardize-keys","iter__4652__auto__","s__49040","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__49042","cljs.core/chunk-buffer","i__49041","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49039","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core.into","s__49045","b__49047","i__49046","vec__49048","cljs.core.nth","iter__49044","vec__49051","s__49055","b__49057","i__49056","vec__49058","iter__49054","vec__49061","k","v","clojure.string/replace","clojure.string/lower-case","app.csv/my-parse-csv","csv-data","cljs.core.js__GT_clj","js/shadow.js.shim.module$csv_parse$sync.parse","cljs.core.prn","app.csv/extract-result","p1__49064#","app.csv/input-upload-reqs","cljs.core.async.chan","app.csv/input-file-reads","c__35952__auto__","cljs.core.async.impl.dispatch/run","f__35953__auto__","switch__35882__auto__","state_49079","state_val_49080","statearr-49081","inst_49067","js/FileReader","statearr-49082","cljs.core.async.impl.ioc-helpers/take!","inst_49077","cljs.core.async.impl.ioc-helpers/return-chan","inst_49069","inst_49070","inst_49071","inst_49072","p1__49065#","inst_49073","inst_49074","statearr-49083","statearr-49084","statearr-49085","state-machine__35883__auto__","ret-value__35884__auto__","result__35885__auto__","cljs.core/keyword-identical?","ex__35886__auto__","e49086","statearr-49087","statearr-49088","state__35954__auto__","statearr-49089","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","reader","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.async.put_BANG_","state_49098","state_val_49099","statearr-49100","inst_49096","inst_49092","inst_49093","statearr-49101","statearr-49102","statearr-49103","e49104","statearr-49105","statearr-49106","statearr-49107","app.csv/biomarker-upload-reqs","app.csv/biomarker-file-reads","state_49122","state_val_49123","statearr-49124","inst_49110","statearr-49125","inst_49120","inst_49112","inst_49113","inst_49114","inst_49115","p1__49108#","inst_49116","inst_49117","statearr-49126","statearr-49127","statearr-49128","e49129","statearr-49130","statearr-49131","statearr-49132","state_49141","state_val_49142","statearr-49143","inst_49139","inst_49135","inst_49136","statearr-49144","statearr-49145","statearr-49146","e49147","statearr-49148","statearr-49149","statearr-49150","p1__49151#","app.csv/upload-btn","file-name","upload-reqs-channel","or__4253__auto__","cljs.core/chunk-first"],"sourcesContent":["(ns app.csv\n  (:require\n   [\"csv-parse/sync\" :rename {parse parse-csv}]\n   [\"csv-stringify/sync\" :rename {stringify stringify-csv}]\n   [cljs.core.async :refer [chan put! take! >! <! buffer dropping-buffer sliding-buffer timeout close! alts!]]\n   [cljs.core.async :refer-macros [go go-loop alt!]]\n   [reagent.core :as r]\n   [clojure.string :refer [lower-case replace]]))\n\n\n;; --------- Export as CSV ------------------------------------------\n\n(def csv-data\n  (r/atom\n    {:input-data\n     [{:date \"1/1/00 to 2/1/00\" :walks 2 :potatoes 10 :climbs 1 :na \"1420.9\" :b1 \"2\"}\n      {:date \"2/2/00 to 3/1/00\" :walks 2 :potatoes 10 :climbs 1 :na \"1545.1\" :b1 \"2.5\"}\n      {:date \"3/2/00 to 4/1/00\" :walks 3 :potatoes 15 :climbs 3 :na \"1679.7\" :b1 \"2.4\"}\n      {:date \"4/2/00 to 5/1/00\" :walks 2 :potatoes 20 :climbs 3 :na \"1781.2\" :b1 \"2.4\"}\n      {:date \"5/2/00\"           :walks 2 :potatoes 20 :climbs 3 :na \"1728.9\" :b1 \"2.3\"}\n      {:date \"6/2/00\"           :walks 2 :potatoes 20 :climbs 3 :na \"1675.3\" :b1 \"2.2\"}\n      {:date \"7/2/00\"           :walks 2 :potatoes 20 :climbs 3 :na \"1597.8\" :b1 \"2.3\"}\n      {:date \"8/2/00\"           :walks 2 :potatoes 20 :climbs 3 :na \"1591.8\" :b1 \"2.3\"}\n      {:date \"9/2/00\"           :walks 2 :potatoes 20 :climbs 3 :na \"1534.1\" :b1 \"2.4\"}\n      {:date \"10/2/00\"          :walks 2 :potatoes 20 :climbs 3 :na \"1536.4\" :b1 \"2.4\"}\n      {:date \"11/2/00\"          :walks 2 :potatoes 20 :climbs 3 :na \"1588.3\" :b1 \"2.5\"}\n      {:date \"12/2/00\"          :walks 2 :potatoes 20 :climbs 3 :na \"1647.3\" :b1 \"2.2\"}\n      {:date \"1/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"1703.1\" :b1 \"2.4\"}\n      {:date \"2/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"1467.3\" :b1 \"2.3\"}\n      {:date \"3/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"1529.2\" :b1 \"2.3\"}\n      {:date \"4/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"1855.5\" :b1 \"2.1\"}\n      {:date \"5/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"1687.1\" :b1 \"2.3\"}\n      {:date \"6/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"2318.2\" :b1 \"2.1\"}\n      {:date \"7/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"2245.4\" :b1 \"1.7\"}\n      {:date \"8/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"2485.7\" :b1 \"1.8\"}\n      {:date \"9/2/01\"           :walks 2 :potatoes 20 :climbs 3 :na \"2348.5\" :b1 \"1.9\"}\n      {:date \"10/2/01\"          :walks 2 :potatoes 20 :climbs 3 :na \"2329.4\" :b1 \"2\"}\n      {:date \"11/2/01\"          :walks 2 :potatoes 20 :climbs 3 :na \"2238.0\" :b1 \"1.9\"}\n      {:date \"12/2/01\"          :walks 2 :potatoes 20 :climbs 3 :na \"2243.5\" :b1 \"2.3\"}\n      {:date \"1/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"2078.5\" :b1 \"2.3\"}\n      {:date \"2/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"1841.9\" :b1 \"2.1\"}\n      {:date \"3/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"1983.8\" :b1 \"2.3\"}\n      {:date \"4/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"1917.7\" :b1 \"2\"}\n      {:date \"5/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"2153.5\" :b1 \"2.1\"}\n      {:date \"6/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"2689.4\" :b1 \"2\"}\n      {:date \"7/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"2335.9\" :b1 \"1.9\"}\n      {:date \"8/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"2114.7\" :b1 \"1.6\"}\n      {:date \"9/2/02\"           :walks 2 :potatoes 20 :climbs 3 :na \"1966.3\" :b1 \"1.7\"}\n      {:date \"10/2/02\"          :walks 2 :potatoes 20 :climbs 3 :na \"1831.9\" :b1 \"1.9\"}\n      {:date \"11/2/02\"          :walks 2 :potatoes 20 :climbs 3 :na \"1831.9\" :b1 \"2\"}\n      {:date \"12/2/02\"          :walks 2 :potatoes 20 :climbs 3 :na \"1831.9\" :b1 \"2\"}]\n     :biomarker-data\n     [{:date \"1/1/00 to 2/1/00\" :na 100 :health 50 :glucose 65 :hdl \"35\" :crp \"\"}\n      {:date \"2/2/00 to 3/1/00\" :BW 100 :health 50 :glucose 65 :hdl \"53\" :crp \"\"}\n      {:date \"3/2/00 to 4/1/00\" :BW 150 :health 60 :glucose 70 :hdl \"49\" :crp \"\"}\n      {:date \"4/2/00 to 5/1/00\" :BW 150 :health 70 :glucose 80 :hdl \"51\" :crp \"\"}\n      {:date \"5/2/00\"           :BW 150 :health 70 :glucose 80 :hdl \"53\" :crp \"\"}\n      {:date \"6/2/00\"           :BW 150 :health 70 :glucose 80 :hdl \"47\" :crp \"\"}\n      {:date \"7/2/00\"           :BW 150 :health 70 :glucose 80 :hdl \"46\" :crp \"\"}\n      {:date \"8/2/00\"           :BW 150 :health 70 :glucose 80 :hdl \"40\" :crp \"\"}\n      {:date \"9/2/00\"           :BW 150 :health 70 :glucose 80 :hdl \"42\" :crp \"\"}\n      {:date \"10/2/00\"          :BW 150 :health 70 :glucose 80 :hdl \"37\" :crp \"\"}\n      {:date \"11/2/00\"          :BW 150 :health 70 :glucose 80 :hdl \"38\" :crp \"\"}\n      {:date \"12/2/00\"          :BW 150 :health 70 :glucose 80 :hdl \"41\" :crp \"\"}\n      {:date \"1/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"36\" :crp \"\"}\n      {:date \"2/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"45\" :crp \"0.67\"}\n      {:date \"3/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"35\" :crp \"\"}\n      {:date \"4/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"46\" :crp \"\"}\n      {:date \"5/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"34\" :crp \"0.41\"}\n      {:date \"6/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"45\" :crp \"\"}\n      {:date \"7/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"51\" :crp \"0.34\"}\n      {:date \"8/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"51\" :crp \"0.47\"}\n      {:date \"9/2/01\"           :BW 150 :health 70 :glucose 80 :hdl \"53\" :crp \"0.29\"}\n      {:date \"10/2/01\"          :BW 150 :health 70 :glucose 80 :hdl \"56\" :crp \"0.2\"}\n      {:date \"11/2/01\"          :BW 150 :health 70 :glucose 80 :hdl \"51\" :crp \"0.3\"}\n      {:date \"12/2/01\"          :BW 150 :health 70 :glucose 80 :hdl \"51\" :crp \"0.37\"}\n      {:date \"1/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"46\" :crp \"0.53\"}\n      {:date \"2/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"39\" :crp \"1.01\"}\n      {:date \"3/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"40\" :crp \"0.84\"}\n      {:date \"4/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"44\" :crp \"0.46\"}\n      {:date \"5/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"49\" :crp \"0.27\"}\n      {:date \"6/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"47\" :crp \"1.01\"}\n      {:date \"7/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"41\" :crp \"0.66\"}\n      {:date \"8/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"49\" :crp \"0.57\"}\n      {:date \"9/2/02\"           :BW 150 :health 70 :glucose 80 :hdl \"45\" :crp \"0.69\"}\n      {:date \"10/2/02\"          :BW 150 :health 70 :glucose 80 :hdl \"39\" :crp \"0.36\"}\n      {:date \"11/2/02\"          :BW 150 :health 70 :glucose 80 :hdl \"39\" :crp \"0.3\"}\n      {:date \"12/2/02\"          :BW 150 :health 70 :glucose 80 :hdl \"39\" :crp \"0.3\"}]}))\n\n(defn maps-to-csv [maps]\n  (stringify-csv\n    (clj->js maps)\n    (clj->js {:header true})))\n\n(defn download-as-csv [maps export-name]\n  (let [data-blob (js/Blob. #js [(maps-to-csv maps)]\n                            #js {:type \"text/csv;charset=utf-8;\"})\n        link (.createElement js/document \"a\")]\n    (set! (.-href link) (.createObjectURL js/URL data-blob))\n    (.setAttribute link \"download\" export-name)\n    (.appendChild (.-body js/document) link)\n    (.click link)\n    (.removeChild (.-body js/document) link)))\n\n;; -------- Data \"Uploading\" --------------------------------------------\n;; From https://mrmcc3.github.io/blog/posts/csv-with-clojurescript/ \n\n(def first-file\n  (map (fn [e]\n         (let [target (.-currentTarget e)\n               file (-> target .-files (aget 0))]\n           (set! (.-value target) \"\")\n           file))))\n\n(defn -remove-empty-rows\n  \"The :skip_empty_lines option to parse-csv doesn't always seem to work, so we\n  do our own filtering here, removing all rows for which all values are the\n  empty string.\"\n  [parsed-data]\n  (filter (fn [row] (not= #{\"\"} (set (vals row)))) parsed-data))\n\n(defn -remove-empty-cols\n  \"Remove empty columns from the parsed csv data.\"\n  [parsed-data]\n  (map (fn [row] (dissoc row (keyword \"\"))) parsed-data))\n\n(defn -standardize-keys\n  {:malli/schema [:=> [:cat [:sequential [:map-of :string :string]]]\n                  [:sequential [:map-of :keyword :string]]]}\n  [parsed-data]\n  (for [row parsed-data]\n    (into {} (for [[k v] row]\n               [(-> k\n                  (replace #\"/\" \"_over_\")\n                  (replace #\" \" \"_\")\n                  lower-case\n                  keyword)\n                v]))))\n\n; (replace \"t/g\" #\"/\" \"_\")\n; (replace \"t g\" #\" \" \"_\")\n\n(defn my-parse-csv [csv-data]\n  (let [parsed-data\n        (js->clj\n          (parse-csv csv-data (clj->js {:columns true\n                                        :skip_empty_lines true\n                                        :trim true})))]\n          ; We do this ourselves in -standardize-keys\n          ; :keywordize-keys true)]\n    (prn \"CSV INPUT\")\n    (prn csv-data)\n    (prn \"CSV PARSED\")\n    (prn parsed-data)\n    (-> parsed-data\n      -standardize-keys\n      -remove-empty-rows\n      -remove-empty-cols)))\n\n(def extract-result\n  (map #(-> % .-target .-result my-parse-csv)))\n\n;;; Input data file\n\n(def input-upload-reqs (chan 1 first-file))\n(def input-file-reads (chan 1 extract-result))\n\n(go-loop []\n  (let [reader (js/FileReader.)\n        file (<! input-upload-reqs)]\n    (swap! csv-data assoc :input-file-name (.-name file))\n    (set! (.-onload reader) #(put! input-file-reads %))\n    (.readAsText reader file)\n    (recur)))\n\n(go-loop []\n  (swap! csv-data assoc :input-data (<! input-file-reads))\n  (recur))\n\n;; Biomarker data file\n\n(def biomarker-upload-reqs (chan 1 first-file))\n(def biomarker-file-reads (chan 1 extract-result))\n\n(go-loop []\n  (let [reader (js/FileReader.)\n        file (<! biomarker-upload-reqs)]\n    (swap! csv-data assoc :biomarker-file-name (.-name file))\n    (set! (.-onload reader) #(put! biomarker-file-reads %))\n    (.readAsText reader file)\n    (recur)))\n\n(go-loop []\n  (swap! csv-data assoc :biomarker-data (<! biomarker-file-reads))\n  (recur))\n\n(defn upload-btn [file-name upload-reqs-channel]\n  [:span.upload-label\n   [:label.file-label\n    [:input.file-input\n     {:type \"file\" :accept \".csv\" :on-change #(put! upload-reqs-channel %)}]\n    [:span.file-cta\n     [:span.file-icon\n      [:i.fa.fa-upload.fa-lg]]\n     [:span.file-label (or file-name \"Choose a file...\")]]]])\n     ;; Adds an \"X\" that can be clicked to clear the selected file.\n     ;; (when file-name \n    ;;   [:i.fa.fa-times {:on-click #(reset! csv-data {})}]]]]])\n"]}