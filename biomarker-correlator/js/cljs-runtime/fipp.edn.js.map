{"version":3,"sources":["fipp/edn.cljc"],"mappings":"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","names":["p__83908","map__83910","cljs.core/--destructure-map","cljs.core.get","fipp.edn/pretty-coll","print-level","print-length","printer","open","xs","sep","close","f","G__83912","cljs.core.update","cljs.core/dec","xform","cljs.core.comp","cljs.core.take","cljs.core/identity","p1__83907#","cljs.core.map","cljs.core.interpose","ys","or__4253__auto__","cljs.core.sequence","ellipsis","and__4251__auto__","cljs.core/seq","cljs.core.drop","this__4502__auto__","k__4503__auto__","this__4504__auto__","k83918","else__4505__auto__","G__83924","cljs.core/Keyword","symbols","print-meta","__extmap","this__4522__auto__","f__4523__auto__","init__4524__auto__","cljs.core.reduce","ret__4525__auto__","p__83931","vec__83932","k__4526__auto__","cljs.core.nth","v__4527__auto__","this__4517__auto__","writer__4518__auto__","opts__4519__auto__","pr-pair__4520__auto__","keyval__4521__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__83917","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4500__auto__","__meta","this__4497__auto__","__hash","this__4506__auto__","cljs.core/count","cljs.core/PROTOCOL_SENTINEL","p__83944","map__83945","this__4498__auto__","h__4360__auto__","coll__4499__auto__","cljs.core/hash-unordered-coll","this83919","other83920","cljs.core._EQ_","this__4512__auto__","k__4513__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4509__auto__","G__83954","this__4510__auto__","k__4511__auto__","pred__83955","cljs.core/keyword-identical?","expr__83956","cljs.core.assoc","this__4515__auto__","cljs.core/MapEntry","this__4501__auto__","this__4507__auto__","entry__4508__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","fipp.edn/EdnPrinter","this__4546__auto__","cljs.core/List","writer__4547__auto__","cljs.core/-write","G__83922","extmap__4542__auto__","G__83963","cljs.core/record?","fipp.edn/->EdnPrinter","fipp.edn/map->EdnPrinter","this","x","fipp.visit/visit","fipp.ednize/edn","*print-readably*-orig-val__83952","*print-readably*-temp-val__83953","cljs.core/*print-readably*","cljs.core.pr_str","*print-readably*-orig-val__83950","*print-readably*-temp-val__83951","*print-dup*-orig-val__83941","*print-dup*-temp-val__83942","cljs.core/*print-dup*","temp__5751__auto__","pretty","G__83943","cljs.core/first","p__83946","vec__83947","k","v","tag","form","cljs.core/meta","cljs.core/coll?","m","fipp.visit/visit*","fipp.ednize/record->tagged","var_args","G__83965","fipp.edn/pretty","js/Error","fipp.edn.pretty","options","defaults","cljs.core/*print-length*","cljs.core/*print-level*","cljs.core/*print-meta*","cljs.core.merge","*print-meta*-orig-val__83966","*print-meta*-temp-val__83967","G__83969","fipp.edn/pprint","fipp.edn.pprint","fipp.engine.pprint_document"],"sourcesContent":["(ns fipp.edn\n  \"Provides a pretty document serializer and pprint fn for Clojure/EDN forms.\n  See fipp.clojure for pretty printing Clojure code.\"\n  (:require [clojure.string :as str]\n            [fipp.ednize :refer [edn record->tagged]]\n            [fipp.visit :refer [visit visit*]]\n            [fipp.engine :refer (pprint-document)]))\n\n(defn pretty-coll [{:keys [print-level print-length] :as printer}\n                   open xs sep close f]\n  (let [printer (cond-> printer print-level (update :print-level dec))\n        xform (comp (if print-length (take print-length) identity)\n                    (map #(f printer %))\n                    (interpose sep))\n        ys (if (pos? (or print-level 1))\n             (sequence xform xs)\n             \"#\")\n        ellipsis (when (and print-length (seq (drop print-length xs)))\n                   [:span sep \"...\"])]\n    [:group open [:align ys ellipsis] close]))\n\n(defrecord EdnPrinter [symbols print-meta print-length print-level]\n\n  fipp.visit/IVisitor\n\n\n  (visit-unknown [this x]\n    (visit this (edn x)))\n\n\n  (visit-nil [this]\n    [:text \"nil\"])\n\n  (visit-boolean [this x]\n    [:text (str x)])\n\n  (visit-string [this x]\n    [:text (binding [*print-readably* true]\n             (pr-str x))])\n\n  (visit-character [this x]\n    [:text (binding [*print-readably* true]\n             (pr-str x))])\n\n  (visit-symbol [this x]\n    [:text (str x)])\n\n  (visit-keyword [this x]\n    [:text (str x)])\n\n  (visit-number [this x]\n    (binding [*print-dup* false]\n      [:text (pr-str x)]))\n\n  (visit-seq [this x]\n    (if-let [pretty (symbols (first x))]\n      (pretty this x)\n      (pretty-coll this \"(\" x :line \")\" visit)))\n\n  (visit-vector [this x]\n    (pretty-coll this \"[\" x :line \"]\" visit))\n\n  (visit-map [this x]\n    (pretty-coll this \"{\" x [:span \",\" :line] \"}\"\n      (fn [printer [k v]]\n        [:span (visit printer k) \" \" (visit printer v)])))\n\n  (visit-set [this x]\n    (pretty-coll this \"#{\" x :line \"}\" visit))\n\n  (visit-tagged [this {:keys [tag form]}]\n    [:group \"#\" (str tag)\n            (when (or (and print-meta (meta form))\n                      (not (coll? form)))\n              \" \")\n            (visit this form)])\n\n\n  (visit-meta [this m x]\n    (if print-meta\n      [:align [:span \"^\" (visit this m)] :line (visit* this x)]\n      (visit* this x)))\n\n  (visit-var [this x]\n    [:text (str x)])\n\n  (visit-pattern [this x]\n    [:text (pr-str x)])\n\n  (visit-record [this x]\n    (visit this (record->tagged x)))\n\n  )\n\n(defn pretty\n  ([x] (pretty x {}))\n  ([x options]\n   (let [defaults {:symbols {}\n                   :print-length *print-length*\n                   :print-level *print-level*\n                   :print-meta *print-meta*}\n         printer (map->EdnPrinter (merge defaults options))]\n     (binding [*print-meta* false]\n       (visit printer x)))))\n\n(defn pprint\n  ([x] (pprint x {}))\n  ([x options]\n   (-> (pretty x options)\n       (pprint-document options))))\n\n#?(:clj\n   (defmacro dbg [x]\n     (let [{:keys [line]} (meta &form)\n           source (str/join \":\" (filter some? [*file* line]))]\n       `(let [y# ~x]\n          (binding [*out* *err*]\n            (pprint-document\n              [:group [:group ~(when (seq source)\n                                 [:span source :line])\n                       '~(pretty x)\n                       :line \"=>\"]\n               :line (pretty y#)]\n              {}))\n          y#))))\n"]}