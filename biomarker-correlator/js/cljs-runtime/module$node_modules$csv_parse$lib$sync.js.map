{
"version":3,
"file":"module$node_modules$csv_parse$lib$sync.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACnG,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAC/B,aAEAC,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAF,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,UAA/B,CAA2C,CACzCK,WAAY,CAAA,CAD6B,CAEzCC,IAAKA,QAAS,EAAG,CACf,MAAOC,OAAOC,CAAAA,QADC,CAFwB,CAA3C,CAMAR,QAAQS,CAAAA,KAAR,CAAgB,IAAK,EAErB,KAAIF,OAAST,OAAA,CAAQ,yCAAR,CA+BbE,QAAQS,CAAAA,KAAR,CA7BcA,QAAS,CAACC,IAAD,CAAOC,OAAA,CAAU,EAAjB,CAAqB,CACtB,QAApB,GAAI,MAAOD,KAAX,GACEA,IADF,CACST,MAAOW,CAAAA,IAAP,CAAYF,IAAZ,CADT,CAIA,OAAMG;AAAUF,OAAA,EAAWA,OAAQG,CAAAA,OAAnB,CAA6B,EAA7B,CAAkC,EAClD,KAAMC,OAAS,IAAIR,MAAOS,CAAAA,MAAX,CAAkBL,OAAlB,CAEfI,OAAOE,CAAAA,IAAP,CAAcC,QAAS,CAACC,MAAD,CAAS,CACf,IAAf,GAAIA,MAAJ,GAIwBC,IAAAA,EAAxB,GAAIT,OAAQG,CAAAA,OAAZ,CAAmCD,OAAQI,CAAAA,IAAR,CAAaE,MAAb,CAAnC,CACEN,OAAA,CAAQM,MAAA,CAAO,CAAP,CAAR,CADF,CACuBA,MAAA,CAAO,CAAP,CALvB,CAD8B,CAU1BE,KAAAA,CAAON,MAAOO,CAAAA,OAAP,CAAeZ,IAAf,CAAqB,CAAA,CAArB,CAEb,IAAaU,IAAAA,EAAb,GAAIC,IAAJ,CAAwB,KAAMA,KAAN,CAElBE,MAAAA,CAAOR,MAAOO,CAAAA,OAAP,CAAeF,IAAAA,EAAf,CAA0B,CAAA,CAA1B,CAEb,IAAaA,IAAAA,EAAb,GAAIG,MAAJ,CAAwB,KAAMA,OAAN,CACxB,MAAOV,QAzBmC,CAjBuD;",
"sources":["node_modules/csv-parse/lib/sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$csv_parse$lib$sync\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CsvError\", {\n  enumerable: true,\n  get: function () {\n    return _index.CsvError;\n  }\n});\nexports.parse = void 0;\n\nvar _index = require(\"./index.js\");\n\nconst parse = function (data, options = {}) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data);\n  }\n\n  const records = options && options.objname ? {} : [];\n  const parser = new _index.Parser(options);\n\n  parser.push = function (record) {\n    if (record === null) {\n      return;\n    }\n\n    if (options.objname === undefined) records.push(record);else {\n      records[record[0]] = record[1];\n    }\n  };\n\n  const err1 = parser.__parse(data, false);\n\n  if (err1 !== undefined) throw err1;\n\n  const err2 = parser.__parse(undefined, true);\n\n  if (err2 !== undefined) throw err2;\n  return records;\n}; // export default parse\n\n\nexports.parse = parse;\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","enumerable","get","_index","CsvError","parse","data","options","from","records","objname","parser","Parser","push","parser.push","record","undefined","err1","__parse","err2"]
}
