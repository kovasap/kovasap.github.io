shadow$provide.module$node_modules$csv_parse$lib$index=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.CsvError=exports.Parser=exports.parse=void 0;global=require("module$node_modules$stream_browserify$index");var _ResizeableBuffer=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$csv_parse$lib$ResizeableBuffer"));const boms={utf8:Buffer.from([239,
187,191]),utf16le:Buffer.from([255,254])};class CsvError extends Error{constructor(code,message,options,...contexts){Array.isArray(message)&&(message=message.join(" "));super(message);void 0!==Error.captureStackTrace&&Error.captureStackTrace(this,CsvError);this.code=code;for(const context of contexts)for(const key in context)code=context[key],this[key]=Buffer.isBuffer(code)?code.toString(options.encoding):null==code?code:JSON.parse(JSON.stringify(code))}}exports.CsvError=CsvError;const underscore=
function(str){return str.replace(/([A-Z])/g,function(_,match){return"_"+match.toLowerCase()})},isObject=function(obj){return"object"===typeof obj&&null!==obj&&!Array.isArray(obj)},isRecordEmpty=function(record){return record.every(field=>null==field||field.toString&&""===field.toString().trim())},normalizeColumnsArray=function(columns){const normalizedColumns=[];for(let i=0,l=columns.length;i<l;i++){const column=columns[i];if(void 0===column||null===column||!1===column)normalizedColumns[i]={disabled:!0};
else if("string"===typeof column)normalizedColumns[i]={name:column};else if(isObject(column)){if("string"!==typeof column.name)throw new CsvError("CSV_OPTION_COLUMNS_MISSING_NAME",["Option columns missing name:",`property "name" is required at position ${i}`,"when column is an object literal"]);normalizedColumns[i]=column}else throw new CsvError("CSV_INVALID_COLUMN_DEFINITION",["Invalid column definition:","expect a string or a literal object,",`got ${JSON.stringify(column)} at position ${i}`]);}return normalizedColumns};
class Parser extends global.Transform{constructor(opts){opts=void 0===opts?{}:opts;super(Object.assign({},{readableObjectMode:!0},opts,{encoding:null}));this.__originalOptions=opts;this.__normalizeOptions(opts)}__normalizeOptions(opts){const options={};for(var opt in opts)options[underscore(opt)]=opts[opt];if(void 0===options.encoding||!0===options.encoding)options.encoding="utf8";else if(null===options.encoding||!1===options.encoding)options.encoding=null;else if("string"!==typeof options.encoding&&
null!==options.encoding)throw new CsvError("CSV_INVALID_OPTION_ENCODING",["Invalid option encoding:","encoding must be a string or null to return a buffer,",`got ${JSON.stringify(options.encoding)}`],options);if(void 0===options.bom||null===options.bom||!1===options.bom)options.bom=!1;else if(!0!==options.bom)throw new CsvError("CSV_INVALID_OPTION_BOM",["Invalid option bom:","bom must be true,",`got ${JSON.stringify(options.bom)}`],options);opt=null;if(void 0===options.cast||null===options.cast||
!1===options.cast||""===options.cast)options.cast=void 0;else if("function"===typeof options.cast)opt=options.cast,options.cast=!0;else if(!0!==options.cast)throw new CsvError("CSV_INVALID_OPTION_CAST",["Invalid option cast:","cast must be true or a function,",`got ${JSON.stringify(options.cast)}`],options);if(void 0===options.cast_date||null===options.cast_date||!1===options.cast_date||""===options.cast_date)options.cast_date=!1;else if(!0===options.cast_date)options.cast_date=function(value){const date=
Date.parse(value);return isNaN(date)?value:new Date(date)};else throw new CsvError("CSV_INVALID_OPTION_CAST_DATE",["Invalid option cast_date:","cast_date must be true or a function,",`got ${JSON.stringify(options.cast_date)}`],options);let fnFirstLineToHeaders=null;if(!0===options.columns)fnFirstLineToHeaders=void 0;else if("function"===typeof options.columns)fnFirstLineToHeaders=options.columns,options.columns=!0;else if(Array.isArray(options.columns))options.columns=normalizeColumnsArray(options.columns);
else if(void 0===options.columns||null===options.columns||!1===options.columns)options.columns=!1;else throw new CsvError("CSV_INVALID_OPTION_COLUMNS",["Invalid option columns:","expect an array, a function or true,",`got ${JSON.stringify(options.columns)}`],options);if(void 0===options.group_columns_by_name||null===options.group_columns_by_name||!1===options.group_columns_by_name)options.group_columns_by_name=!1;else{if(!0!==options.group_columns_by_name)throw new CsvError("CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME",
["Invalid option group_columns_by_name:","expect an boolean,",`got ${JSON.stringify(options.group_columns_by_name)}`],options);if(!1===options.columns)throw new CsvError("CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME",["Invalid option group_columns_by_name:","the `columns` mode must be activated."],options);}if(void 0===options.comment||null===options.comment||!1===options.comment||""===options.comment)options.comment=null;else if("string"===typeof options.comment&&(options.comment=Buffer.from(options.comment,
options.encoding)),!Buffer.isBuffer(options.comment))throw new CsvError("CSV_INVALID_OPTION_COMMENT",["Invalid option comment:","comment must be a buffer or a string,",`got ${JSON.stringify(options.comment)}`],options);const delimiter_json=JSON.stringify(options.delimiter);Array.isArray(options.delimiter)||(options.delimiter=[options.delimiter]);if(0===options.delimiter.length)throw new CsvError("CSV_INVALID_OPTION_DELIMITER",["Invalid option delimiter:","delimiter must be a non empty string or buffer or array of string|buffer,",
`got ${delimiter_json}`],options);options.delimiter=options.delimiter.map(function(delimiter){if(void 0===delimiter||null===delimiter||!1===delimiter)return Buffer.from(",",options.encoding);"string"===typeof delimiter&&(delimiter=Buffer.from(delimiter,options.encoding));if(!Buffer.isBuffer(delimiter)||0===delimiter.length)throw new CsvError("CSV_INVALID_OPTION_DELIMITER",["Invalid option delimiter:","delimiter must be a non empty string or buffer or array of string|buffer,",`got ${delimiter_json}`],
options);return delimiter});if(void 0===options.escape||!0===options.escape)options.escape=Buffer.from('"',options.encoding);else if("string"===typeof options.escape)options.escape=Buffer.from(options.escape,options.encoding);else if(null===options.escape||!1===options.escape)options.escape=null;if(null!==options.escape&&!Buffer.isBuffer(options.escape))throw Error(`Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options.escape)}`);if(void 0===options.from||null===
options.from)options.from=1;else if("string"===typeof options.from&&/\d+/.test(options.from)&&(options.from=parseInt(options.from)),Number.isInteger(options.from)){if(0>options.from)throw Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`);}else throw Error(`Invalid Option: from must be an integer, got ${JSON.stringify(options.from)}`);if(void 0===options.from_line||null===options.from_line)options.from_line=1;else if("string"===typeof options.from_line&&/\d+/.test(options.from_line)&&
(options.from_line=parseInt(options.from_line)),Number.isInteger(options.from_line)){if(0>=options.from_line)throw Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`);}else throw Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`);if(void 0===options.ignore_last_delimiters||null===options.ignore_last_delimiters)options.ignore_last_delimiters=!1;else if("number"===typeof options.ignore_last_delimiters)options.ignore_last_delimiters=
Math.floor(options.ignore_last_delimiters),0===options.ignore_last_delimiters&&(options.ignore_last_delimiters=!1);else if("boolean"!==typeof options.ignore_last_delimiters)throw new CsvError("CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS",["Invalid option `ignore_last_delimiters`:","the value must be a boolean value or an integer,",`got ${JSON.stringify(options.ignore_last_delimiters)}`],options);if(!0===options.ignore_last_delimiters&&!1===options.columns)throw new CsvError("CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS",
["The option `ignore_last_delimiters`","requires the activation of the `columns` option"],options);if(void 0===options.info||null===options.info||!1===options.info)options.info=!1;else if(!0!==options.info)throw Error(`Invalid Option: info must be true, got ${JSON.stringify(options.info)}`);if(void 0===options.max_record_size||null===options.max_record_size||!1===options.max_record_size)options.max_record_size=0;else if(!(Number.isInteger(options.max_record_size)&&0<=options.max_record_size))if("string"===
typeof options.max_record_size&&/\d+/.test(options.max_record_size))options.max_record_size=parseInt(options.max_record_size);else throw Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options.max_record_size)}`);if(void 0===options.objname||null===options.objname||!1===options.objname)options.objname=void 0;else if(Buffer.isBuffer(options.objname)){if(0===options.objname.length)throw Error("Invalid Option: objname must be a non empty buffer");null!==options.encoding&&
(options.objname=options.objname.toString(options.encoding))}else if("string"===typeof options.objname){if(0===options.objname.length)throw Error("Invalid Option: objname must be a non empty string");}else if("number"!==typeof options.objname)throw Error(`Invalid Option: objname must be a string or a buffer, got ${options.objname}`);if(void 0!==options.objname)if("number"===typeof options.objname){if(!1!==options.columns)throw Error("Invalid Option: objname index cannot be combined with columns or be defined as a field");
}else if(!1===options.columns)throw Error("Invalid Option: objname field must be combined with columns or be defined as an index");if(void 0===options.on_record||null===options.on_record)options.on_record=void 0;else if("function"!==typeof options.on_record)throw new CsvError("CSV_INVALID_OPTION_ON_RECORD",["Invalid option `on_record`:","expect a function,",`got ${JSON.stringify(options.on_record)}`],options);if(null===options.quote||!1===options.quote||""===options.quote)options.quote=null;else if(void 0===
options.quote||!0===options.quote?options.quote=Buffer.from('"',options.encoding):"string"===typeof options.quote&&(options.quote=Buffer.from(options.quote,options.encoding)),!Buffer.isBuffer(options.quote))throw Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options.quote)}`);if(void 0===options.raw||null===options.raw||!1===options.raw)options.raw=!1;else if(!0!==options.raw)throw Error(`Invalid Option: raw must be true, got ${JSON.stringify(options.raw)}`);if(void 0===
options.record_delimiter)options.record_delimiter=[];else if("string"===typeof options.record_delimiter||Buffer.isBuffer(options.record_delimiter)){if(0===options.record_delimiter.length)throw new CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER",["Invalid option `record_delimiter`:","value must be a non empty string or buffer,",`got ${JSON.stringify(options.record_delimiter)}`],options);options.record_delimiter=[options.record_delimiter]}else if(!Array.isArray(options.record_delimiter))throw new CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER",
["Invalid option `record_delimiter`:","value must be a string, a buffer or array of string|buffer,",`got ${JSON.stringify(options.record_delimiter)}`],options);options.record_delimiter=options.record_delimiter.map(function(rd,i){if("string"!==typeof rd&&!Buffer.isBuffer(rd))throw new CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER",["Invalid option `record_delimiter`:","value must be a string, a buffer or array of string|buffer",`at index ${i},`,`got ${JSON.stringify(rd)}`],options);if(0===rd.length)throw new CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER",
["Invalid option `record_delimiter`:","value must be a non empty string or buffer",`at index ${i},`,`got ${JSON.stringify(rd)}`],options);"string"===typeof rd&&(rd=Buffer.from(rd,options.encoding));return rd});if("boolean"!==typeof options.relax_column_count)if(void 0===options.relax_column_count||null===options.relax_column_count)options.relax_column_count=!1;else throw Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options.relax_column_count)}`);if("boolean"!==
typeof options.relax_column_count_less)if(void 0===options.relax_column_count_less||null===options.relax_column_count_less)options.relax_column_count_less=!1;else throw Error(`Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options.relax_column_count_less)}`);if("boolean"!==typeof options.relax_column_count_more)if(void 0===options.relax_column_count_more||null===options.relax_column_count_more)options.relax_column_count_more=!1;else throw Error(`Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options.relax_column_count_more)}`);
if("boolean"!==typeof options.relax_quotes)if(void 0===options.relax_quotes||null===options.relax_quotes)options.relax_quotes=!1;else throw Error(`Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options.relax_quotes)}`);if("boolean"!==typeof options.skip_empty_lines)if(void 0===options.skip_empty_lines||null===options.skip_empty_lines)options.skip_empty_lines=!1;else throw Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options.skip_empty_lines)}`);
if("boolean"!==typeof options.skip_records_with_empty_values)if(void 0===options.skip_records_with_empty_values||null===options.skip_records_with_empty_values)options.skip_records_with_empty_values=!1;else throw Error(`Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options.skip_records_with_empty_values)}`);if("boolean"!==typeof options.skip_records_with_error)if(void 0===options.skip_records_with_error||null===options.skip_records_with_error)options.skip_records_with_error=
!1;else throw Error(`Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options.skip_records_with_error)}`);if(void 0===options.rtrim||null===options.rtrim||!1===options.rtrim)options.rtrim=!1;else if(!0!==options.rtrim)throw Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options.rtrim)}`);if(void 0===options.ltrim||null===options.ltrim||!1===options.ltrim)options.ltrim=!1;else if(!0!==options.ltrim)throw Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options.ltrim)}`);
if(void 0===options.trim||null===options.trim||!1===options.trim)options.trim=!1;else if(!0!==options.trim)throw Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(options.trim)}`);!0===options.trim&&!1!==opts.ltrim?options.ltrim=!0:!0!==options.ltrim&&(options.ltrim=!1);!0===options.trim&&!1!==opts.rtrim?options.rtrim=!0:!0!==options.rtrim&&(options.rtrim=!1);if(void 0===options.to||null===options.to)options.to=-1;else if("string"===typeof options.to&&/\d+/.test(options.to)&&(options.to=
parseInt(options.to)),Number.isInteger(options.to)){if(0>=options.to)throw Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`);}else throw Error(`Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`);if(void 0===options.to_line||null===options.to_line)options.to_line=-1;else if("string"===typeof options.to_line&&/\d+/.test(options.to_line)&&(options.to_line=parseInt(options.to_line)),Number.isInteger(options.to_line)){if(0>=options.to_line)throw Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`);
}else throw Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`);this.info={bytes:0,comment_lines:0,empty_lines:0,invalid_field_length:0,lines:1,records:0};this.options=options;this.state={bomSkipped:!1,bufBytesStart:0,castField:opt,commenting:!1,error:void 0,enabled:1===options.from_line,escaping:!1,escapeIsQuote:Buffer.isBuffer(options.escape)&&Buffer.isBuffer(options.quote)&&0===Buffer.compare(options.escape,options.quote),expectedRecordLength:Array.isArray(options.columns)?
options.columns.length:void 0,field:new _ResizeableBuffer.default(20),firstLineToHeaders:fnFirstLineToHeaders,needMoreDataSize:Math.max(null!==options.comment?options.comment.length:0,...options.delimiter.map(delimiter=>delimiter.length),null!==options.quote?options.quote.length:0),previousBuf:void 0,quoting:!1,stop:!1,rawBuffer:new _ResizeableBuffer.default(100),record:[],recordHasError:!1,record_length:0,recordDelimiterMaxLength:0===options.record_delimiter.length?2:Math.max(...options.record_delimiter.map(v=>
v.length)),trimChars:[Buffer.from(" ",options.encoding)[0],Buffer.from("\t",options.encoding)[0]],wasQuoting:!1,wasRowDelimiter:!1}}_transform(buf,encoding,callback){!0!==this.state.stop&&(buf=this.__parse(buf,!1),void 0!==buf&&(this.state.stop=!0),callback(buf))}_flush(callback){if(!0!==this.state.stop){var err=this.__parse(void 0,!0);callback(err)}}__parse(nextBuf,end){const {bom,comment,escape,from_line,ltrim,max_record_size,quote,raw,relax_quotes,rtrim,skip_empty_lines,to,to_line}=this.options;
let {record_delimiter}=this.options;const {bomSkipped,previousBuf,rawBuffer,escapeIsQuote}=this.state;if(void 0===previousBuf){if(void 0===nextBuf){this.push(null);return}}else nextBuf=void 0!==previousBuf&&void 0===nextBuf?previousBuf:Buffer.concat([previousBuf,nextBuf]);if(!1===bomSkipped)if(!1===bom)this.state.bomSkipped=!0;else if(3>nextBuf.length){if(!1===end){this.state.previousBuf=nextBuf;return}}else{for(var encoding in boms)if(0===boms[encoding].compare(nextBuf,0,boms[encoding].length)){var bomLength=
boms[encoding].length;this.state.bufBytesStart+=bomLength;nextBuf=nextBuf.slice(bomLength);this.__normalizeOptions(Object.assign({},this.__originalOptions,{encoding}));break}this.state.bomSkipped=!0}encoding=nextBuf.length;for(bomLength=0;bomLength<encoding&&!this.__needMoreData(bomLength,encoding,end);bomLength++){!0===this.state.wasRowDelimiter&&(this.info.lines++,this.state.wasRowDelimiter=!1);if(-1!==to_line&&this.info.lines>to_line){this.state.stop=!0;this.push(null);return}!1===this.state.quoting&&
0===record_delimiter.length&&this.__autoDiscoverRecordDelimiter(nextBuf,bomLength)&&(record_delimiter=this.options.record_delimiter);var chr=nextBuf[bomLength];!0===raw&&rawBuffer.append(chr);13!==chr&&10!==chr||!1!==this.state.wasRowDelimiter||(this.state.wasRowDelimiter=!0);if(!0===this.state.escaping)this.state.escaping=!1;else{if(null!==escape&&!0===this.state.quoting&&this.__isEscape(nextBuf,bomLength,chr)&&bomLength+escape.length<encoding)if(escapeIsQuote){if(this.__isQuote(nextBuf,bomLength+
escape.length)){this.state.escaping=!0;bomLength+=escape.length-1;continue}}else{this.state.escaping=!0;bomLength+=escape.length-1;continue}if(!1===this.state.commenting&&this.__isQuote(nextBuf,bomLength))if(!0===this.state.quoting){var nextChr=nextBuf[bomLength+quote.length],isNextChrTrimable=rtrim&&this.__isCharTrimable(nextChr);const isNextChrComment=null!==comment&&this.__compareBytes(comment,nextBuf,bomLength+quote.length,nextChr),isNextChrDelimiter=this.__isDelimiter(nextBuf,bomLength+quote.length,
nextChr),isNextChrRecordDelimiter=0===record_delimiter.length?this.__autoDiscoverRecordDelimiter(nextBuf,bomLength+quote.length):this.__isRecordDelimiter(nextChr,nextBuf,bomLength+quote.length);if(null!==escape&&this.__isEscape(nextBuf,bomLength,chr)&&this.__isQuote(nextBuf,bomLength+escape.length))bomLength+=escape.length-1;else if(!nextChr||isNextChrDelimiter||isNextChrRecordDelimiter||isNextChrComment||isNextChrTrimable){this.state.quoting=!1;this.state.wasQuoting=!0;bomLength+=quote.length-1;
continue}else if(!1===relax_quotes){if(nextChr=this.__error(new CsvError("CSV_INVALID_CLOSING_QUOTE",["Invalid Closing Quote:",`got "${String.fromCharCode(nextChr)}"`,`at line ${this.info.lines}`,"instead of delimiter, record delimiter, trimable character","(if activated) or comment"],this.options,this.__infoField())),void 0!==nextChr)return nextChr}else this.state.quoting=!1,this.state.wasQuoting=!0,this.state.field.prepend(quote),bomLength+=quote.length-1}else if(0!==this.state.field.length){if(!1===
relax_quotes&&(nextChr=this.__error(new CsvError("INVALID_OPENING_QUOTE",["Invalid Opening Quote:",`a quote is found inside a field at line ${this.info.lines}`],this.options,this.__infoField(),{field:this.state.field})),void 0!==nextChr))return nextChr}else{this.state.quoting=!0;bomLength+=quote.length-1;continue}if(!1===this.state.quoting){nextChr=this.__isRecordDelimiter(chr,nextBuf,bomLength);if(0!==nextChr){if(this.state.commenting&&!1===this.state.wasQuoting&&0===this.state.record.length&&0===
this.state.field.length)this.info.comment_lines++;else{if(!1===this.state.enabled&&this.info.lines+(!0===this.state.wasRowDelimiter?1:0)>=from_line){this.state.enabled=!0;this.__resetField();this.__resetRecord();bomLength+=nextChr-1;continue}if(!0===skip_empty_lines&&!1===this.state.wasQuoting&&0===this.state.record.length&&0===this.state.field.length){this.info.empty_lines++;bomLength+=nextChr-1;continue}this.info.bytes=this.state.bufBytesStart+bomLength;chr=this.__onField();if(void 0!==chr)return chr;
this.info.bytes=this.state.bufBytesStart+bomLength+nextChr;chr=this.__onRecord();if(void 0!==chr)return chr;if(-1!==to&&this.info.records>=to){this.state.stop=!0;this.push(null);return}}this.state.commenting=!1;bomLength+=nextChr-1;continue}if(this.state.commenting)continue;if(0!==(null===comment?0:this.__compareBytes(comment,nextBuf,bomLength,chr))){this.state.commenting=!0;continue}nextChr=this.__isDelimiter(nextBuf,bomLength,chr);if(0!==nextChr){this.info.bytes=this.state.bufBytesStart+bomLength;
chr=this.__onField();if(void 0!==chr)return chr;bomLength+=nextChr-1;continue}}}if(!1===this.state.commenting&&0!==max_record_size&&this.state.record_length+this.state.field.length>max_record_size&&(nextChr=this.__error(new CsvError("CSV_MAX_RECORD_SIZE",["Max Record Size:","record exceed the maximum number of tolerated bytes",`of ${max_record_size}`,`at line ${this.info.lines}`],this.options,this.__infoField())),void 0!==nextChr))return nextChr;nextChr=!1===ltrim||!0===this.state.quoting||0!==this.state.field.length||
!this.__isCharTrimable(chr);isNextChrTrimable=!1===rtrim||!1===this.state.wasQuoting;if(!0===nextChr&&!0===isNextChrTrimable)this.state.field.append(chr);else if(!0===rtrim&&!this.__isCharTrimable(chr)&&(chr=this.__error(new CsvError("CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE",["Invalid Closing Quote:","found non trimable byte after quote",`at line ${this.info.lines}`],this.options,this.__infoField())),void 0!==chr))return chr}if(!0===end)if(!0===this.state.quoting){if(end=this.__error(new CsvError("CSV_QUOTE_NOT_CLOSED",
["Quote Not Closed:",`the parsing is finished with an opening quote at line ${this.info.lines}`],this.options,this.__infoField())),void 0!==end)return end}else if(!0===this.state.wasQuoting||0!==this.state.record.length||0!==this.state.field.length){this.info.bytes=this.state.bufBytesStart+bomLength;end=this.__onField();if(void 0!==end)return end;end=this.__onRecord();if(void 0!==end)return end}else!0===this.state.wasRowDelimiter?this.info.empty_lines++:!0===this.state.commenting&&this.info.comment_lines++;
else this.state.bufBytesStart+=bomLength,this.state.previousBuf=nextBuf.slice(bomLength);!0===this.state.wasRowDelimiter&&(this.info.lines++,this.state.wasRowDelimiter=!1)}__onRecord(){const {columns,group_columns_by_name,encoding,info,from,relax_column_count,relax_column_count_less,relax_column_count_more,raw,skip_records_with_empty_values}=this.options,{enabled,record}=this.state;if(!1===enabled)return this.__resetRecord();var recordLength=record.length;if(!0===columns){if(!0===skip_records_with_empty_values&&
isRecordEmpty(record)){this.__resetRecord();return}return this.__firstLineToColumns(record)}!1===columns&&0===this.info.records&&(this.state.expectedRecordLength=recordLength);if(recordLength!==this.state.expectedRecordLength){var err=!1===columns?new CsvError("CSV_RECORD_INCONSISTENT_FIELDS_LENGTH",["Invalid Record Length:",`expect ${this.state.expectedRecordLength},`,`got ${recordLength} on line ${this.info.lines}`],this.options,this.__infoField(),{record}):new CsvError("CSV_RECORD_INCONSISTENT_COLUMNS",
["Invalid Record Length:",`columns length is ${columns.length},`,`got ${recordLength} on line ${this.info.lines}`],this.options,this.__infoField(),{record});if(!0===relax_column_count||!0===relax_column_count_less&&recordLength<this.state.expectedRecordLength||!0===relax_column_count_more&&recordLength>this.state.expectedRecordLength)this.info.invalid_field_length++,this.state.error=err;else if(recordLength=this.__error(err))return recordLength}if(!0===skip_records_with_empty_values&&isRecordEmpty(record))this.__resetRecord();
else if(!0===this.state.recordHasError)this.__resetRecord(),this.state.recordHasError=!1;else{this.info.records++;if(1===from||this.info.records>=from)if({objname:recordLength}=this.options,!1!==columns){err={};for(let i=0,l=record.length;i<l;i++)void 0===columns[i]||columns[i].disabled||(!0===group_columns_by_name&&void 0!==err[columns[i].name]?Array.isArray(err[columns[i].name])?err[columns[i].name]=err[columns[i].name].concat(record[i]):err[columns[i].name]=[err[columns[i].name],record[i]]:err[columns[i].name]=
record[i]);if(!0===raw||!0===info){const extRecord=Object.assign({record:err},!0===raw?{raw:this.state.rawBuffer.toString(encoding)}:{},!0===info?{info:this.__infoRecord()}:{});if(recordLength=this.__push(void 0===recordLength?extRecord:[err[recordLength],extRecord]))return recordLength}else if(recordLength=this.__push(void 0===recordLength?err:[err[recordLength],err]))return recordLength}else if(!0===raw||!0===info){if(err=Object.assign({record},!0===raw?{raw:this.state.rawBuffer.toString(encoding)}:
{},!0===info?{info:this.__infoRecord()}:{}),recordLength=this.__push(void 0===recordLength?err:[record[recordLength],err]))return recordLength}else if(recordLength=this.__push(void 0===recordLength?record:[record[recordLength],record]))return recordLength;this.__resetRecord()}}__firstLineToColumns(record){const {firstLineToHeaders}=this.state;try{const headers=void 0===firstLineToHeaders?record:firstLineToHeaders.call(null,record);if(!Array.isArray(headers))return this.__error(new CsvError("CSV_INVALID_COLUMN_MAPPING",
["Invalid Column Mapping:","expect an array from column function,",`got ${JSON.stringify(headers)}`],this.options,this.__infoField(),{headers}));const normalizedHeaders=normalizeColumnsArray(headers);this.state.expectedRecordLength=normalizedHeaders.length;this.options.columns=normalizedHeaders;this.__resetRecord()}catch(err){return err}}__resetRecord(){!0===this.options.raw&&this.state.rawBuffer.reset();this.state.error=void 0;this.state.record=[];this.state.record_length=0}__onField(){const {cast,
encoding,rtrim,max_record_size}=this.options,{enabled,wasQuoting}=this.state;if(!1===enabled)return this.__resetField();let field=this.state.field.toString(encoding);!0===rtrim&&!1===wasQuoting&&(field=field.trimRight());if(!0===cast){const [err,f]=this.__cast(field);if(void 0!==err)return err;field=f}this.state.record.push(field);0!==max_record_size&&"string"===typeof field&&(this.state.record_length+=field.length);this.__resetField()}__resetField(){this.state.field.reset();this.state.wasQuoting=
!1}__push(record){const {on_record}=this.options;if(void 0!==on_record){const info=this.__infoRecord();try{record=on_record.call(null,record,info)}catch(err){return err}if(void 0===record||null===record)return}this.push(record)}__cast(field){const {columns,relax_column_count}=this.options;if(!0===Array.isArray(columns)&&relax_column_count&&this.options.columns.length<=this.state.record.length)return[void 0,void 0];if(null!==this.state.castField)try{var info=this.__infoField();return[void 0,this.state.castField.call(null,
field,info)]}catch(err){return[err]}return this.__isFloat(field)?[void 0,parseFloat(field)]:!1!==this.options.cast_date?(info=this.__infoField(),[void 0,this.options.cast_date.call(null,field,info)]):[void 0,field]}__isCharTrimable(chr){return 32===chr||9===chr||13===chr||10===chr||12===chr}__isFloat(value){return 0<=value-parseFloat(value)+1}__compareBytes(sourceBuf,targetBuf,targetPos,firstByte){if(sourceBuf[0]!==firstByte)return 0;firstByte=sourceBuf.length;for(let i=1;i<firstByte;i++)if(sourceBuf[i]!==
targetBuf[targetPos+i])return 0;return firstByte}__needMoreData(i,bufLen,end){if(end)return!1;({quote:end}=this.options);const {quoting,needMoreDataSize,recordDelimiterMaxLength}=this.state;return bufLen-i-1<Math.max(needMoreDataSize,recordDelimiterMaxLength,quoting?end.length+recordDelimiterMaxLength:0)}__isDelimiter(buf,pos,chr){const {delimiter,ignore_last_delimiters}=this.options;if(!0===ignore_last_delimiters&&this.state.record.length===this.options.columns.length-1||!1!==ignore_last_delimiters&&
"number"===typeof ignore_last_delimiters&&this.state.record.length===ignore_last_delimiters-1)return 0;a:for(let i=0;i<delimiter.length;i++){const del=delimiter[i];if(del[0]===chr){for(let j=1;j<del.length;j++)if(del[j]!==buf[pos+j])continue a;return del.length}}return 0}__isRecordDelimiter(chr,buf,pos){const {record_delimiter}=this.options,recordDelimiterLength=record_delimiter.length;a:for(let i=0;i<recordDelimiterLength;i++){const rd=record_delimiter[i],rdLength=rd.length;if(rd[0]===chr){for(let j=
1;j<rdLength;j++)if(rd[j]!==buf[pos+j])continue a;return rd.length}}return 0}__isEscape(buf,pos,chr){const {escape}=this.options;if(null===escape)return!1;const l=escape.length;if(escape[0]===chr){for(chr=0;chr<l;chr++)if(escape[chr]!==buf[pos+chr])return!1;return!0}return!1}__isQuote(buf,pos){const {quote}=this.options;if(null===quote)return!1;const l=quote.length;for(let i=0;i<l;i++)if(quote[i]!==buf[pos+i])return!1;return!0}__autoDiscoverRecordDelimiter(buf,pos){const {encoding}=this.options,chr=
buf[pos];if(13===chr){if(10===buf[pos+1])return this.options.record_delimiter.push(Buffer.from("\r\n",encoding)),this.state.recordDelimiterMaxLength=2;this.options.record_delimiter.push(Buffer.from("\r",encoding));return this.state.recordDelimiterMaxLength=1}return 10===chr?(this.options.record_delimiter.push(Buffer.from("\n",encoding)),this.state.recordDelimiterMaxLength=1):0}__error(msg){const {encoding,raw,skip_records_with_error}=this.options;msg="string"===typeof msg?Error(msg):msg;if(skip_records_with_error)this.state.recordHasError=
!0,this.emit("skip",msg,raw?this.state.rawBuffer.toString(encoding):void 0);else return msg}__infoDataSet(){return Object.assign({},this.info,{columns:this.options.columns})}__infoRecord(){const {columns,raw,encoding}=this.options;return Object.assign({},this.__infoDataSet(),{error:this.state.error,header:!0===columns,index:this.state.record.length,raw:raw?this.state.rawBuffer.toString(encoding):void 0})}__infoField(){const {columns}=this.options,isColumns=Array.isArray(columns);return Object.assign({},
this.__infoRecord(),{column:!0===isColumns?columns.length>this.state.record.length?columns[this.state.record.length].name:null:this.state.record.length,quoting:this.state.wasQuoting})}}exports.Parser=Parser;exports.parse=function(){let data,options,callback;for(var i in arguments){const argument=arguments[i],type=typeof argument;if(void 0!==data||"string"!==typeof argument&&!Buffer.isBuffer(argument))if(void 0===options&&isObject(argument))options=argument;else if(void 0===callback&&"function"===
type)callback=argument;else throw new CsvError("CSV_INVALID_ARGUMENT",["Invalid argument:",`got ${JSON.stringify(argument)} at index ${i}`],options||{});else data=argument}const parser=new Parser(options);if(callback){const records=void 0===options||void 0===options.objname?[]:{};parser.on("readable",function(){let record;for(;null!==(record=this.read());)void 0===options||void 0===options.objname?records.push(record):records[record[0]]=record[1]});parser.on("error",function(err){callback(err,void 0,
parser.__infoDataSet())});parser.on("end",function(){callback(void 0,records,parser.__infoDataSet())})}void 0!==data&&(i=function(){parser.write(data);parser.end()},"function"===typeof setImmediate?setImmediate(i):setTimeout(i,0));return parser}}
//# sourceMappingURL=module$node_modules$csv_parse$lib$index.js.map
