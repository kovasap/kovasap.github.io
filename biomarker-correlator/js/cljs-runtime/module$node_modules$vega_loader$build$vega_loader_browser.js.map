{
"version":3,
"file":"module$node_modules$vega_loader$build$vega_loader_browser.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/vega-loader/build/vega-loader.browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_loader$build$vega_loader_browser\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-util'), require('d3-dsv'), require('topojson-client'), require('vega-format')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-util', 'd3-dsv', 'topojson-client', 'vega-format'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vega = {}, global.vega, global.d3, global.topojson, global.vega));\n}(this, (function (exports, vegaUtil, d3Dsv, topojsonClient, vegaFormat) { 'use strict';\n\n  //   https://...    file://...    //...\n\n  const protocol_re = /^(data:|([A-Za-z]+:)?\\/\\/)/; // Matches allowed URIs. From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js with added file://\n\n  const allowed_re = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file|data):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\n\n  const whitespace_re = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n  // Special treatment in node.js for the file: protocol\n\n  const fileProtocol = 'file://';\n  /**\n   * Factory for a loader constructor that provides methods for requesting\n   * files from either the network or disk, and for sanitizing request URIs.\n   * @param {function} fetch - The Fetch API for HTTP network requests.\n   *   If null or undefined, HTTP loading will be disabled.\n   * @param {object} fs - The file system interface for file loading.\n   *   If null or undefined, local file loading will be disabled.\n   * @return {function} A loader constructor with the following signature:\n   *   param {object} [options] - Optional default loading options to use.\n   *   return {object} - A new loader instance.\n   */\n\n  function loaderFactory (fetch, fs) {\n    return options => ({\n      options: options || {},\n      sanitize: sanitize,\n      load: load,\n      fileAccess: !!fs,\n      file: fileLoader(fs),\n      http: httpLoader(fetch)\n    });\n  }\n  /**\n   * Load an external resource, typically either from the web or from the local\n   * filesystem. This function uses {@link sanitize} to first sanitize the uri,\n   * then calls either {@link http} (for web requests) or {@link file} (for\n   * filesystem loading).\n   * @param {string} uri - The resource indicator (e.g., URL or filename).\n   * @param {object} [options] - Optional loading options. These options will\n   *   override any existing default options.\n   * @return {Promise} - A promise that resolves to the loaded content.\n   */\n\n  async function load(uri, options) {\n    const opt = await this.sanitize(uri, options),\n          url = opt.href;\n    return opt.localFile ? this.file(url) : this.http(url, options);\n  }\n  /**\n   * URI sanitizer function.\n   * @param {string} uri - The uri (url or filename) to check.\n   * @param {object} options - An options hash.\n   * @return {Promise} - A promise that resolves to an object containing\n   *  sanitized uri data, or rejects it the input uri is deemed invalid.\n   *  The properties of the resolved object are assumed to be\n   *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be\n   *  provided by the 'href' property of the returned object.\n   */\n\n\n  async function sanitize(uri, options) {\n    options = vegaUtil.extend({}, this.options, options);\n    const fileAccess = this.fileAccess,\n          result = {\n      href: null\n    };\n    let isFile, loadFile, base;\n    const isAllowed = allowed_re.test(uri.replace(whitespace_re, ''));\n\n    if (uri == null || typeof uri !== 'string' || !isAllowed) {\n      vegaUtil.error('Sanitize failure, invalid URI: ' + vegaUtil.stringValue(uri));\n    }\n\n    const hasProtocol = protocol_re.test(uri); // if relative url (no protocol/host), prepend baseURL\n\n    if ((base = options.baseURL) && !hasProtocol) {\n      // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n      if (!uri.startsWith('/') && !base.endsWith('/')) {\n        uri = '/' + uri;\n      }\n\n      uri = base + uri;\n    } // should we load from file system?\n\n\n    loadFile = (isFile = uri.startsWith(fileProtocol)) || options.mode === 'file' || options.mode !== 'http' && !hasProtocol && fileAccess;\n\n    if (isFile) {\n      // strip file protocol\n      uri = uri.slice(fileProtocol.length);\n    } else if (uri.startsWith('//')) {\n      if (options.defaultProtocol === 'file') {\n        // if is file, strip protocol and set loadFile flag\n        uri = uri.slice(2);\n        loadFile = true;\n      } else {\n        // if relative protocol (starts with '//'), prepend default protocol\n        uri = (options.defaultProtocol || 'http') + ':' + uri;\n      }\n    } // set non-enumerable mode flag to indicate local file load\n\n\n    Object.defineProperty(result, 'localFile', {\n      value: !!loadFile\n    }); // set uri\n\n    result.href = uri; // set default result target, if specified\n\n    if (options.target) {\n      result.target = options.target + '';\n    } // set default result rel, if specified (#1542)\n\n\n    if (options.rel) {\n      result.rel = options.rel + '';\n    } // provide control over cross-origin image handling (#2238)\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n\n\n    if (options.context === 'image' && options.crossOrigin) {\n      result.crossOrigin = options.crossOrigin + '';\n    } // return\n\n\n    return result;\n  }\n  /**\n   * File system loader factory.\n   * @param {object} fs - The file system interface.\n   * @return {function} - A file loader with the following signature:\n   *   param {string} filename - The file system path to load.\n   *   param {string} filename - The file system path to load.\n   *   return {Promise} A promise that resolves to the file contents.\n   */\n\n\n  function fileLoader(fs) {\n    return fs ? filename => new Promise((accept, reject) => {\n      fs.readFile(filename, (error, data) => {\n        if (error) reject(error);else accept(data);\n      });\n    }) : fileReject;\n  }\n  /**\n   * Default file system loader that simply rejects.\n   */\n\n\n  async function fileReject() {\n    vegaUtil.error('No file system access.');\n  }\n  /**\n   * HTTP request handler factory.\n   * @param {function} fetch - The Fetch API method.\n   * @return {function} - An http loader with the following signature:\n   *   param {string} url - The url to request.\n   *   param {object} options - An options hash.\n   *   return {Promise} - A promise that resolves to the file contents.\n   */\n\n\n  function httpLoader(fetch) {\n    return fetch ? async function (url, options) {\n      const opt = vegaUtil.extend({}, this.options.http, options),\n            type = options && options.response,\n            response = await fetch(url, opt);\n      return !response.ok ? vegaUtil.error(response.status + '' + response.statusText) : vegaUtil.isFunction(response[type]) ? response[type]() : response.text();\n    } : httpReject;\n  }\n  /**\n   * Default http request handler that simply rejects.\n   */\n\n\n  async function httpReject() {\n    vegaUtil.error('No HTTP fetch method available.');\n  }\n\n  const isValid = _ => _ != null && _ === _;\n\n  const isBoolean = _ => _ === 'true' || _ === 'false' || _ === true || _ === false;\n\n  const isDate = _ => !Number.isNaN(Date.parse(_));\n\n  const isNumber = _ => !Number.isNaN(+_) && !(_ instanceof Date);\n\n  const isInteger = _ => isNumber(_) && Number.isInteger(+_);\n\n  const typeParsers = {\n    boolean: vegaUtil.toBoolean,\n    integer: vegaUtil.toNumber,\n    number: vegaUtil.toNumber,\n    date: vegaUtil.toDate,\n    string: vegaUtil.toString,\n    unknown: vegaUtil.identity\n  };\n  const typeTests = [isBoolean, isInteger, isNumber, isDate];\n  const typeList = ['boolean', 'integer', 'number', 'date'];\n  function inferType(values, field) {\n    if (!values || !values.length) return 'unknown';\n    const n = values.length,\n          m = typeTests.length,\n          a = typeTests.map((_, i) => i + 1);\n\n    for (let i = 0, t = 0, j, value; i < n; ++i) {\n      value = field ? values[i][field] : values[i];\n\n      for (j = 0; j < m; ++j) {\n        if (a[j] && isValid(value) && !typeTests[j](value)) {\n          a[j] = 0;\n          ++t;\n          if (t === typeTests.length) return 'string';\n        }\n      }\n    }\n\n    return typeList[a.reduce((u, v) => u === 0 ? v : u, 0) - 1];\n  }\n  function inferTypes(data, fields) {\n    return fields.reduce((types, field) => {\n      types[field] = inferType(data, field);\n      return types;\n    }, {});\n  }\n\n  function delimitedFormat(delimiter) {\n    const parse = function (data, format) {\n      const delim = {\n        delimiter: delimiter\n      };\n      return dsv(data, format ? vegaUtil.extend(format, delim) : delim);\n    };\n\n    parse.responseType = 'text';\n    return parse;\n  }\n  function dsv(data, format) {\n    if (format.header) {\n      data = format.header.map(vegaUtil.stringValue).join(format.delimiter) + '\\n' + data;\n    }\n\n    return d3Dsv.dsvFormat(format.delimiter).parse(data + '');\n  }\n  dsv.responseType = 'text';\n\n  function isBuffer(_) {\n    return typeof Buffer === 'function' && vegaUtil.isFunction(Buffer.isBuffer) ? Buffer.isBuffer(_) : false;\n  }\n\n  function json(data, format) {\n    const prop = format && format.property ? vegaUtil.field(format.property) : vegaUtil.identity;\n    return vegaUtil.isObject(data) && !isBuffer(data) ? parseJSON(prop(data), format) : prop(JSON.parse(data));\n  }\n  json.responseType = 'json';\n\n  function parseJSON(data, format) {\n    if (!vegaUtil.isArray(data) && vegaUtil.isIterable(data)) {\n      data = [...data];\n    }\n\n    return format && format.copy ? JSON.parse(JSON.stringify(data)) : data;\n  }\n\n  const filters = {\n    interior: (a, b) => a !== b,\n    exterior: (a, b) => a === b\n  };\n  function topojson(data, format) {\n    let method, object, property, filter;\n    data = json(data, format);\n\n    if (format && format.feature) {\n      method = topojsonClient.feature;\n      property = format.feature;\n    } else if (format && format.mesh) {\n      method = topojsonClient.mesh;\n      property = format.mesh;\n      filter = filters[format.filter];\n    } else {\n      vegaUtil.error('Missing TopoJSON feature or mesh parameter.');\n    }\n\n    object = (object = data.objects[property]) ? method(data, object, filter) : vegaUtil.error('Invalid TopoJSON object: ' + property);\n    return object && object.features || [object];\n  }\n  topojson.responseType = 'json';\n\n  const format = {\n    dsv: dsv,\n    csv: delimitedFormat(','),\n    tsv: delimitedFormat('\\t'),\n    json: json,\n    topojson: topojson\n  };\n  function formats(name, reader) {\n    if (arguments.length > 1) {\n      format[name] = reader;\n      return this;\n    } else {\n      return vegaUtil.hasOwnProperty(format, name) ? format[name] : null;\n    }\n  }\n  function responseType(type) {\n    const f = formats(type);\n    return f && f.responseType || 'text';\n  }\n\n  function read (data, schema, timeParser, utcParser) {\n    schema = schema || {};\n    const reader = formats(schema.type || 'json');\n    if (!reader) vegaUtil.error('Unknown data format type: ' + schema.type);\n    data = reader(data, schema);\n    if (schema.parse) parse(data, schema.parse, timeParser, utcParser);\n    if (vegaUtil.hasOwnProperty(data, 'columns')) delete data.columns;\n    return data;\n  }\n\n  function parse(data, types, timeParser, utcParser) {\n    if (!data.length) return; // early exit for empty data\n\n    const locale = vegaFormat.timeFormatDefaultLocale();\n    timeParser = timeParser || locale.timeParse;\n    utcParser = utcParser || locale.utcParse;\n    let fields = data.columns || Object.keys(data[0]),\n        datum,\n        field,\n        i,\n        j,\n        n,\n        m;\n    if (types === 'auto') types = inferTypes(data, fields);\n    fields = Object.keys(types);\n    const parsers = fields.map(field => {\n      const type = types[field];\n      let parts, pattern;\n\n      if (type && (type.startsWith('date:') || type.startsWith('utc:'))) {\n        parts = type.split(/:(.+)?/, 2); // split on first :\n\n        pattern = parts[1];\n\n        if (pattern[0] === '\\'' && pattern[pattern.length - 1] === '\\'' || pattern[0] === '\"' && pattern[pattern.length - 1] === '\"') {\n          pattern = pattern.slice(1, -1);\n        }\n\n        const parse = parts[0] === 'utc' ? utcParser : timeParser;\n        return parse(pattern);\n      }\n\n      if (!typeParsers[type]) {\n        throw Error('Illegal format pattern: ' + field + ':' + type);\n      }\n\n      return typeParsers[type];\n    });\n\n    for (i = 0, n = data.length, m = fields.length; i < n; ++i) {\n      datum = data[i];\n\n      for (j = 0; j < m; ++j) {\n        field = fields[j];\n        datum[field] = parsers[j](datum[field]);\n      }\n    }\n  }\n\n  const loader = loaderFactory(typeof fetch !== 'undefined' && fetch, // use built-in fetch API\n  null // no file system access\n  );\n\n  exports.format = format;\n  exports.formats = formats;\n  exports.inferType = inferType;\n  exports.inferTypes = inferTypes;\n  exports.loader = loader;\n  exports.read = read;\n  exports.responseType = responseType;\n  exports.typeParsers = typeParsers;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","factory","define","amd","globalThis","self","vega","d3","topojson","vegaUtil","d3Dsv","topojsonClient","vegaFormat","load","uri","options","opt","sanitize","url","href","localFile","file","http","extend","fileAccess","result","isFile","loadFile","isAllowed","allowed_re","test","replace","whitespace_re","error","stringValue","hasProtocol","protocol_re","base","baseURL","startsWith","endsWith","fileProtocol","mode","slice","length","defaultProtocol","Object","defineProperty","value","target","rel","context","crossOrigin","fileLoader","fs","filename","Promise","accept","reject","readFile","data","fileReject","httpLoader","fetch","type","response","ok","isFunction","text","status","statusText","httpReject","inferType","values","field","n","m","typeTests","a","map","_","i","t","j","typeList","reduce","u","v","inferTypes","fields","types","delimitedFormat","delimiter","parse","format","delim","dsv","responseType","header","join","dsvFormat","json","prop","property","identity","isBuffer","isArray","isIterable","copy","JSON","stringify","method","object","filter","feature","mesh","filters","objects","features","formats","name","reader","arguments","hasOwnProperty","timeParser","utcParser","locale","timeFormatDefaultLocale","timeParse","utcParse","columns","keys","parsers","parts","split","pattern","typeParsers","Error","datum","isNumber","Number","isNaN","Date","boolean","toBoolean","integer","toNumber","number","date","toDate","string","toString","unknown","isBoolean","isInteger","isDate","interior","b","exterior","csv","tsv","loader","loaderFactory","read","schema","f"]
}
