{"version":3,"sources":["malli/registry.cljc"],"mappings":"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","names":["js/goog.define","malli.registry/mode","malli.registry/type","malli$registry$Registry$_schema$dyn","x__4550__auto__","m__4551__auto__","malli.registry/-schema","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","malli$registry$Registry$_schemas$dyn","malli.registry/-schemas","malli.registry/Registry","this","type","malli.registry/registry?","x","cljs.core/PROTOCOL_SENTINEL","malli.registry/fast-registry","m","fm","js/malli","js/malli.registry","js/malli.registry.t_malli$registry82618","malli.registry/t_malli$registry82618","_82620","meta82619","this__4491__auto__","writer__4492__auto__","opt__4493__auto__","cljs.core/-write","malli.registry/->t_malli$registry82618","_","malli.registry/simple-registry","js/malli.registry.t_malli$registry82624","malli.registry/t_malli$registry82624","_82626","meta82625","malli.registry/->t_malli$registry82624","malli.registry/registry","?registry","cljs.core/map?","cljs.core/native-satisfies?","malli.registry/registry*","cljs.core.atom","malli.registry/set-default-registry!","cljs.core/reset!","cljs.core.ex_info","malli.registry/custom-default-registry","js/malli.registry.t_malli$registry82659","malli.registry/t_malli$registry82659","_82661","meta82660","malli.registry/->t_malli$registry82659","cljs.core/deref","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","malli.registry/composite-registry","seq82673","self__4852__auto__","cljs.core/seq","?registries","registries","cljs.core.mapv","js/malli.registry.t_malli$registry82680","malli.registry/t_malli$registry82680","_82682","meta82681","malli.registry/->t_malli$registry82680","p1__82671#","cljs.core/some","cljs.core.reduce","cljs.core/merge","cljs.core.map","cljs.core/reverse","malli.registry/mutable-registry","db","js/malli.registry.t_malli$registry82700","malli.registry/t_malli$registry82700","_82702","meta82701","malli.registry/->t_malli$registry82700","malli.registry/*registry*","malli.registry/dynamic-registry","js/malli.registry.t_malli$registry82743","malli.registry/t_malli$registry82743","_82745","meta82744","malli.registry/->t_malli$registry82743","malli.registry/lazy-registry","default-registry","provider","cache*","registry*","malli.registry.composite_registry","js/malli.registry.t_malli$registry82765","malli.registry/t_malli$registry82765","_82767","meta82766","malli.registry/->t_malli$registry82765","name","or__4253__auto__","fexpr__82775","temp__5753__auto__","schema","G__82776","G__82777","cljs.core.swap_BANG_","cljs.core/assoc","malli.registry/schema","registry","malli.registry/schemas"],"sourcesContent":["(ns malli.registry\n  (:refer-clojure :exclude [type])\n  #?(:clj (:import (java.util HashMap Map))))\n\n#?(:cljs (goog-define mode \"default\")\n   :clj  (def mode (as-> (or (System/getProperty \"malli.registry/mode\") \"default\") $ (.intern $))))\n\n#?(:cljs (goog-define type \"default\")\n   :clj  (def type (as-> (or (System/getProperty \"malli.registry/type\") \"default\") $ (.intern $))))\n\n(defprotocol Registry\n  (-schema [this type] \"returns the schema from a registry\")\n  (-schemas [this] \"returns all schemas from a registry\"))\n\n(defn registry? [x] (#?(:clj instance?, :cljs implements?) malli.registry.Registry x))\n\n(defn fast-registry [m]\n  (let [fm #?(:clj (doto (HashMap. 1024 0.25) (.putAll ^Map m)), :cljs m)]\n    (reify\n      Registry\n      (-schema [_ type] (.get fm type))\n      (-schemas [_] m))))\n\n(defn simple-registry [m]\n  (reify\n    Registry\n    (-schema [_ type] (m type))\n    (-schemas [_] m)))\n\n(defn registry [?registry]\n  (cond (nil? ?registry) nil\n        (registry? ?registry) ?registry\n        (map? ?registry) (simple-registry ?registry)\n        (satisfies? Registry ?registry) ?registry))\n\n;;\n;; custom\n;;\n\n(def ^:private registry* (atom (simple-registry {})))\n\n(defn set-default-registry! [?registry]\n  (if-not (identical? mode \"strict\")\n    (reset! registry* (registry ?registry))\n    (throw (ex-info \"can't set default registry, invalid mode\" {:mode mode, :type type}))))\n\n(defn ^:no-doc custom-default-registry []\n  (reify\n    Registry\n    (-schema [_ type] (-schema @registry* type))\n    (-schemas [_] (-schemas @registry*))))\n\n(defn composite-registry [& ?registries]\n  (let [registries (mapv registry ?registries)]\n    (reify\n      Registry\n      (-schema [_ type] (some #(-schema % type) registries))\n      (-schemas [_] (reduce merge (map -schemas (reverse registries)))))))\n\n(defn mutable-registry [db]\n  (reify\n    Registry\n    (-schema [_ type] (-schema (registry @db) type))\n    (-schemas [_] (-schemas (registry @db)))))\n\n(def ^:dynamic *registry* {})\n\n(defn dynamic-registry []\n  (reify\n    Registry\n    (-schema [_ type] (-schema (registry *registry*) type))\n    (-schemas [_] (-schemas (registry *registry*)))))\n\n(defn lazy-registry [default-registry provider]\n  (let [cache* (atom {})\n        registry* (atom default-registry)]\n    (reset!\n     registry*\n     (composite-registry\n      default-registry\n      (reify\n        Registry\n        (-schema [_ name]\n          (or (@cache* name)\n              (when-let [schema (provider name @registry*)]\n                (swap! cache* assoc name schema)\n                schema)))\n        (-schemas [_] @cache*))))))\n\n(defn schema\n  \"finds a schema from a registry\"\n  [registry type]\n  (-schema registry type))\n\n(defn schemas\n  \"finds all schemas from a registry\"\n  [registry]\n  (-schemas registry))\n"]}