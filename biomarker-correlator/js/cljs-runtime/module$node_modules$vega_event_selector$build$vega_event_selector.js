shadow$provide.module$node_modules$vega_event_selector$build$vega_event_selector=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0):"function"===typeof define&&define.amd?define(["exports"],factory):(global="undefined"!==typeof globalThis?globalThis:global||self,factory(global.vega={}))})(this,function(exports){function find(s,i,endChar,pushChar,popChar){const n=s.length;let count=
0,c;for(;i<n;++i)if(c=s[i],count||c!==endChar)popChar&&0<=popChar.indexOf(c)?--count:pushChar&&0<=pushChar.indexOf(c)&&++count;else break;return i}function parseMerge(s){const output=[],n=s.length;let start=0,i=0;for(;i<n;)i=find(s,i,",","[{","]}"),output.push(s.substring(start,i).trim()),start=++i;if(0===output.length)throw"Empty event selector: "+s;return output}function parseSelector(s){if("["===s[0]){var JSCompiler_temp=s;var n$jscomp$0=JSCompiler_temp.length;s=find(JSCompiler_temp,1,"]","[",
"]");if(s===n$jscomp$0)throw"Empty between selector: "+JSCompiler_temp;n$jscomp$0=parseMerge(JSCompiler_temp.substring(1,s));if(2!==n$jscomp$0.length)throw"Between selector must have two elements: "+JSCompiler_temp;JSCompiler_temp=JSCompiler_temp.slice(s+1).trim();if("\x3e"!==JSCompiler_temp[0])throw"Expected '\x3e' after between selector: "+JSCompiler_temp;n$jscomp$0=n$jscomp$0.map(parseSelector);JSCompiler_temp=parseSelector(JSCompiler_temp.slice(1).trim());JSCompiler_temp.between?JSCompiler_temp=
{between:n$jscomp$0,stream:JSCompiler_temp}:JSCompiler_temp.between=n$jscomp$0}else{n$jscomp$0={source:DEFAULT_SOURCE};const source=[];let throttle=[0,0],markname=0,start=0,n=s.length,i=0,j;if("}"===s[n-1]){i=s.lastIndexOf("{");if(0<=i){try{throttle=parseThrottle(s.substring(i+1,n-1))}catch(e){throw"Invalid throttle specification: "+s;}s=s.slice(0,i).trim();n=s.length}else throw"Unmatched right brace: "+s;i=0}if(!n)throw s;"@"===s[0]&&(markname=++i);j=find(s,i,":");j<n&&(source.push(s.substring(start,
j).trim()),start=i=++j);i=find(s,i,"[");if(i===n)source.push(s.substring(start,n).trim());else if(source.push(s.substring(start,i).trim()),JSCompiler_temp=[],start=++i,start===n)throw"Unmatched left bracket: "+s;for(;i<n;){i=find(s,i,"]");if(i===n)throw"Unmatched left bracket: "+s;JSCompiler_temp.push(s.substring(start,i).trim());if(i<n-1&&"["!==s[++i])throw"Expected left bracket: "+s;start=++i}if(!(n=source.length)||ILLEGAL.test(source[n-1]))throw"Invalid event selector: "+s;1<n?(n$jscomp$0.type=
source[1],markname?n$jscomp$0.markname=source[0].slice(1):MARKS[source[0]]?n$jscomp$0.marktype=source[0]:n$jscomp$0.source=source[0]):n$jscomp$0.type=source[0];"!"===n$jscomp$0.type.slice(-1)&&(n$jscomp$0.consume=!0,n$jscomp$0.type=n$jscomp$0.type.slice(0,-1));null!=JSCompiler_temp&&(n$jscomp$0.filter=JSCompiler_temp);throttle[0]&&(n$jscomp$0.throttle=throttle[0]);throttle[1]&&(n$jscomp$0.debounce=throttle[1]);JSCompiler_temp=n$jscomp$0}return JSCompiler_temp}function parseThrottle(s){const a=s.split(",");
if(!s.length||2<a.length)throw s;return a.map(_=>{_=+_;if(_!==_)throw s;return _})}const ILLEGAL=/[[\]{}]/,DEFAULT_MARKS={"*":1,arc:1,area:1,group:1,image:1,line:1,path:1,rect:1,rule:1,shape:1,symbol:1,text:1,trail:1};let DEFAULT_SOURCE,MARKS;exports.parseSelector=function(selector,source,marks){DEFAULT_SOURCE=source||"view";MARKS=marks||DEFAULT_MARKS;return parseMerge(selector.trim()).map(parseSelector)};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$vega_event_selector$build$vega_event_selector.js.map
