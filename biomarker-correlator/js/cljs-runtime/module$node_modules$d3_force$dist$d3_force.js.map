{
"version":3,
"file":"module$node_modules$d3_force$dist$d3_force.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/d3-force/dist/d3-force.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_force$dist$d3_force\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-force/ v2.1.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-quadtree'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-dispatch', 'd3-timer'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Quadtree, d3Dispatch, d3Timer) { 'use strict';\n\nfunction center(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle(random) {\n  return (random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nfunction lcg() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","d3","d3Quadtree","d3Dispatch","d3Timer","constant","x","d","vx","y","vy","index","find","nodeById","nodeId","node","get","Error","lcg","s","a","c","m","x$1","y$1","initialAngle","Math","PI","sqrt","forceCenter","center","force","i","n","nodes","length","sx","sy","strength","initialize","force.initialize","_","force.x","arguments","force.y","force.strength","forceCollide","collide","radius","apply","quad","x0","y0","x1","y1","data","rj","r","ri","xi","yi","l","random","ri2","tree","k","iterations","quadtree","visitAfter","prepare","radii","visit","Array","_nodes","_random","force.iterations","force.radius","forceLink","link","links","alpha","source","target","distances","strengths","b","bias","Map","map","id","count","initializeStrength","initializeDistance","distance","defaultStrength","min","force.links","force.id","force.distance","forceManyBody","manyBody","accumulate","q","weight","abs","value","next","x2","w","theta2","distanceMax2","distanceMin2","Infinity","distanceMin","force.distanceMin","distanceMax","force.distanceMax","theta","force.theta","forceRadial","radial","dx","dy","radiuses","isNaN","forceSimulation","simulation","step","tick","event","call","alphaMin","stepper","stop","undefined","alphaTarget","alphaDecay","forces","forEach","fx","velocityDecay","fy","initializeNodes","initialRadius","angle","cos","sin","initializeForce","pow","timer","dispatch","restart","randomSource","name","delete","set","d2","closest","on","forceX","x$2","xz","forceY","y$2","yz","Object","defineProperty"]
}
