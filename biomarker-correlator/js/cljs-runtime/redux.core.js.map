{"version":3,"sources":["redux/core.cljc"],"mappings":"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","names":["redux.core/pre-step","rf","f","acc","x","G__81831","G__81832","redux.core/post-complete","G__81833","redux.core/with-xform","xform","rfv","cljs.core/volatile!","cljs.core/vreset!","fexpr__81834","cljs.core/deref","fexpr__81835","fexpr__81836","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","redux.core/juxt","seq81841","self__4852__auto__","cljs.core/seq","rfns","cljs.core.mapv","a","G__81848","cljs.core/unreduced","all-reduced?","results","cljs.core/reduced?","cljs.core/reduced","redux.core/facet","fns","cljs.core.map","cljs.core.apply","redux.core/fuse","kvs","cljs.core/vals","cljs.core/zipmap","cljs.core/keys","redux.core/fuse-matrix","redux.utils/pairs","p__81854","vec__81855","cljs.core.nth","k1","k2","G__81861","p1__81849#","G__81862","p1__81850#","cljs.core.get","cljs.core.into","redux.utils/project","redux.utils/complete-triangular-matrix"],"sourcesContent":["(ns redux.core\n  (:require [redux.utils :refer [project complete-triangular-matrix pairs]])\n  (:refer-clojure :exclude [juxt]))\n\n(defn pre-step [rf f]\n  (fn\n    ([]      (rf))\n    ([acc]   (rf acc))\n    ([acc x] (rf acc (f x)))))\n\n(defn post-complete [rf f]\n  (fn\n    ([]      (rf))\n    ([acc]   (f (rf acc)))\n    ([acc x] (rf acc x))))\n\n(defn with-xform [rf xform]\n  (let [rfv (volatile! nil)]\n    (fn\n      ([]\n       (vreset! rfv (xform rf))\n       (@rfv))\n      ([acc]\n       (@rfv acc))\n      ([acc x]\n       (@rfv acc x)))))\n\n(defn juxt [& rfns]\n  (fn\n    ([] (mapv (fn [f] (f)) rfns))\n    ([acc] (mapv (fn [f a] (f (unreduced a))) rfns acc))\n    ([acc x]\n     (let [all-reduced? (volatile! true)\n           results (mapv (fn [f a]\n                           (if-not (reduced? a)\n                             (do (vreset! all-reduced? false)\n                                 (f a x))\n                             a))\n                         rfns acc)]\n       (if @all-reduced? (reduced results) results)))))\n\n(defn facet [rf fns]\n  (->> (map (fn [f] (pre-step rf f)) fns)\n       (apply juxt)))\n\n(defn fuse [kvs]\n  (post-complete (apply juxt (vals kvs))\n                 (fn [acc]\n                   (zipmap (keys kvs) acc))))\n\n(defn fuse-matrix [rf kvs]\n  (-> (fuse (->> (pairs (keys kvs))\n                 (map (fn [[k1 k2]]\n                        [[k1 k2] (rf #(get % k1) #(get % k2))]))\n                 (into {})))\n      (pre-step (project kvs))\n      (post-complete complete-triangular-matrix)))\n"]}