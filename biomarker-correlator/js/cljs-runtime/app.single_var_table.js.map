{"version":3,"sources":["app/single_var_table.cljs"],"mappings":"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","names":["app.single-var-table/OneToManyCorrelation","app.stats/CorrelationResults","app.single-var-table/aggregate-names","app.single-var-table/filter-insignificant","rows","p1__48094#","cljs.core.filter","app.stats/p-value-cutoff","app.single-var-table/calc-counted-score","correlations","cljs.core.reduce","cljs.core/+","p1__48097#","cljs.core.map","app.single-var-table/get-significant-correlations","data","one-var-type","one-var","many-var-type","one-var-raw-data","one-var-significant-correlations","G__48101","cljs.core/group-by","app.math/round","app.math/average","iter__4652__auto__","s__48107","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__48109","cljs.core/chunk-buffer","i__48108","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__48106","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","correlation","app.single-var-table/get-csv-values","csv-data","column-name","cljs.core.into","s__48114","b__48116","i__48115","iter__48113","row","value","cljs.core/not","js/isNaN","app.single-var-table/make-all-correlations","unique-one-vars","cljs.core/set","p1__48124#","s__48127","b__48129","i__48128","iter__48126","app.single-var-table/table-keys","app.single-var-table/get-one-var-timeseries-data","p1__48133#","cljs.core/select-keys","app.single-var-table/make-hiccup","cljs.core/contains?","app.biomarker-data/data","app.biomarker-data/make-acm-plot","s__48141","b__48143","i__48142","iter__48140","k","p1__48138#","cljs.core/keys","s__48155","b__48157","i__48156","iter__48154","p1__48139#","cljs.core.sort_by","mvar","cljs.core/name","app.ui/hover-to-render","s__48163","b__48165","i__48164","vec__48166","cljs.core.nth","iter__48162","vec__48174","s__48184","b__48186","i__48185","vec__48194","iter__48183","vec__48200","v","cljs.core/chunk-first"],"sourcesContent":["(ns app.single-var-table\n  (:require\n    [app.stats :as stats]\n    [app.math :as math]\n    [app.specs :as specs]\n    [app.biomarker-data :as biodata]\n    [app.csv-data-processing :as proc]\n    [app.ui :as ui]))\n\n(def OneToManyCorrelation\n  [:map [:one-var :keyword]\n        [:aggregates [:map [:score :int]\n                           [:average :double]]]\n                           ; [:acm-score :double]]]\n        [:correlations [:sequential\n                        [:map [:many-var :keyword]\n                              [:regression-results stats/CorrelationResults]]]]])\n\n; TODO generate these from the OneToManyCorrelation spec above\n(def aggregate-names #{:score :average :acm-score})\n\n\n(defn filter-insignificant\n  \"Filter row maps from the input that show statistically insignificant\n  correlations\"\n  [rows]\n  (filter #(< (:p-value (:regression-results %))\n              stats/p-value-cutoff)\n          rows))\n\n; TODO we may need to introduce a concept of \"up is good\" and \"down is bad\" so\n; that this score instead takes the difference between \"good\" and \"bad\"\n; correlations, not just positive and negative ones.\n(defn calc-counted-score\n  \"Sums up all postive correlations and all negatives correlations, then takes\n  the difference.\"\n  {:malli/schema [:=> [:cat [:or :nil stats/PairwiseCorrelations]]\n                  :int]}\n  [correlations]\n  (if (nil? correlations)\n    0\n    (reduce + (map #(if (neg? (:correlation (:regression-results %))) -1 1)\n                   correlations))))\n\n\n(defn get-significant-correlations\n  {:malli/schema [:=> [:cat\n                       stats/PairwiseCorrelations\n                       :keyword\n                       :keyword\n                       :keyword\n                       [:vector :double]]\n                  OneToManyCorrelation]}\n  [data one-var-type one-var many-var-type one-var-raw-data]\n  (let [one-var-significant-correlations\n        (one-var (group-by one-var-type (filter-insignificant data)))]\n    {:one-var one-var\n     :aggregates {:score (calc-counted-score one-var-significant-correlations)\n                  ; :acm-score 0\n                  :average (math/round (math/average one-var-raw-data))}\n     :correlations (for [correlation one-var-significant-correlations]\n                     {:many-var (many-var-type correlation)\n                      :regression-results (:regression-results correlation)})}))\n\n(defn get-csv-values\n  \"Filters NaNs while getting the data.\"\n  {:malli/schema [:=> [:cat\n                       [:sequential [:map-of :keyword :any]]\n                       :keyword]\n                  [:vector :double]]}\n  [csv-data column-name]\n  (into [] (for [row csv-data\n                 :let [value (column-name row)]\n                 :when (and (not (nil? value)) (not (js/isNaN value)))]\n             value)))\n\n(defn make-all-correlations\n  {:malli/schema [:=> [:cat\n                       stats/PairwiseCorrelations\n                       [:sequential proc/ProcessedRow]\n                       :keyword\n                       :keyword]\n                  [:map-of :keyword OneToManyCorrelation]]}\n  [correlations csv-data one-var-type many-var-type]\n  ; [::pairwise-correlations keyword? keyword?\n  ;  => ::one-to-many-correlations]\n  (let [unique-one-vars (set (map #(one-var-type %) correlations))]\n    (into {} (for [one-var unique-one-vars]\n               [one-var (get-significant-correlations\n                          correlations one-var-type one-var many-var-type\n                          (get-csv-values csv-data one-var))]))))\n\n(def table-keys [:correlation :rounded-p-value :datapoints])\n\n(defn get-one-var-timeseries-data\n  {:malli/schema [:=> [:cat OneToManyCorrelation] biodata/TimeseriesData]}\n  [data]\n  (map #(select-keys % [:timestamp (:one-var data)])\n       (-> data\n           :correlations\n           first\n           :regression-results\n           :raw-data)))\n\n(defn make-hiccup\n  \"Creates a table like this:\n           Input\n        Aggregate 1\n        Aggregate 2\n  Biomarker | r | p | n\n  data      | 0 | 0 | 0\n  ...\n  \"\n  {:malli/schema [:=> [:cat OneToManyCorrelation] specs/ReagentComponent]}\n  [data]\n  (let [one-var (:one-var data)]\n    [:div\n      [:table\n        [:tbody\n    ;  https://www.w3schools.com/html/html_table_headers.asp\n         [:tr [:th {:colSpan 4}\n               [:a {:id one-var} one-var]\n               \", Counted score of \" (:score (:aggregates data))\n               \", Average value \" (:average (:aggregates data))]]\n         [:tr [:td {:colSpan 4}\n               (if (contains? biodata/data one-var)\n                 [:div\n                   (biodata/make-acm-plot\n                     (get-one-var-timeseries-data data)\n                     (one-var biodata/data))\n                   [:p (:notes (one-var biodata/data))]\n                   [:p \"Source: \" (:source (one-var biodata/data))]]\n                 \"No data found for this metric.\")]]\n         [:tr [:th \"Correlate\"]\n          (for [k (-> data\n                      :correlations\n                      first\n                      :regression-results\n                      (#(select-keys % table-keys))\n                      keys)]\n            [:th {:key (str k \"-head\")} k])]\n         (for [correlations (sort-by #(:correlation (:regression-results %))\n                                     (:correlations data))]\n           (let [mvar (name (:many-var correlations))]\n             [:tr {:key (str mvar \"-row\")} \n              [:td [ui/hover-to-render\n                    [:a {:href (str \"#\" mvar)} mvar]\n                    (:scatterplot (:regression-results correlations))]]\n              (for [[k v] (select-keys (:regression-results correlations)\n                                       table-keys)]\n                [:td {:key (str mvar \"-\" k)} v])]))]]]))\n"]}