{
"version":3,
"file":"module$node_modules$d3_array$dist$d3_array.js",
"lineCount":42,
"mappings":"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",
"sources":["node_modules/d3-array/dist/d3-array.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$dist$d3_array\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-array/ v2.12.1 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n\nconst ascendingBisect = bisector(ascending);\nconst bisectRight = ascendingBisect.right;\nconst bisectLeft = ascendingBisect.left;\nconst bisectCenter = bisector(number).center;\n\nfunction count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n\nfunction length$1(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nfunction cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length$1);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n\nfunction cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n\nfunction deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n\nclass InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nclass InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nfunction groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nfunction rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nfunction indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n\nfunction permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n\nfunction sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f = ascending] = F;\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascending(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascending(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(f);\n}\n\nfunction groupSort(values, reduce, key) {\n  return (reduce.length === 1\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n\nfunction bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain\u2019s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don\u2019t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n\nfunction min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nfunction quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n\nfunction quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n\nfunction maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n\nfunction mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n\nfunction median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\nfunction* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nfunction merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n\nfunction minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n\nfunction pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nfunction least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n\nfunction leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n\nfunction greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n\nfunction greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n\nfunction scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n\nvar shuffle = shuffler(Math.random);\n\nfunction shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n\nfunction sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nfunction every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n\nfunction map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n\nfunction reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n\nfunction reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n\nfunction difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n\nfunction disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new Set();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n\nfunction set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n\nfunction intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    if (set.has(o)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      set.add(value);\n      if (Object.is(o, value)) break;\n    }\n  }\n  return true;\n}\n\nfunction subset(values, other) {\n  return superset(other, values);\n}\n\nfunction union(...others) {\n  const set = new Set();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n\nexports.Adder = Adder;\nexports.InternMap = InternMap;\nexports.InternSet = InternSet;\nexports.ascending = ascending;\nexports.bin = bin;\nexports.bisect = bisectRight;\nexports.bisectCenter = bisectCenter;\nexports.bisectLeft = bisectLeft;\nexports.bisectRight = bisectRight;\nexports.bisector = bisector;\nexports.count = count;\nexports.cross = cross;\nexports.cumsum = cumsum;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.difference = difference;\nexports.disjoint = disjoint;\nexports.every = every;\nexports.extent = extent;\nexports.fcumsum = fcumsum;\nexports.filter = filter;\nexports.fsum = fsum;\nexports.greatest = greatest;\nexports.greatestIndex = greatestIndex;\nexports.group = group;\nexports.groupSort = groupSort;\nexports.groups = groups;\nexports.histogram = bin;\nexports.index = index;\nexports.indexes = indexes;\nexports.intersection = intersection;\nexports.least = least;\nexports.leastIndex = leastIndex;\nexports.map = map;\nexports.max = max;\nexports.maxIndex = maxIndex;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.minIndex = minIndex;\nexports.nice = nice;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.quantileSorted = quantileSorted;\nexports.quickselect = quickselect;\nexports.range = range;\nexports.reduce = reduce;\nexports.reverse = reverse;\nexports.rollup = rollup;\nexports.rollups = rollups;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.shuffler = shuffler;\nexports.some = some;\nexports.sort = sort;\nexports.subset = subset;\nexports.sum = sum;\nexports.superset = superset;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.ticks = ticks;\nexports.transpose = transpose;\nexports.union = union;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","d3","ascending","a","b","NaN","bisector","f","left","x","lo","hi","length","mid","compare","delta","d","ascendingComparator","center","i","right","number","numbers","values","valueof","undefined","value","index","count","length$1","array","empty","arrayify","Array","from","reducer","reduce","variance","mean","sum","deviation","v","Math","sqrt","extent","min","max","intern_get","_intern","_key","key","has","get","intern_set","set","intern_delete","delete","keyof","valueOf","identity","group","keys","nest","rollup","unique","Error","map","regroup","groups","InternMap","push","permute","source","sort","F","Symbol","iterator","TypeError","Uint32Array","j","c","constant","ticks","start","stop","reverse","step","n","tickIncrement","isFinite","r0","round","r1","power","floor","log","LN10","error","pow","e10","e5","e2","nice","prestep","ceil","sturges","LN2","bin","histogram","data","isArray","xz","domain","x0","x1","tz","threshold","tn","pop","m","shift","bins","bisectRight","histogram.value","_","arguments","histogram.domain","thresholds","histogram.thresholds","slice","call","quickselect","k","z","s","exp","sd","newLeft","newRight","t","swap","quantile","p","Float64Array","i0","value0","subarray","value1","maxIndex","flatten","arrays","minIndex","pair","leastIndex","minValue","shuffler","random","shuffle","i1","transpose","matrix","row","Set","superset","other","o","done","next","add","Object","is","ascendingBisect","bisectLeft","bisectCenter","Adder","constructor","_partials","_n","y","abs","Map","entries","defineProperties","InternSet","prototype","bisect","cross","lengths","fill","product","some","cumsum","descending","difference","others","disjoint","every","test","fcumsum","adder","filter","fsum","greatest","defined","maxValue","element","greatestIndex","groupSort","ak","av","bk","bv","indexes","intersection","least","mapper","median","merge","pairs","pairof","previous","first","quantileSorted","range","rollups","scan","subset","thresholdFreedmanDiaconis","freedmanDiaconis","thresholdScott","scott","thresholdSturges","tickStep","step0","step1","union","zip","defineProperty"]
}
