{
"version":3,
"file":"module$node_modules$vega_view_transforms$build$vega_view_transforms.js",
"lineCount":47,
"mappings":"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",
"sources":["node_modules/vega-view-transforms/build/vega-view-transforms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$vega_view_transforms$build$vega_view_transforms\"] = function(global,require,module,exports) {\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vega-dataflow'), require('vega-scenegraph'), require('vega-util')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vega-dataflow', 'vega-scenegraph', 'vega-util'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.vega = global.vega || {}, global.vega.transforms = {}), global.vega, global.vega, global.vega));\n}(this, (function (exports, vegaDataflow, vegaScenegraph, vegaUtil) { 'use strict';\n\n  const Top = 'top';\n  const Left = 'left';\n  const Right = 'right';\n  const Bottom = 'bottom';\n  const TopLeft = 'top-left';\n  const TopRight = 'top-right';\n  const BottomLeft = 'bottom-left';\n  const BottomRight = 'bottom-right';\n  const Start = 'start';\n  const Middle = 'middle';\n  const End = 'end';\n  const X = 'x';\n  const Y = 'y';\n  const Group = 'group';\n  const AxisRole = 'axis';\n  const TitleRole = 'title';\n  const FrameRole = 'frame';\n  const ScopeRole = 'scope';\n  const LegendRole = 'legend';\n  const RowHeader = 'row-header';\n  const RowFooter = 'row-footer';\n  const RowTitle = 'row-title';\n  const ColHeader = 'column-header';\n  const ColFooter = 'column-footer';\n  const ColTitle = 'column-title';\n  const Padding = 'padding';\n  const Symbols = 'symbol';\n  const Fit = 'fit';\n  const FitX = 'fit-x';\n  const FitY = 'fit-y';\n  const Pad = 'pad';\n  const None = 'none';\n  const All = 'all';\n  const Each = 'each';\n  const Flush = 'flush';\n  const Column = 'column';\n  const Row = 'row';\n\n  /**\n   * Calculate bounding boxes for scenegraph items.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - The scenegraph mark instance to bound.\n   */\n\n  function Bound(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  vegaUtil.inherits(Bound, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const view = pulse.dataflow,\n            mark = _.mark,\n            type = mark.marktype,\n            entry = vegaScenegraph.Marks[type],\n            bound = entry.bound;\n      let markBounds = mark.bounds,\n          rebound;\n\n      if (entry.nested) {\n        // multi-item marks have a single bounds instance\n        if (mark.items.length) view.dirty(mark.items[0]);\n        markBounds = boundItem(mark, bound);\n        mark.items.forEach(item => {\n          item.bounds.clear().union(markBounds);\n        });\n      } else if (type === Group || _.modified()) {\n        // operator parameters modified -> re-bound all items\n        // updates group bounds in response to modified group content\n        pulse.visit(pulse.MOD, item => view.dirty(item));\n        markBounds.clear();\n        mark.items.forEach(item => markBounds.union(boundItem(item, bound))); // force reflow for axes/legends/titles to propagate any layout changes\n\n        switch (mark.role) {\n          case AxisRole:\n          case LegendRole:\n          case TitleRole:\n            pulse.reflow();\n        }\n      } else {\n        // incrementally update bounds, re-bound mark as needed\n        rebound = pulse.changed(pulse.REM);\n        pulse.visit(pulse.ADD, item => {\n          markBounds.union(boundItem(item, bound));\n        });\n        pulse.visit(pulse.MOD, item => {\n          rebound = rebound || markBounds.alignsWith(item.bounds);\n          view.dirty(item);\n          markBounds.union(boundItem(item, bound));\n        });\n\n        if (rebound) {\n          markBounds.clear();\n          mark.items.forEach(item => markBounds.union(item.bounds));\n        }\n      } // ensure mark bounds do not exceed any clipping region\n\n\n      vegaScenegraph.boundClip(mark);\n      return pulse.modifies('bounds');\n    }\n\n  });\n\n  function boundItem(item, bound, opt) {\n    return bound(item.bounds.clear(), item, opt);\n  }\n\n  const COUNTER_NAME = ':vega_identifier:';\n  /**\n   * Adds a unique identifier to all added tuples.\n   * This transform creates a new signal that serves as an id counter.\n   * As a result, the id counter is shared across all instances of this\n   * transform, generating unique ids across multiple data streams. In\n   * addition, this signal value can be included in a snapshot of the\n   * dataflow state, enabling correct resumption of id allocation.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {string} params.as - The field name for the generated identifier.\n   */\n\n  function Identifier(params) {\n    vegaDataflow.Transform.call(this, 0, params);\n  }\n  Identifier.Definition = {\n    'type': 'Identifier',\n    'metadata': {\n      'modifies': true\n    },\n    'params': [{\n      'name': 'as',\n      'type': 'string',\n      'required': true\n    }]\n  };\n  vegaUtil.inherits(Identifier, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const counter = getCounter(pulse.dataflow),\n            as = _.as;\n      let id = counter.value;\n      pulse.visit(pulse.ADD, t => t[as] = t[as] || ++id);\n      counter.set(this.value = id);\n      return pulse;\n    }\n\n  });\n\n  function getCounter(view) {\n    return view._signals[COUNTER_NAME] || (view._signals[COUNTER_NAME] = view.add(0));\n  }\n\n  /**\n   * Bind scenegraph items to a scenegraph mark instance.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.markdef - The mark definition for creating the mark.\n   *   This is an object of legal scenegraph mark properties which *must* include\n   *   the 'marktype' property.\n   */\n\n  function Mark(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  vegaUtil.inherits(Mark, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      let mark = this.value; // acquire mark on first invocation, bind context and group\n\n      if (!mark) {\n        mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);\n        mark.group.context = _.context;\n        if (!_.context.group) _.context.group = mark.group;\n        mark.source = this.source; // point to upstream collector\n\n        mark.clip = _.clip;\n        mark.interactive = _.interactive;\n        this.value = mark;\n      } // initialize entering items\n\n\n      const Init = mark.marktype === Group ? vegaScenegraph.GroupItem : vegaScenegraph.Item;\n      pulse.visit(pulse.ADD, item => Init.call(item, mark)); // update clipping and/or interactive status\n\n      if (_.modified('clip') || _.modified('interactive')) {\n        mark.clip = _.clip;\n        mark.interactive = !!_.interactive;\n        mark.zdirty = true; // force scenegraph re-eval\n\n        pulse.reflow();\n      } // bind items array to scenegraph mark\n\n\n      mark.items = pulse.source;\n      return pulse;\n    }\n\n  });\n\n  function lookup(_) {\n    const g = _.groups,\n          p = _.parent;\n    return g && g.size === 1 ? g.get(Object.keys(g.object)[0]) : g && p ? g.lookup(p) : null;\n  }\n\n  /**\n   * Analyze items for overlap, changing opacity to hide items with\n   * overlapping bounding boxes. This transform will preserve at least\n   * two items (e.g., first and last) even if overlap persists.\n   * @param {object} params - The parameters for this operator.\n   * @param {function(*,*): number} [params.sort] - A comparator\n   *   function for sorting items.\n   * @param {object} [params.method] - The overlap removal method to apply.\n   *   One of 'parity' (default, hide every other item until there is no\n   *   more overlap) or 'greedy' (sequentially scan and hide and items that\n   *   overlap with the last visible item).\n   * @param {object} [params.boundScale] - A scale whose range should be used\n   *   to bound the items. Items exceeding the bounds of the scale range\n   *   will be treated as overlapping. If null or undefined, no bounds check\n   *   will be applied.\n   * @param {object} [params.boundOrient] - The orientation of the scale\n   *   (top, bottom, left, or right) used to bound items. This parameter is\n   *   ignored if boundScale is null or undefined.\n   * @param {object} [params.boundTolerance] - The tolerance in pixels for\n   *   bound inclusion testing (default 1). This specifies by how many pixels\n   *   an item's bounds may exceed the scale range bounds and not be culled.\n   * @constructor\n   */\n\n  function Overlap(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  const methods = {\n    parity: items => items.filter((item, i) => i % 2 ? item.opacity = 0 : 1),\n    greedy: (items, sep) => {\n      let a;\n      return items.filter((b, i) => !i || !intersect(a.bounds, b.bounds, sep) ? (a = b, 1) : b.opacity = 0);\n    }\n  }; // compute bounding box intersection\n  // including padding pixels of separation\n\n  const intersect = (a, b, sep) => sep > Math.max(b.x1 - a.x2, a.x1 - b.x2, b.y1 - a.y2, a.y1 - b.y2);\n\n  const hasOverlap = (items, pad) => {\n    for (var i = 1, n = items.length, a = items[0].bounds, b; i < n; a = b, ++i) {\n      if (intersect(a, b = items[i].bounds, pad)) return true;\n    }\n  };\n\n  const hasBounds = item => {\n    const b = item.bounds;\n    return b.width() > 1 && b.height() > 1;\n  };\n\n  const boundTest = (scale, orient, tolerance) => {\n    var range = scale.range(),\n        b = new vegaScenegraph.Bounds();\n\n    if (orient === Top || orient === Bottom) {\n      b.set(range[0], -Infinity, range[1], +Infinity);\n    } else {\n      b.set(-Infinity, range[0], +Infinity, range[1]);\n    }\n\n    b.expand(tolerance || 1);\n    return item => b.encloses(item.bounds);\n  }; // reset all items to be fully opaque\n\n\n  const reset = source => {\n    source.forEach(item => item.opacity = 1);\n    return source;\n  }; // add all tuples to mod, fork pulse if parameters were modified\n  // fork prevents cross-stream tuple pollution (e.g., pulse from scale)\n\n\n  const reflow = (pulse, _) => pulse.reflow(_.modified()).modifies('opacity');\n\n  vegaUtil.inherits(Overlap, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const reduce = methods[_.method] || methods.parity,\n            sep = _.separation || 0;\n      let source = pulse.materialize(pulse.SOURCE).source,\n          items,\n          test;\n      if (!source || !source.length) return;\n\n      if (!_.method) {\n        // early exit if method is falsy\n        if (_.modified('method')) {\n          reset(source);\n          pulse = reflow(pulse, _);\n        }\n\n        return pulse;\n      } // skip labels with no content\n\n\n      source = source.filter(hasBounds); // early exit, nothing to do\n\n      if (!source.length) return;\n\n      if (_.sort) {\n        source = source.slice().sort(_.sort);\n      }\n\n      items = reset(source);\n      pulse = reflow(pulse, _);\n\n      if (items.length >= 3 && hasOverlap(items, sep)) {\n        do {\n          items = reduce(items, sep);\n        } while (items.length >= 3 && hasOverlap(items, sep));\n\n        if (items.length < 3 && !vegaUtil.peek(source).opacity) {\n          if (items.length > 1) vegaUtil.peek(items).opacity = 0;\n          vegaUtil.peek(source).opacity = 1;\n        }\n      }\n\n      if (_.boundScale && _.boundTolerance >= 0) {\n        test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);\n        source.forEach(item => {\n          if (!test(item)) item.opacity = 0;\n        });\n      } // re-calculate mark bounds\n\n\n      const bounds = items[0].mark.bounds.clear();\n      source.forEach(item => {\n        if (item.opacity) bounds.union(item.bounds);\n      });\n      return pulse;\n    }\n\n  });\n\n  /**\n   * Queue modified scenegraph items for rendering.\n   * @constructor\n   */\n\n  function Render(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  vegaUtil.inherits(Render, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const view = pulse.dataflow;\n      pulse.visit(pulse.ALL, item => view.dirty(item)); // set z-index dirty flag as needed\n\n      if (pulse.fields && pulse.fields['zindex']) {\n        const item = pulse.source && pulse.source[0];\n        if (item) item.mark.zdirty = true;\n      }\n    }\n\n  });\n\n  const tempBounds = new vegaScenegraph.Bounds();\n  function set(item, property, value) {\n    return item[property] === value ? 0 : (item[property] = value, 1);\n  }\n\n  function isYAxis(mark) {\n    var orient = mark.items[0].orient;\n    return orient === Left || orient === Right;\n  }\n\n  function axisIndices(datum) {\n    let index = +datum.grid;\n    return [datum.ticks ? index++ : -1, // ticks index\n    datum.labels ? index++ : -1, // labels index\n    index + +datum.domain // title index\n    ];\n  }\n\n  function axisLayout(view, axis, width, height) {\n    var item = axis.items[0],\n        datum = item.datum,\n        delta = item.translate != null ? item.translate : 0.5,\n        orient = item.orient,\n        indices = axisIndices(datum),\n        range = item.range,\n        offset = item.offset,\n        position = item.position,\n        minExtent = item.minExtent,\n        maxExtent = item.maxExtent,\n        title = datum.title && item.items[indices[2]].items[0],\n        titlePadding = item.titlePadding,\n        bounds = item.bounds,\n        dl = title && vegaScenegraph.multiLineOffset(title),\n        x = 0,\n        y = 0,\n        i,\n        s;\n    tempBounds.clear().union(bounds);\n    bounds.clear();\n    if ((i = indices[0]) > -1) bounds.union(item.items[i].bounds);\n    if ((i = indices[1]) > -1) bounds.union(item.items[i].bounds); // position axis group and title\n\n    switch (orient) {\n      case Top:\n        x = position || 0;\n        y = -offset;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n        bounds.add(0, -s).add(range, 0);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n        break;\n\n      case Left:\n        x = -offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n        bounds.add(-s, 0).add(0, range);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n        break;\n\n      case Right:\n        x = width + offset;\n        y = position || 0;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n        bounds.add(0, 0).add(s, range);\n        if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n        break;\n\n      case Bottom:\n        x = position || 0;\n        y = height + offset;\n        s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n        bounds.add(0, 0).add(range, s);\n        if (title) axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n        break;\n\n      default:\n        x = item.x;\n        y = item.y;\n    } // update bounds\n\n\n    vegaScenegraph.boundStroke(bounds.translate(x, y), item);\n\n    if (set(item, 'x', x + delta) | set(item, 'y', y + delta)) {\n      item.bounds = tempBounds;\n      view.dirty(item);\n      item.bounds = bounds;\n      view.dirty(item);\n    }\n\n    return item.mark.bounds.clear().union(bounds);\n  }\n\n  function axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n    const b = title.bounds;\n\n    if (title.auto) {\n      const v = sign * (offset + dl + pad);\n      let dx = 0,\n          dy = 0;\n      view.dirty(title);\n      isYAxis ? dx = (title.x || 0) - (title.x = v) : dy = (title.y || 0) - (title.y = v);\n      title.mark.bounds.clear().union(b.translate(-dx, -dy));\n      view.dirty(title);\n    }\n\n    bounds.union(b);\n  }\n\n  const min = (a, b) => Math.floor(Math.min(a, b));\n\n  const max = (a, b) => Math.ceil(Math.max(a, b));\n\n  function gridLayoutGroups(group) {\n    var groups = group.items,\n        n = groups.length,\n        i = 0,\n        mark,\n        items;\n    const views = {\n      marks: [],\n      rowheaders: [],\n      rowfooters: [],\n      colheaders: [],\n      colfooters: [],\n      rowtitle: null,\n      coltitle: null\n    }; // layout axes, gather legends, collect bounds\n\n    for (; i < n; ++i) {\n      mark = groups[i];\n      items = mark.items;\n\n      if (mark.marktype === Group) {\n        switch (mark.role) {\n          case AxisRole:\n          case LegendRole:\n          case TitleRole:\n            break;\n\n          case RowHeader:\n            views.rowheaders.push(...items);\n            break;\n\n          case RowFooter:\n            views.rowfooters.push(...items);\n            break;\n\n          case ColHeader:\n            views.colheaders.push(...items);\n            break;\n\n          case ColFooter:\n            views.colfooters.push(...items);\n            break;\n\n          case RowTitle:\n            views.rowtitle = items[0];\n            break;\n\n          case ColTitle:\n            views.coltitle = items[0];\n            break;\n\n          default:\n            views.marks.push(...items);\n        }\n      }\n    }\n\n    return views;\n  }\n\n  function bboxFlush(item) {\n    return new vegaScenegraph.Bounds().set(0, 0, item.width || 0, item.height || 0);\n  }\n\n  function bboxFull(item) {\n    const b = item.bounds.clone();\n    return b.empty() ? b.set(0, 0, 0, 0) : b.translate(-(item.x || 0), -(item.y || 0));\n  }\n\n  function get(opt, key, d) {\n    const v = vegaUtil.isObject(opt) ? opt[key] : opt;\n    return v != null ? v : d !== undefined ? d : 0;\n  }\n\n  function offsetValue(v) {\n    return v < 0 ? Math.ceil(-v) : 0;\n  }\n\n  function gridLayout(view, groups, opt) {\n    var dirty = !opt.nodirty,\n        bbox = opt.bounds === Flush ? bboxFlush : bboxFull,\n        bounds = tempBounds.set(0, 0, 0, 0),\n        alignCol = get(opt.align, Column),\n        alignRow = get(opt.align, Row),\n        padCol = get(opt.padding, Column),\n        padRow = get(opt.padding, Row),\n        ncols = opt.columns || groups.length,\n        nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n        n = groups.length,\n        xOffset = Array(n),\n        xExtent = Array(ncols),\n        xMax = 0,\n        yOffset = Array(n),\n        yExtent = Array(nrows),\n        yMax = 0,\n        dx = Array(n),\n        dy = Array(n),\n        boxes = Array(n),\n        m,\n        i,\n        c,\n        r,\n        b,\n        g,\n        px,\n        py,\n        x,\n        y,\n        offset;\n\n    for (i = 0; i < ncols; ++i) xExtent[i] = 0;\n\n    for (i = 0; i < nrows; ++i) yExtent[i] = 0; // determine offsets for each group\n\n\n    for (i = 0; i < n; ++i) {\n      g = groups[i];\n      b = boxes[i] = bbox(g);\n      g.x = g.x || 0;\n      dx[i] = 0;\n      g.y = g.y || 0;\n      dy[i] = 0;\n      c = i % ncols;\n      r = ~~(i / ncols);\n      xMax = Math.max(xMax, px = Math.ceil(b.x2));\n      yMax = Math.max(yMax, py = Math.ceil(b.y2));\n      xExtent[c] = Math.max(xExtent[c], px);\n      yExtent[r] = Math.max(yExtent[r], py);\n      xOffset[i] = padCol + offsetValue(b.x1);\n      yOffset[i] = padRow + offsetValue(b.y1);\n      if (dirty) view.dirty(groups[i]);\n    } // set initial alignment offsets\n\n\n    for (i = 0; i < n; ++i) {\n      if (i % ncols === 0) xOffset[i] = 0;\n      if (i < ncols) yOffset[i] = 0;\n    } // enforce column alignment constraints\n\n\n    if (alignCol === Each) {\n      for (c = 1; c < ncols; ++c) {\n        for (offset = 0, i = c; i < n; i += ncols) {\n          if (offset < xOffset[i]) offset = xOffset[i];\n        }\n\n        for (i = c; i < n; i += ncols) {\n          xOffset[i] = offset + xExtent[c - 1];\n        }\n      }\n    } else if (alignCol === All) {\n      for (offset = 0, i = 0; i < n; ++i) {\n        if (i % ncols && offset < xOffset[i]) offset = xOffset[i];\n      }\n\n      for (i = 0; i < n; ++i) {\n        if (i % ncols) xOffset[i] = offset + xMax;\n      }\n    } else {\n      for (alignCol = false, c = 1; c < ncols; ++c) {\n        for (i = c; i < n; i += ncols) {\n          xOffset[i] += xExtent[c - 1];\n        }\n      }\n    } // enforce row alignment constraints\n\n\n    if (alignRow === Each) {\n      for (r = 1; r < nrows; ++r) {\n        for (offset = 0, i = r * ncols, m = i + ncols; i < m; ++i) {\n          if (offset < yOffset[i]) offset = yOffset[i];\n        }\n\n        for (i = r * ncols; i < m; ++i) {\n          yOffset[i] = offset + yExtent[r - 1];\n        }\n      }\n    } else if (alignRow === All) {\n      for (offset = 0, i = ncols; i < n; ++i) {\n        if (offset < yOffset[i]) offset = yOffset[i];\n      }\n\n      for (i = ncols; i < n; ++i) {\n        yOffset[i] = offset + yMax;\n      }\n    } else {\n      for (alignRow = false, r = 1; r < nrows; ++r) {\n        for (i = r * ncols, m = i + ncols; i < m; ++i) {\n          yOffset[i] += yExtent[r - 1];\n        }\n      }\n    } // perform horizontal grid layout\n\n\n    for (x = 0, i = 0; i < n; ++i) {\n      x = xOffset[i] + (i % ncols ? x : 0);\n      dx[i] += x - groups[i].x;\n    } // perform vertical grid layout\n\n\n    for (c = 0; c < ncols; ++c) {\n      for (y = 0, i = c; i < n; i += ncols) {\n        y += yOffset[i];\n        dy[i] += y - groups[i].y;\n      }\n    } // perform horizontal centering\n\n\n    if (alignCol && get(opt.center, Column) && nrows > 1) {\n      for (i = 0; i < n; ++i) {\n        b = alignCol === All ? xMax : xExtent[i % ncols];\n        x = b - boxes[i].x2 - groups[i].x - dx[i];\n        if (x > 0) dx[i] += x / 2;\n      }\n    } // perform vertical centering\n\n\n    if (alignRow && get(opt.center, Row) && ncols !== 1) {\n      for (i = 0; i < n; ++i) {\n        b = alignRow === All ? yMax : yExtent[~~(i / ncols)];\n        y = b - boxes[i].y2 - groups[i].y - dy[i];\n        if (y > 0) dy[i] += y / 2;\n      }\n    } // position grid relative to anchor\n\n\n    for (i = 0; i < n; ++i) {\n      bounds.union(boxes[i].translate(dx[i], dy[i]));\n    }\n\n    x = get(opt.anchor, X);\n    y = get(opt.anchor, Y);\n\n    switch (get(opt.anchor, Column)) {\n      case End:\n        x -= bounds.width();\n        break;\n\n      case Middle:\n        x -= bounds.width() / 2;\n    }\n\n    switch (get(opt.anchor, Row)) {\n      case End:\n        y -= bounds.height();\n        break;\n\n      case Middle:\n        y -= bounds.height() / 2;\n    }\n\n    x = Math.round(x);\n    y = Math.round(y); // update mark positions, bounds, dirty\n\n    bounds.clear();\n\n    for (i = 0; i < n; ++i) {\n      groups[i].mark.bounds.clear();\n    }\n\n    for (i = 0; i < n; ++i) {\n      g = groups[i];\n      g.x += dx[i] += x;\n      g.y += dy[i] += y;\n      bounds.union(g.mark.bounds.union(g.bounds.translate(dx[i], dy[i])));\n      if (dirty) view.dirty(g);\n    }\n\n    return bounds;\n  }\n  function trellisLayout(view, group, opt) {\n    var views = gridLayoutGroups(group),\n        groups = views.marks,\n        bbox = opt.bounds === Flush ? boundFlush : boundFull,\n        off = opt.offset,\n        ncols = opt.columns || groups.length,\n        nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n        cells = nrows * ncols,\n        x,\n        y,\n        x2,\n        y2,\n        anchor,\n        band,\n        offset; // -- initial grid layout\n\n    const bounds = gridLayout(view, groups, opt);\n    if (bounds.empty()) bounds.set(0, 0, 0, 0); // empty grid\n    // -- layout grid headers and footers --\n    // perform row header layout\n\n    if (views.rowheaders) {\n      band = get(opt.headerBand, Row, null);\n      x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'), min, 0, bbox, 'x1', 0, ncols, 1, band);\n    } // perform column header layout\n\n\n    if (views.colheaders) {\n      band = get(opt.headerBand, Column, null);\n      y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);\n    } // perform row footer layout\n\n\n    if (views.rowfooters) {\n      band = get(opt.footerBand, Row, null);\n      x2 = layoutHeaders(view, views.rowfooters, groups, ncols, nrows, get(off, 'rowFooter'), max, 0, bbox, 'x2', ncols - 1, ncols, 1, band);\n    } // perform column footer layout\n\n\n    if (views.colfooters) {\n      band = get(opt.footerBand, Column, null);\n      y2 = layoutHeaders(view, views.colfooters, groups, ncols, ncols, get(off, 'columnFooter'), max, 1, bbox, 'y2', cells - ncols, 1, ncols, band);\n    } // perform row title layout\n\n\n    if (views.rowtitle) {\n      anchor = get(opt.titleAnchor, Row);\n      offset = get(off, 'rowTitle');\n      offset = anchor === End ? x2 + offset : x - offset;\n      band = get(opt.titleBand, Row, 0.5);\n      layoutTitle(view, views.rowtitle, offset, 0, bounds, band);\n    } // perform column title layout\n\n\n    if (views.coltitle) {\n      anchor = get(opt.titleAnchor, Column);\n      offset = get(off, 'columnTitle');\n      offset = anchor === End ? y2 + offset : y - offset;\n      band = get(opt.titleBand, Column, 0.5);\n      layoutTitle(view, views.coltitle, offset, 1, bounds, band);\n    }\n  }\n\n  function boundFlush(item, field) {\n    return field === 'x1' ? item.x || 0 : field === 'y1' ? item.y || 0 : field === 'x2' ? (item.x || 0) + (item.width || 0) : field === 'y2' ? (item.y || 0) + (item.height || 0) : undefined;\n  }\n\n  function boundFull(item, field) {\n    return item.bounds[field];\n  }\n\n  function layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {\n    var n = groups.length,\n        init = 0,\n        edge = 0,\n        i,\n        j,\n        k,\n        m,\n        b,\n        h,\n        g,\n        x,\n        y; // if no groups, early exit and return 0\n\n    if (!n) return init; // compute margin\n\n    for (i = start; i < n; i += stride) {\n      if (groups[i]) init = agg(init, bound(groups[i], bf));\n    } // if no headers, return margin calculation\n\n\n    if (!headers.length) return init; // check if number of headers exceeds number of rows or columns\n\n    if (headers.length > limit) {\n      view.warn('Grid headers exceed limit: ' + limit);\n      headers = headers.slice(0, limit);\n    } // apply offset\n\n\n    init += offset; // clear mark bounds for all headers\n\n    for (j = 0, m = headers.length; j < m; ++j) {\n      view.dirty(headers[j]);\n      headers[j].mark.bounds.clear();\n    } // layout each header\n\n\n    for (i = start, j = 0, m = headers.length; j < m; ++j, i += stride) {\n      h = headers[j];\n      b = h.mark.bounds; // search for nearest group to align to\n      // necessary if table has empty cells\n\n      for (k = i; k >= 0 && (g = groups[k]) == null; k -= back); // assign coordinates and update bounds\n\n\n      if (isX) {\n        x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());\n        y = init;\n      } else {\n        x = init;\n        y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());\n      }\n\n      b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));\n      h.x = x;\n      h.y = y;\n      view.dirty(h); // update current edge of layout bounds\n\n      edge = agg(edge, b[bf]);\n    }\n\n    return edge;\n  }\n\n  function layoutTitle(view, g, offset, isX, bounds, band) {\n    if (!g) return;\n    view.dirty(g); // compute title coordinates\n\n    var x = offset,\n        y = offset;\n    isX ? x = Math.round(bounds.x1 + band * bounds.width()) : y = Math.round(bounds.y1 + band * bounds.height()); // assign coordinates and update bounds\n\n    g.bounds.translate(x - (g.x || 0), y - (g.y || 0));\n    g.mark.bounds.clear().union(g.bounds);\n    g.x = x;\n    g.y = y; // queue title for redraw\n\n    view.dirty(g);\n  }\n\n  function lookup$1(config, orient) {\n    const opt = config[orient] || {};\n    return (key, d) => opt[key] != null ? opt[key] : config[key] != null ? config[key] : d;\n  } // if legends specify offset directly, use the maximum specified value\n\n\n  function offsets(legends, value) {\n    let max = -Infinity;\n    legends.forEach(item => {\n      if (item.offset != null) max = Math.max(max, item.offset);\n    });\n    return max > -Infinity ? max : value;\n  }\n\n  function legendParams(g, orient, config, xb, yb, w, h) {\n    const _ = lookup$1(config, orient),\n          offset = offsets(g, _('offset', 0)),\n          anchor = _('anchor', Start),\n          mult = anchor === End ? 1 : anchor === Middle ? 0.5 : 0;\n\n    const p = {\n      align: Each,\n      bounds: _('bounds', Flush),\n      columns: _('direction') === 'vertical' ? 1 : g.length,\n      padding: _('margin', 8),\n      center: _('center'),\n      nodirty: true\n    };\n\n    switch (orient) {\n      case Left:\n        p.anchor = {\n          x: Math.floor(xb.x1) - offset,\n          column: End,\n          y: mult * (h || xb.height() + 2 * xb.y1),\n          row: anchor\n        };\n        break;\n\n      case Right:\n        p.anchor = {\n          x: Math.ceil(xb.x2) + offset,\n          y: mult * (h || xb.height() + 2 * xb.y1),\n          row: anchor\n        };\n        break;\n\n      case Top:\n        p.anchor = {\n          y: Math.floor(yb.y1) - offset,\n          row: End,\n          x: mult * (w || yb.width() + 2 * yb.x1),\n          column: anchor\n        };\n        break;\n\n      case Bottom:\n        p.anchor = {\n          y: Math.ceil(yb.y2) + offset,\n          x: mult * (w || yb.width() + 2 * yb.x1),\n          column: anchor\n        };\n        break;\n\n      case TopLeft:\n        p.anchor = {\n          x: offset,\n          y: offset\n        };\n        break;\n\n      case TopRight:\n        p.anchor = {\n          x: w - offset,\n          y: offset,\n          column: End\n        };\n        break;\n\n      case BottomLeft:\n        p.anchor = {\n          x: offset,\n          y: h - offset,\n          row: End\n        };\n        break;\n\n      case BottomRight:\n        p.anchor = {\n          x: w - offset,\n          y: h - offset,\n          column: End,\n          row: End\n        };\n        break;\n    }\n\n    return p;\n  }\n  function legendLayout(view, legend) {\n    var item = legend.items[0],\n        datum = item.datum,\n        orient = item.orient,\n        bounds = item.bounds,\n        x = item.x,\n        y = item.y,\n        w,\n        h; // cache current bounds for later comparison\n\n    item._bounds ? item._bounds.clear().union(bounds) : item._bounds = bounds.clone();\n    bounds.clear(); // adjust legend to accommodate padding and title\n\n    legendGroupLayout(view, item, item.items[0].items[0]); // aggregate bounds to determine size, and include origin\n\n    bounds = legendBounds(item, bounds);\n    w = 2 * item.padding;\n    h = 2 * item.padding;\n\n    if (!bounds.empty()) {\n      w = Math.ceil(bounds.width() + w);\n      h = Math.ceil(bounds.height() + h);\n    }\n\n    if (datum.type === Symbols) {\n      legendEntryLayout(item.items[0].items[0].items[0].items);\n    }\n\n    if (orient !== None) {\n      item.x = x = 0;\n      item.y = y = 0;\n    }\n\n    item.width = w;\n    item.height = h;\n    vegaScenegraph.boundStroke(bounds.set(x, y, x + w, y + h), item);\n    item.mark.bounds.clear().union(bounds);\n    return item;\n  }\n\n  function legendBounds(item, b) {\n    // aggregate item bounds\n    item.items.forEach(_ => b.union(_.bounds)); // anchor to legend origin\n\n    b.x1 = item.padding;\n    b.y1 = item.padding;\n    return b;\n  }\n\n  function legendGroupLayout(view, item, entry) {\n    var pad = item.padding,\n        ex = pad - entry.x,\n        ey = pad - entry.y;\n\n    if (!item.datum.title) {\n      if (ex || ey) translate(view, entry, ex, ey);\n    } else {\n      var title = item.items[1].items[0],\n          anchor = title.anchor,\n          tpad = item.titlePadding || 0,\n          tx = pad - title.x,\n          ty = pad - title.y;\n\n      switch (title.orient) {\n        case Left:\n          ex += Math.ceil(title.bounds.width()) + tpad;\n          break;\n\n        case Right:\n        case Bottom:\n          break;\n\n        default:\n          ey += title.bounds.height() + tpad;\n      }\n\n      if (ex || ey) translate(view, entry, ex, ey);\n\n      switch (title.orient) {\n        case Left:\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n\n        case Right:\n          tx += legendTitleOffset(item, entry, title, End, 0, 0) + tpad;\n          ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n          break;\n\n        case Bottom:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n          ty += legendTitleOffset(item, entry, title, End, -1, 0, 1) + tpad;\n          break;\n\n        default:\n          tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n      }\n\n      if (tx || ty) translate(view, title, tx, ty); // translate legend if title pushes into negative coordinates\n\n      if ((tx = Math.round(title.bounds.x1 - pad)) < 0) {\n        translate(view, entry, -tx, 0);\n        translate(view, title, -tx, 0);\n      }\n    }\n  }\n\n  function legendTitleOffset(item, entry, title, anchor, y, lr, noBar) {\n    const grad = item.datum.type !== 'symbol',\n          vgrad = title.datum.vgrad,\n          e = grad && (lr || !vgrad) && !noBar ? entry.items[0] : entry,\n          s = e.bounds[y ? 'y2' : 'x2'] - item.padding,\n          u = vgrad && lr ? s : 0,\n          v = vgrad && lr ? 0 : s,\n          o = y <= 0 ? 0 : vegaScenegraph.multiLineOffset(title);\n    return Math.round(anchor === Start ? u : anchor === End ? v - o : 0.5 * (s - o));\n  }\n\n  function translate(view, item, dx, dy) {\n    item.x += dx;\n    item.y += dy;\n    item.bounds.translate(dx, dy);\n    item.mark.bounds.translate(dx, dy);\n    view.dirty(item);\n  }\n\n  function legendEntryLayout(entries) {\n    // get max widths for each column\n    const widths = entries.reduce((w, g) => {\n      w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);\n      return w;\n    }, {}); // set dimensions of legend entry groups\n\n    entries.forEach(g => {\n      g.width = widths[g.column];\n      g.height = g.bounds.y2 - g.y;\n    });\n  }\n\n  function titleLayout(view, mark, width, height, viewBounds) {\n    var group = mark.items[0],\n        frame = group.frame,\n        orient = group.orient,\n        anchor = group.anchor,\n        offset = group.offset,\n        padding = group.padding,\n        title = group.items[0].items[0],\n        subtitle = group.items[1] && group.items[1].items[0],\n        end = orient === Left || orient === Right ? height : width,\n        start = 0,\n        x = 0,\n        y = 0,\n        sx = 0,\n        sy = 0,\n        pos;\n\n    if (frame !== Group) {\n      orient === Left ? (start = viewBounds.y2, end = viewBounds.y1) : orient === Right ? (start = viewBounds.y1, end = viewBounds.y2) : (start = viewBounds.x1, end = viewBounds.x2);\n    } else if (orient === Left) {\n      start = height, end = 0;\n    }\n\n    pos = anchor === Start ? start : anchor === End ? end : (start + end) / 2;\n\n    if (subtitle && subtitle.text) {\n      // position subtitle\n      switch (orient) {\n        case Top:\n        case Bottom:\n          sy = title.bounds.height() + padding;\n          break;\n\n        case Left:\n          sx = title.bounds.width() + padding;\n          break;\n\n        case Right:\n          sx = -title.bounds.width() - padding;\n          break;\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n      tempBounds.translate(sx - (subtitle.x || 0), sy - (subtitle.y || 0));\n\n      if (set(subtitle, 'x', sx) | set(subtitle, 'y', sy)) {\n        view.dirty(subtitle);\n        subtitle.bounds.clear().union(tempBounds);\n        subtitle.mark.bounds.clear().union(tempBounds);\n        view.dirty(subtitle);\n      }\n\n      tempBounds.clear().union(subtitle.bounds);\n    } else {\n      tempBounds.clear();\n    }\n\n    tempBounds.union(title.bounds); // position title group\n\n    switch (orient) {\n      case Top:\n        x = pos;\n        y = viewBounds.y1 - tempBounds.height() - offset;\n        break;\n\n      case Left:\n        x = viewBounds.x1 - tempBounds.width() - offset;\n        y = pos;\n        break;\n\n      case Right:\n        x = viewBounds.x2 + tempBounds.width() + offset;\n        y = pos;\n        break;\n\n      case Bottom:\n        x = pos;\n        y = viewBounds.y2 + offset;\n        break;\n\n      default:\n        x = group.x;\n        y = group.y;\n    }\n\n    if (set(group, 'x', x) | set(group, 'y', y)) {\n      tempBounds.translate(x, y);\n      view.dirty(group);\n      group.bounds.clear().union(tempBounds);\n      mark.bounds.clear().union(tempBounds);\n      view.dirty(group);\n    }\n\n    return group.bounds;\n  }\n\n  /**\n   * Layout view elements such as axes and legends.\n   * Also performs size adjustments.\n   * @constructor\n   * @param {object} params - The parameters for this operator.\n   * @param {object} params.mark - Scenegraph mark of groups to layout.\n   */\n\n  function ViewLayout(params) {\n    vegaDataflow.Transform.call(this, null, params);\n  }\n  vegaUtil.inherits(ViewLayout, vegaDataflow.Transform, {\n    transform(_, pulse) {\n      const view = pulse.dataflow;\n\n      _.mark.items.forEach(group => {\n        if (_.layout) trellisLayout(view, group, _.layout);\n        layoutGroup(view, group, _);\n      });\n\n      return shouldReflow(_.mark.group) ? pulse.reflow() : pulse;\n    }\n\n  });\n\n  function shouldReflow(group) {\n    // We typically should reflow if layout is invoked (#2568), as child items\n    // may have resized and reflow ensures group bounds are re-calculated.\n    // However, legend entries have a special exception to avoid instability.\n    // For example, if a selected legend symbol gains a stroke on hover,\n    // we don't want to re-position subsequent elements in the legend.\n    return group && group.mark.role !== 'legend-entry';\n  }\n\n  function layoutGroup(view, group, _) {\n    var items = group.items,\n        width = Math.max(0, group.width || 0),\n        height = Math.max(0, group.height || 0),\n        viewBounds = new vegaScenegraph.Bounds().set(0, 0, width, height),\n        xBounds = viewBounds.clone(),\n        yBounds = viewBounds.clone(),\n        legends = [],\n        title,\n        mark,\n        orient,\n        b,\n        i,\n        n; // layout axes, gather legends, collect bounds\n\n    for (i = 0, n = items.length; i < n; ++i) {\n      mark = items[i];\n\n      switch (mark.role) {\n        case AxisRole:\n          b = isYAxis(mark) ? xBounds : yBounds;\n          b.union(axisLayout(view, mark, width, height));\n          break;\n\n        case TitleRole:\n          title = mark;\n          break;\n\n        case LegendRole:\n          legends.push(legendLayout(view, mark));\n          break;\n\n        case FrameRole:\n        case ScopeRole:\n        case RowHeader:\n        case RowFooter:\n        case RowTitle:\n        case ColHeader:\n        case ColFooter:\n        case ColTitle:\n          xBounds.union(mark.bounds);\n          yBounds.union(mark.bounds);\n          break;\n\n        default:\n          viewBounds.union(mark.bounds);\n      }\n    } // layout legends, adjust viewBounds\n\n\n    if (legends.length) {\n      // group legends by orient\n      const l = {};\n      legends.forEach(item => {\n        orient = item.orient || Right;\n        if (orient !== None) (l[orient] || (l[orient] = [])).push(item);\n      }); // perform grid layout for each orient group\n\n      for (const orient in l) {\n        const g = l[orient];\n        gridLayout(view, g, legendParams(g, orient, _.legends, xBounds, yBounds, width, height));\n      } // update view bounds\n\n\n      legends.forEach(item => {\n        const b = item.bounds;\n\n        if (!b.equals(item._bounds)) {\n          item.bounds = item._bounds;\n          view.dirty(item); // dirty previous location\n\n          item.bounds = b;\n          view.dirty(item);\n        }\n\n        if (_.autosize && _.autosize.type === Fit) {\n          // For autosize fit, incorporate the orthogonal dimension only.\n          // Legends that overrun the chart area will then be clipped;\n          // otherwise the chart area gets reduced to nothing!\n          switch (item.orient) {\n            case Left:\n            case Right:\n              viewBounds.add(b.x1, 0).add(b.x2, 0);\n              break;\n\n            case Top:\n            case Bottom:\n              viewBounds.add(0, b.y1).add(0, b.y2);\n          }\n        } else {\n          viewBounds.union(b);\n        }\n      });\n    } // combine bounding boxes\n\n\n    viewBounds.union(xBounds).union(yBounds); // layout title, adjust bounds\n\n    if (title) {\n      viewBounds.union(titleLayout(view, title, width, height, viewBounds));\n    } // override aggregated view bounds if content is clipped\n\n\n    if (group.clip) {\n      viewBounds.set(0, 0, group.width || 0, group.height || 0);\n    } // perform size adjustment\n\n\n    viewSizeLayout(view, group, viewBounds, _);\n  }\n\n  function viewSizeLayout(view, group, viewBounds, _) {\n    const auto = _.autosize || {},\n          type = auto.type;\n    if (view._autosize < 1 || !type) return;\n    let viewWidth = view._width,\n        viewHeight = view._height,\n        width = Math.max(0, group.width || 0),\n        left = Math.max(0, Math.ceil(-viewBounds.x1)),\n        height = Math.max(0, group.height || 0),\n        top = Math.max(0, Math.ceil(-viewBounds.y1));\n    const right = Math.max(0, Math.ceil(viewBounds.x2 - width)),\n          bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));\n\n    if (auto.contains === Padding) {\n      const padding = view.padding();\n      viewWidth -= padding.left + padding.right;\n      viewHeight -= padding.top + padding.bottom;\n    }\n\n    if (type === None) {\n      left = 0;\n      top = 0;\n      width = viewWidth;\n      height = viewHeight;\n    } else if (type === Fit) {\n      width = Math.max(0, viewWidth - left - right);\n      height = Math.max(0, viewHeight - top - bottom);\n    } else if (type === FitX) {\n      width = Math.max(0, viewWidth - left - right);\n      viewHeight = height + top + bottom;\n    } else if (type === FitY) {\n      viewWidth = width + left + right;\n      height = Math.max(0, viewHeight - top - bottom);\n    } else if (type === Pad) {\n      viewWidth = width + left + right;\n      viewHeight = height + top + bottom;\n    }\n\n    view._resizeView(viewWidth, viewHeight, width, height, [left, top], auto.resize);\n  }\n\n  exports.bound = Bound;\n  exports.identifier = Identifier;\n  exports.mark = Mark;\n  exports.overlap = Overlap;\n  exports.render = Render;\n  exports.viewlayout = ViewLayout;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","vega","transforms","vegaDataflow","vegaScenegraph","vegaUtil","Bound","params","Transform","call","boundItem","item","bound","opt","bounds","clear","Identifier","getCounter","view","_signals","COUNTER_NAME","add","Mark","lookup","_","g","groups","p","parent","size","get","Object","keys","object","Overlap","Render","set","property","value","isYAxis","mark","orient","items","Left","Right","axisLayout","axis","width","height","datum","delta","translate","index","grid","ticks","labels","domain","range","offset","position","minExtent","maxExtent","title","indices","titlePadding","dl","multiLineOffset","i","tempBounds","union","Top","x","y","s","Math","max","min","y1","axisTitleLayout","x1","x2","Bottom","y2","boundStroke","dirty","pad","sign","b","auto","v","dy","dx","bboxFlush","Bounds","bboxFull","clone","empty","key","d","isObject","undefined","offsetValue","ceil","gridLayout","nodirty","bbox","Flush","alignCol","align","Column","alignRow","Row","padCol","padding","padRow","ncols","columns","length","nrows","n","xOffset","Array","xExtent","xMax","yOffset","yExtent","yMax","boxes","px","py","c","r","Each","All","m","center","anchor","X","Y","End","Middle","round","boundFlush","field","boundFull","layoutHeaders","headers","limit","agg","isX","bf","start","stride","back","band","edge","init","warn","slice","j","h","k","layoutTitle","lookup$1","config","offsets","legends","Infinity","forEach","legendParams","xb","yb","w","Start","mult","floor","column","row","TopLeft","TopRight","BottomLeft","BottomRight","legendLayout","legend","_bounds","ex","entry","ey","tpad","tx","ty","legendTitleOffset","legendBounds","Symbols","type","legendEntryLayout","None","lr","noBar","vgrad","e","u","o","entries","widths","reduce","titleLayout","viewBounds","group","subtitle","end","sy","sx","Group","frame","pos","text","ViewLayout","shouldReflow","role","layoutGroup","xBounds","yBounds","AxisRole","TitleRole","LegendRole","push","FrameRole","ScopeRole","RowHeader","RowFooter","RowTitle","ColHeader","ColFooter","ColTitle","l","equals","autosize","Fit","clip","viewSizeLayout","_autosize","viewWidth","_width","viewHeight","_height","left","top","right","bottom","Padding","contains","FitX","FitY","Pad","_resizeView","resize","inherits","transform","pulse","dataflow","marktype","Marks","markBounds","rebound","nested","modified","visit","MOD","reflow","changed","REM","ADD","alignsWith","boundClip","modifies","Definition","counter","as","id","t","scenegraph","markdef","context","source","interactive","Init","GroupItem","Item","zdirty","methods","parity","filter","opacity","greedy","sep","a","intersect","hasOverlap","hasBounds","boundTest","scale","tolerance","expand","encloses","reset","method","separation","materialize","SOURCE","test","sort","peek","boundScale","boundTolerance","boundOrient","ALL","fields","layout","views","marks","rowheaders","rowfooters","colheaders","colfooters","rowtitle","coltitle","off","cells","headerBand","footerBand","titleAnchor","titleBand","identifier","overlap","render","viewlayout","defineProperty"]
}
