{
"version":3,
"file":"module$node_modules$robust_predicates$esm$util.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqB3GC,QAASA,aAAG,CAACC,IAAD,CAAOC,CAAP,CAAUC,IAAV,CAAgBC,CAAhB,CAAmBC,CAAnB,CAAsB,CAAA,IAC5BC,CAD4B,CACzBC,IACP,KAAIC,KAAON,CAAA,CAAE,CAAF,CAAX,CACIO,KAAOL,CAAA,CAAE,CAAF,CADX,CAEIM,OAAS,CAFb,CAGIC,OAAS,CAETF,KAAJ,CAAWD,IAAX,GAAoBC,IAApB,CAA2B,CAACD,IAA5B,EACEF,CACA,CADIE,IACJ,CAAAA,IAAA,CAAON,CAAA,CAAE,EAAEQ,MAAJ,CAFT,GAIEJ,CACA,CADIG,IACJ,CAAAA,IAAA,CAAOL,CAAA,CAAE,EAAEO,MAAJ,CALT,CAQA,KAAIC,OAAS,CAEb,IAAIF,MAAJ,CAAaT,IAAb,EAAqBU,MAArB,CAA8BR,IAA9B,CAAoC,CAClC,GAAIM,IAAJ,CAAWD,IAAX,GAAoBC,IAApB,CAA2B,CAACD,IAA5B,CAAkC,CAChCD,IAAA,CAAOC,IAAP,CAAcF,CACd,KAAAO,GAAKP,CAALO,EAAUN,IAAVM,CAAiBL,IAAjBK,CACAL,KAAA,CAAON,CAAA,CAAE,EAAEQ,MAAJ,CAHyB,CAAlC,IAKEH,KAEA,CAFOE,IAEP,CAFcH,CAEd,CADAO,EACA,CADKP,CACL,EADUC,IACV,CADiBE,IACjB,EAAAA,IAAA,CAAOL,CAAA,CAAE,EAAEO,MAAJ,CAGTL,EAAA,CAAIC,IAMJ,KAJW,CAIX,GAJIM,EAIJ,GAHER,CAAA,CAAEO,MAAA,EAAF,CAGF,CAHgBC,EAGhB,EAAOH,MAAP,CAAgBT,IAAhB,EAAwBU,MAAxB,CAAiCR,IAAjC,CAAA,CACMM,IAAJ;AAAWD,IAAX,GAAoBC,IAApB,CAA2B,CAACD,IAA5B,EACED,IAGA,CAHOD,CAGP,CAHWE,IAGX,CAFAM,EAEA,CAFQP,IAER,CAFeD,CAEf,CADAO,EACA,CADKP,CACL,EADUC,IACV,CADiBO,EACjB,GAD2BN,IAC3B,CADkCM,EAClC,EAAAN,IAAA,CAAON,CAAA,CAAE,EAAEQ,MAAJ,CAJT,GAMEH,IAGA,CAHOD,CAGP,CAHWG,IAGX,CAFAK,EAEA,CAFQP,IAER,CAFeD,CAEf,CADAO,EACA,CADKP,CACL,EADUC,IACV,CADiBO,EACjB,GAD2BL,IAC3B,CADkCK,EAClC,EAAAL,IAAA,CAAOL,CAAA,CAAE,EAAEO,MAAJ,CATT,CAcA,CAFAL,CAEA,CAFIC,IAEJ,CAAW,CAAX,GAAIM,EAAJ,GACER,CAAA,CAAEO,MAAA,EAAF,CADF,CACgBC,EADhB,CAhCgC,CAsCpC,IAAA,CAAOH,MAAP,CAAgBT,IAAhB,CAAA,CACEM,IAMA,CANOD,CAMP,CANWE,IAMX,CALAM,EAKA,CALQP,IAKR,CALeD,CAKf,CAJAO,EAIA,CAJKP,CAIL,EAJUC,IAIV,CAJiBO,EAIjB,GAJ2BN,IAI3B,CAJkCM,EAIlC,EAHAN,IAGA,CAHON,CAAA,CAAE,EAAEQ,MAAJ,CAGP,CAFAJ,CAEA,CAFIC,IAEJ,CAAW,CAAX,GAAIM,EAAJ,GACER,CAAA,CAAEO,MAAA,EAAF,CADF,CACgBC,EADhB,CAKF,KAAA,CAAOF,MAAP,CAAgBR,IAAhB,CAAA,CACEI,IAMA,CANOD,CAMP,CANWG,IAMX,CALAK,EAKA,CALQP,IAKR,CALeD,CAKf,CAJAO,EAIA,CAJKP,CAIL,EAJUC,IAIV,CAJiBO,EAIjB,GAJ2BL,IAI3B,CAJkCK,EAIlC,EAHAL,IAGA,CAHOL,CAAA,CAAE,EAAEO,MAAJ,CAGP,CAFAL,CAEA,CAFIC,IAEJ,CAAW,CAAX,GAAIM,EAAJ,GACER,CAAA,CAAEO,MAAA,EAAF,CADF,CACgBC,EADhB,CAKF,IAAU,CAAV,GAAIP,CAAJ,EAA0B,CAA1B,GAAeM,MAAf,CACEP,CAAA,CAAEO,MAAA,EAAF,CAAA,CAAcN,CAGhB,OAAOM,OAnFyB,CAlBlCG,MAAOC,CAAAA,cAAP,CAAsBjB,OAAtB,CAA+B,YAA/B;AAA6C,CAC3CkB,MAAO,CAAA,CADoC,CAA7C,CAGAlB,QAAQC,CAAAA,GAAR,CAAcA,YACdD,QAAQmB,CAAAA,SAAR,CAoGAA,QAAkB,CAACC,IAAD,CAAOC,CAAP,CAAUC,IAAV,CAAgBC,CAAhB,CAAmBC,IAAnB,CAAyBC,CAAzB,CAA4BC,GAA5B,CAAiCC,GAAjC,CAAsC,CACtD,MAAO1B,aAAA,CAAIA,YAAA,CAAImB,IAAJ,CAAUC,CAAV,CAAaC,IAAb,CAAmBC,CAAnB,CAAsBG,GAAtB,CAAJ,CAAgCA,GAAhC,CAAqCF,IAArC,CAA2CC,CAA3C,CAA8CE,GAA9C,CAD+C,CAnGxD3B,QAAQ4B,CAAAA,KAAR,CAwGAA,QAAc,CAAC1B,IAAD,CAAOC,CAAP,CAAUoB,CAAV,CAAajB,CAAb,CAAgB,CAAA,IACxBC,CADwB,KACZsB,QADY,CAExBd,KAFwB,CAEJe,GAFI,CAECC,GAC7B,KAAAN,IApGeO,SAoGfP,CAAeF,CACfO,IAAA,CAAML,GAAN,EAAWA,GAAX,CAAeF,CAAf,CACAQ,IAAA,CAAMR,CAAN,CAAUO,GACNrB,KAAAA,GAAON,CAAA,CAAE,CAAF,CACXI,EAAA,CAAIE,EAAJ,CAAWc,CACXE,IAAA,CAzGeO,SAyGf,CAAevB,EACTgB,IAAN,EAAWA,GAAX,CAAehB,EACTA,GAAN,EAAawB,GACbnB,GAAA,CAAKoB,EAAL,CAAWH,GAAX,EAAkBxB,CAAlB,CAAsB0B,GAAtB,CAA4BH,GAA5B,CAAkCI,EAAlC,CAAwCJ,GAAxC,CAA8CG,GAA9C,CAAoDF,GAApD,CACA,KAAIlB,OAAS,CAEF,EAAX,GAAIC,EAAJ,GACER,CAAA,CAAEO,MAAA,EAAF,CADF,CACgBC,EADhB,CAIA,KAAK,IAAIqB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBjC,IAApB,CAA0BiC,CAAA,EAA1B,CACE1B,EAiBA,CAjBON,CAAA,CAAEgC,CAAF,CAiBP,CAhBAN,QAgBA,CAhBWpB,EAgBX,CAhBkBc,CAgBlB,CAfAE,GAeA,CArIaO,SAqIb,CAfevB,EAef,CAdMgB,GAcN,EAdWA,GAcX,CAdehB,EAcf,CAbMA,EAaN,EAbawB,GAab,CAZAG,EAYA,CAZWF,EAYX,CAZiBH,GAYjB,EAZwBF,QAYxB;AAZmCI,GAYnC,CAZyCH,GAYzC,CAZ+CI,EAY/C,CAZqDJ,GAYrD,CAZ2DG,GAY3D,CAZiEF,GAYjE,EAXA9B,GAWA,CAXMM,CAWN,CAXU6B,EAWV,CAVArB,KAUA,CAVQd,GAUR,CAVcM,CAUd,CATAO,EASA,CATKP,CASL,EATUN,GASV,CATgBc,KAShB,GAT0BqB,EAS1B,CATqCrB,KASrC,EAPW,CAOX,GAPID,EAOJ,GANER,CAAA,CAAEO,MAAA,EAAF,CAMF,CANgBC,EAMhB,EAHAP,CAGA,CAHIsB,QAGJ,CAHe5B,GAGf,CAFAa,EAEA,CAFKb,GAEL,EAFYM,CAEZ,CAFgBsB,QAEhB,EAAW,CAAX,GAAIf,EAAJ,GACER,CAAA,CAAEO,MAAA,EAAF,CADF,CACgBC,EADhB,CAKF,IAAU,CAAV,GAAIP,CAAJ,EAA0B,CAA1B,GAAeM,MAAf,CACEP,CAAA,CAAEO,MAAA,EAAF,CAAA,CAAcN,CAGhB,OAAOM,OA7CqB,CAvG9Bb,QAAQqC,CAAAA,MAAR,CAuJAA,QAAe,CAACnC,IAAD,CAAOC,CAAP,CAAU,CACvB,IAAK,IAAIgC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBjC,IAApB,CAA0BiC,CAAA,EAA1B,CAA+BhC,CAAA,CAAEgC,CAAF,CAAA,CAAO,CAAChC,CAAA,CAAEgC,CAAF,CAEvC,OAAOjC,KAHgB,CAtJzBF,QAAQsC,CAAAA,QAAR,CA4JAA,QAAiB,CAACpC,IAAD,CAAOC,CAAP,CAAU,CACzB,IAAII,EAAIJ,CAAA,CAAE,CAAF,CAER,KAAK,IAAIgC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBjC,IAApB,CAA0BiC,CAAA,EAA1B,CAA+B5B,CAAA,EAAKJ,CAAA,CAAEgC,CAAF,CAEpC,OAAO5B,EALkB,CA3J3BP,QAAQuC,CAAAA,GAAR,CAmKAA,QAAY,CAACC,CAAD,CAAI,CACd,MAAO,KAAIC,YAAJ,CAAiBD,CAAjB,CADO,CAlKhBxC,QAAQ0C,CAAAA,cAAR,CAAyB1C,OAAQgC,CAAAA,QAAjC,CAA4ChC,OAAQ2C,CAAAA,OAApD,CAA8D,IAAK,EAEnE3C,QAAQ2C,CAAAA,OAAR;AADgBA,sBAGhB3C,QAAQgC,CAAAA,QAAR,CADiBA,SAIjBhC,QAAQ0C,CAAAA,cAAR,CAFuBA,sBAjBoF;",
"sources":["node_modules/robust-predicates/esm/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$robust_predicates$esm$util\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sum = sum;\nexports.sum_three = sum_three;\nexports.scale = scale;\nexports.negate = negate;\nexports.estimate = estimate;\nexports.vec = vec;\nexports.resulterrbound = exports.splitter = exports.epsilon = void 0;\nconst epsilon = 1.1102230246251565e-16;\nexports.epsilon = epsilon;\nconst splitter = 134217729;\nexports.splitter = splitter;\nconst resulterrbound = (3 + 8 * epsilon) * epsilon; // fast_expansion_sum_zeroelim routine from oritinal code\n\nexports.resulterrbound = resulterrbound;\n\nfunction sum(elen, e, flen, f, h) {\n  let Q, Qnew, hh, bvirt;\n  let enow = e[0];\n  let fnow = f[0];\n  let eindex = 0;\n  let findex = 0;\n\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n\n  let hindex = 0;\n\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n\n      Q = Qnew;\n\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n\n  return hindex;\n}\n\nfunction sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n} // scale_expansion_zeroelim routine from oritinal code\n\n\nfunction scale(elen, e, b, h) {\n  let Q, sum, hh, product1, product0;\n  let bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  let enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  let hindex = 0;\n\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n\n  for (let i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n\n  return hindex;\n}\n\nfunction negate(elen, e) {\n  for (let i = 0; i < elen; i++) e[i] = -e[i];\n\n  return elen;\n}\n\nfunction estimate(elen, e) {\n  let Q = e[0];\n\n  for (let i = 1; i < elen; i++) Q += e[i];\n\n  return Q;\n}\n\nfunction vec(n) {\n  return new Float64Array(n);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","sum","elen","e","flen","f","h","Q","Qnew","enow","fnow","eindex","findex","hindex","hh","bvirt","Object","defineProperty","value","sum_three","alen","a","blen","b","clen","c","tmp","out","scale","product1","bhi","blo","splitter","ahi","alo","i","product0","negate","estimate","vec","n","Float64Array","resulterrbound","epsilon"]
}
