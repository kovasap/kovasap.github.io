shadow$provide.module$node_modules$d3_geo$src$polygonContains=function(global,require,module,exports){function longitude(point){return(0,_math.abs)(point[0])<=_math.pi?point[0]:(0,_math.sign)(point[0])*(((0,_math.abs)(point[0])+_math.pi)%_math.tau-_math.pi)}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(polygon,point){var lambda=longitude(point);point=point[1];var sinPhi=(0,_math.sin)(point),normal=[(0,_math.sin)(lambda),-(0,_math.cos)(lambda),0],angle=0,winding=0,
sum=new _d3Array.Adder;1===sinPhi?point=_math.halfPi+_math.epsilon:-1===sinPhi&&(point=-_math.halfPi-_math.epsilon);sinPhi=0;for(var n=polygon.length;sinPhi<n;++sinPhi)if(m=(ring=polygon[sinPhi]).length){var ring,m,point0=ring[m-1],lambda0=longitude(point0),phi0=point0[1]/2+_math.quarterPi,sinPhi0=(0,_math.sin)(phi0),cosPhi0=(0,_math.cos)(phi0);for(phi0=0;phi0<m;++phi0,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[phi0],lambda1=longitude(point1);cosPhi1=point1[1]/
2+_math.quarterPi;var sinPhi1=(0,_math.sin)(cosPhi1),cosPhi1=(0,_math.cos)(cosPhi1),delta=lambda1-lambda0,sign=0<=delta?1:-1,absDelta=sign*delta,antimeridian=absDelta>_math.pi;sinPhi0*=sinPhi1;sum.add((0,_math.atan2)(sinPhi0*sign*(0,_math.sin)(absDelta),cosPhi0*cosPhi1+sinPhi0*(0,_math.cos)(absDelta)));angle+=antimeridian?delta+sign*_math.tau:delta;antimeridian^lambda0>=lambda^lambda1>=lambda&&(point0=(0,_cartesian.cartesianCross)((0,_cartesian.cartesian)(point0),(0,_cartesian.cartesian)(point1)),
(0,_cartesian.cartesianNormalizeInPlace)(point0),lambda0=(0,_cartesian.cartesianCross)(normal,point0),(0,_cartesian.cartesianNormalizeInPlace)(lambda0),lambda0=(antimeridian^0<=delta?-1:1)*(0,_math.asin)(lambda0[2]),point>lambda0||point===lambda0&&(point0[0]||point0[1]))&&(winding+=antimeridian^0<=delta?1:-1)}}return(angle<-_math.epsilon||angle<_math.epsilon&&sum<-_math.epsilon2)^winding&1};var _d3Array=require("module$node_modules$d3_array$src$index"),_cartesian=require("module$node_modules$d3_geo$src$cartesian"),
_math=require("module$node_modules$d3_geo$src$math")}
//# sourceMappingURL=module$node_modules$d3_geo$src$polygonContains.js.map
