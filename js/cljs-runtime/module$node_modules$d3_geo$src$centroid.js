shadow$provide.module$node_modules$d3_geo$src$centroid=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function centroidPoint(lambda,phi){lambda*=_math.radians;phi*=_math.radians;var cosPhi=(0,_math.cos)(phi);centroidPointCartesian(cosPhi*(0,_math.cos)(lambda),cosPhi*(0,_math.sin)(lambda),(0,_math.sin)(phi))}function centroidPointCartesian(x,y,z){++W0;X0+=(x-X0)/W0;Y0+=(y-Y0)/W0;Z0+=(z-Z0)/W0}function centroidLineStart(){centroidStream.point=
centroidLinePointFirst}function centroidLinePointFirst(lambda,phi){lambda*=_math.radians;phi*=_math.radians;var cosPhi=(0,_math.cos)(phi);x0=cosPhi*(0,_math.cos)(lambda);y0=cosPhi*(0,_math.sin)(lambda);z0=(0,_math.sin)(phi);centroidStream.point=centroidLinePoint;centroidPointCartesian(x0,y0,z0)}function centroidLinePoint(lambda,phi){lambda*=_math.radians;phi*=_math.radians;var cosPhi=(0,_math.cos)(phi),x=cosPhi*(0,_math.cos)(lambda);lambda=cosPhi*(0,_math.sin)(lambda);phi=(0,_math.sin)(phi);var w=
(0,_math.atan2)((0,_math.sqrt)((w=y0*phi-z0*lambda)*w+(w=z0*x-x0*phi)*w+(w=x0*lambda-y0*x)*w),x0*x+y0*lambda+z0*phi);W1+=w;X1+=w*(x0+(x0=x));Y1+=w*(y0+(y0=lambda));Z1+=w*(z0+(z0=phi));centroidPointCartesian(x0,y0,z0)}function centroidLineEnd(){centroidStream.point=centroidPoint}function centroidRingStart(){centroidStream.point=centroidRingPointFirst}function centroidRingEnd(){centroidRingPoint(lambda00,phi00);centroidStream.point=centroidPoint}function centroidRingPointFirst(lambda,phi){lambda00=
lambda;phi00=phi;lambda*=_math.radians;phi*=_math.radians;centroidStream.point=centroidRingPoint;var cosPhi=(0,_math.cos)(phi);x0=cosPhi*(0,_math.cos)(lambda);y0=cosPhi*(0,_math.sin)(lambda);z0=(0,_math.sin)(phi);centroidPointCartesian(x0,y0,z0)}function centroidRingPoint(lambda,phi){lambda*=_math.radians;phi*=_math.radians;var cosPhi=(0,_math.cos)(phi),x=cosPhi*(0,_math.cos)(lambda);lambda=cosPhi*(0,_math.sin)(lambda);phi=(0,_math.sin)(phi);cosPhi=y0*phi-z0*lambda;var cy=z0*x-x0*phi,cz=x0*lambda-
y0*x,m=(0,_math.hypot)(cosPhi,cy,cz),w=(0,_math.asin)(m);m=m&&-w/m;X2.add(m*cosPhi);Y2.add(m*cy);Z2.add(m*cz);W1+=w;X1+=w*(x0+(x0=x));Y1+=w*(y0+(y0=lambda));Z1+=w*(z0+(z0=phi));centroidPointCartesian(x0,y0,z0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(object){W0=W1=X0=Y0=Z0=X1=Y1=Z1=0;X2=new _d3Array.Adder;Y2=new _d3Array.Adder;Z2=new _d3Array.Adder;(0,_stream.default)(object,centroidStream);object=+X2;var y=+Y2,z=+Z2,m=(0,_math.hypot)(object,y,z);return m<_math.epsilon2&&
(object=X1,y=Y1,z=Z1,W1<_math.epsilon&&(object=X0,y=Y0,z=Z0),m=(0,_math.hypot)(object,y,z),m<_math.epsilon2)?[NaN,NaN]:[(0,_math.atan2)(y,object)*_math.degrees,(0,_math.asin)(z/m)*_math.degrees]};var _d3Array=require("module$node_modules$d3_array$src$index"),_math=require("module$node_modules$d3_geo$src$math");global=_interopRequireDefault(require("module$node_modules$d3_geo$src$noop"));var _stream=_interopRequireDefault(require("module$node_modules$d3_geo$src$stream")),W0,W1,X0,Y0,Z0,X1,Y1,Z1,X2,
Y2,Z2,lambda00,phi00,x0,y0,z0,centroidStream={sphere:global.default,point:centroidPoint,lineStart:centroidLineStart,lineEnd:centroidLineEnd,polygonStart:function(){centroidStream.lineStart=centroidRingStart;centroidStream.lineEnd=centroidRingEnd},polygonEnd:function(){centroidStream.lineStart=centroidLineStart;centroidStream.lineEnd=centroidLineEnd}}}
//# sourceMappingURL=module$node_modules$d3_geo$src$centroid.js.map
