shadow$provide.module$node_modules$d3_geo$src$path$string=function(global,require,module,exports){function append(strings){let i=1;this._+=strings[0];for(const j=strings.length;i<j;++i)this._+=arguments[i]+strings[i]}function appendRound(digits){const d=Math.floor(digits);if(!(0<=d))throw new RangeError(`invalid digits: ${digits}`);if(15<d)return append;if(d!==cacheDigits){const k=10**d;cacheDigits=d;cacheAppend=function(strings){let i=1;this._+=strings[0];for(const j=strings.length;i<j;++i)this._+=
Math.round(arguments[i]*k)/k+strings[i]}}return cacheAppend}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;let cacheDigits,cacheAppend,cacheRadius,cacheCircle;class PathString{constructor(digits){this._append=null==digits?append:appendRound(digits);this._radius=4.5;this._=""}pointRadius(_){this._radius=+_;return this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){0===this._line&&(this._+="Z");this._point=NaN}point(x,y){switch(this._point){case 0:this._append`M${x},${y}`;
this._point=1;break;case 1:this._append`L${x},${y}`;break;default:this._append`M${x},${y}`;if(this._radius!==cacheRadius||this._append!==cacheAppend)x=this._radius,y=this._,this._="",this._append`m0,${x}a${x},${x} 0 1,1 0,${-2*x}a${x},${x} 0 1,1 0,${2*x}z`,cacheRadius=x,cacheAppend=this._append,cacheCircle=this._,this._=y;this._+=cacheCircle}}result(){const result=this._;this._="";return result.length?result:null}}exports.default=PathString}
//# sourceMappingURL=module$node_modules$d3_geo$src$path$string.js.map
