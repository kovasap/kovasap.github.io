shadow$provide.module$node_modules$d3_geo$src$clip$circle=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(radius){function visible(lambda,phi){return(0,_math.cos)(lambda)*(0,_math.cos)(phi)>cr}function intersect(a,b,two){var pa=(0,_cartesian.cartesian)(a),pb=(0,_cartesian.cartesian)(b),n1=[1,0,0];pb=(0,_cartesian.cartesianCross)(pa,pb);var n2n2=
(0,_cartesian.cartesianDot)(pb,pb);pa=pb[0];var determinant=n2n2-pa*pa;if(!determinant)return!two&&a;n2n2=cr*n2n2/determinant;determinant=-cr*pa/determinant;pa=(0,_cartesian.cartesianCross)(n1,pb);n1=(0,_cartesian.cartesianScale)(n1,n2n2);pb=(0,_cartesian.cartesianScale)(pb,determinant);(0,_cartesian.cartesianAddInPlace)(n1,pb);pb=(0,_cartesian.cartesianDot)(n1,pa);n2n2=(0,_cartesian.cartesianDot)(pa,pa);determinant=pb*pb-n2n2*((0,_cartesian.cartesianDot)(n1,n1)-1);if(!(0>determinant)){var t=(0,_math.sqrt)(determinant);
determinant=(0,_cartesian.cartesianScale)(pa,(-pb-t)/n2n2);(0,_cartesian.cartesianAddInPlace)(determinant,n1);determinant=(0,_cartesian.spherical)(determinant);if(!two)return determinant;two=a[0];var lambda1=b[0];a=a[1];b=b[1];if(lambda1<two){var z=two;two=lambda1;lambda1=z}var delta=lambda1-two,polar=(0,_math.abs)(delta-_math.pi)<_math.epsilon,meridian=polar||delta<_math.epsilon;!polar&&b<a&&(z=a,a=b,b=z);if(meridian?polar?0<a+b^determinant[1]<((0,_math.abs)(determinant[0]-two)<_math.epsilon?a:b):
a<=determinant[1]&&determinant[1]<=b:delta>_math.pi^(two<=determinant[0]&&determinant[0]<=lambda1))return b=(0,_cartesian.cartesianScale)(pa,(-pb+t)/n2n2),(0,_cartesian.cartesianAddInPlace)(b,n1),[determinant,(0,_cartesian.spherical)(b)]}}function code$jscomp$0(lambda,phi){var r=smallRadius?radius:_math.pi-radius,code=0;lambda<-r?code|=1:lambda>r&&(code|=2);phi<-r?code|=4:phi>r&&(code|=8);return code}var cr=(0,_math.cos)(radius),delta$jscomp$0=6*_math.radians,smallRadius=0<cr,notHemisphere=(0,_math.abs)(cr)>
_math.epsilon;return(0,_index.default)(visible,function(stream){var point0,c0,v0,v00,clean;return{lineStart:function(){v00=v0=!1;clean=1},point:function(lambda,phi){var point1=[lambda,phi],v=visible(lambda,phi);phi=smallRadius?v?0:code$jscomp$0(lambda,phi):v?code$jscomp$0(lambda+(0>lambda?_math.pi:-_math.pi),phi):0;!point0&&(v00=v0=v)&&stream.lineStart();v!==v0&&(lambda=intersect(point0,point1),!lambda||(0,_pointEqual.default)(point0,lambda)||(0,_pointEqual.default)(point1,lambda))&&(point1[2]=1);
if(v!==v0)clean=0,v?(stream.lineStart(),lambda=intersect(point1,point0),stream.point(lambda[0],lambda[1])):(lambda=intersect(point0,point1),stream.point(lambda[0],lambda[1],2),stream.lineEnd()),point0=lambda;else if(notHemisphere&&point0&&smallRadius^v){var t;phi&c0||!(t=intersect(point1,point0,!0))||(clean=0,smallRadius?(stream.lineStart(),stream.point(t[0][0],t[0][1]),stream.point(t[1][0],t[1][1]),stream.lineEnd()):(stream.point(t[1][0],t[1][1]),stream.lineEnd(),stream.lineStart(),stream.point(t[0][0],
t[0][1],3)))}!v||point0&&(0,_pointEqual.default)(point0,point1)||stream.point(point1[0],point1[1]);point0=point1;v0=v;c0=phi},lineEnd:function(){v0&&stream.lineEnd();point0=null},clean:function(){return clean|(v00&&v0)<<1}}},function(from,to,direction,stream){(0,_circle.circleStream)(stream,radius,delta$jscomp$0,direction,from,to)},smallRadius?[0,-radius]:[-_math.pi,radius-_math.pi])};var _cartesian=require("module$node_modules$d3_geo$src$cartesian"),_circle=require("module$node_modules$d3_geo$src$circle"),
_math=require("module$node_modules$d3_geo$src$math"),_pointEqual=_interopRequireDefault(require("module$node_modules$d3_geo$src$pointEqual")),_index=_interopRequireDefault(require("module$node_modules$d3_geo$src$clip$index"))}
//# sourceMappingURL=module$node_modules$d3_geo$src$clip$circle.js.map
