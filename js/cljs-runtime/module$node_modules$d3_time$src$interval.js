shadow$provide.module$node_modules$d3_time$src$interval=function(global,require,module,exports){function timeInterval(floori,offseti,count,field){function interval(date){return floori(date=0===arguments.length?new Date:new Date(+date)),date}interval.floor=date=>(floori(date=new Date(+date)),date);interval.ceil=date=>(floori(date=new Date(date-1)),offseti(date,1),floori(date),date);interval.round=date=>{const d0=interval(date),d1=interval.ceil(date);return date-d0<d1-date?d0:d1};interval.offset=(date,
step)=>(offseti(date=new Date(+date),null==step?1:Math.floor(step)),date);interval.range=(start,stop,step)=>{const range=[];start=interval.ceil(start);step=null==step?1:Math.floor(step);if(!(start<stop&&0<step))return range;let previous;do range.push(previous=new Date(+start)),offseti(start,step),floori(start);while(previous<start&&start<stop);return range};interval.filter=test=>timeInterval(date=>{if(date>=date)for(;floori(date),!test(date);)date.setTime(date-1)},(date,step)=>{if(date>=date)if(0>
step)for(;0>=++step;)for(;offseti(date,-1),!test(date););else for(;0<=--step;)for(;offseti(date,1),!test(date););});count&&(interval.count=(start,end)=>{t0.setTime(+start);t1.setTime(+end);floori(t0);floori(t1);return Math.floor(count(t0,t1))},interval.every=step=>{step=Math.floor(step);return isFinite(step)&&0<step?1<step?interval.filter(field?d=>0===field(d)%step:d=>0===interval.count(0,d)%step):interval:null});return interval}Object.defineProperty(exports,"__esModule",{value:!0});exports.timeInterval=
timeInterval;const t0=new Date,t1=new Date}
//# sourceMappingURL=module$node_modules$d3_time$src$interval.js.map
