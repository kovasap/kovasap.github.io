goog.provide('website_helpers.test_data');
website_helpers.test_data.notes = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"path-categories","path-categories",1155646784),new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.Keyword(null,"markdown","markdown",1227225089),new cljs.core.Keyword(null,"private","private",-558947994),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"mode","mode",654403691),new cljs.core.Keyword(null,"backlinks","backlinks",1645357998),new cljs.core.Keyword(null,"size","size",1098693007),new cljs.core.Keyword(null,"title","title",636505583),new cljs.core.Keyword(null,"modification-unix-timestamps","modification-unix-timestamps",653432816),new cljs.core.Keyword(null,"categories","categories",178386610),new cljs.core.Keyword(null,"modtime","modtime",-1305685516),new cljs.core.Keyword(null,"dir?","dir?",121338325),new cljs.core.Keyword(null,"links","links",-654507394)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Visual Art",null], null), null),"content/docs/visual-art/generative-art.md","---\nbacklinks-set: \ncategories-set: #{\"Visual Art\"}\ntesting: frontmatter\n---\n\n# Generative Art\n\n## Inspiration\n\nI was originally inspired to work on generative art after viewing this blog:\nhttps://beesandbombs.tumblr.com/. I find it fun to try to imagine how each of\nthese gifs were generated - each one is like a visual puzzle.\n\nSee more inspiration [here]({{< relref \"/docs/visual-art/inspiration-and-resources.md\" >}}).\n\n## My Art\n\nClick on each piece to see it in motion!\n\n[![double helix](/docs/visual-art/double-helix.png)](/docs/visual-art/double-helix-unindexed)\n\n<figure>\n  <a href=\"/docs/visual-art/perlin-flow-unindexed\">\n    <img src=\"/docs/visual-art/perlin-flow.png\" alt=\"perlin flow\"/>\n  </a>\n  <figcaption><small>Note this was done from a tutorial - it's not an original!</small></figcaption>\n</figure>\n\nSource code for the above gifs can be found at\nhttps://github.com/kovasap/generative-art.\n\n<a href=\"https://github.com/kovasap/geometrical_gifs/blob/master/encircle.gif\">\n  <img src=\"/docs/visual-art/encircle.png\" alt=\"encircle\" style=\"width:300px;\"/>\n</a>\n\nSource code for the above gif can be found at\nhttps://github.com/kovasap/geometrical_gifs.\n\nAn even older project can be found at\nhttps://github.com/kovasap/perspective_words. This project was made while doing\nmolecular simulation research, and arranges virtual atoms so that they spell\nout works when looked at from certain angles.\n\n## Ideas to Try\n\n### Sound\n\nAdd music/sound to BeesAndBombs-type visualizations like\n[ChaosDoodle](https://www.youtube.com/watch?v=vcBn04IyELc) videos.",false,"generative-art.md",(420),null,(1563),"Generative Art",new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1754281254),(1754278533),(1754257539),(1753934894),(1669743672),(1668204865),(1655753252),(1655753185),(1655657180),(1653846065),(1649286357),(1642463614),(1632246553),(1631990398),(1631653235)], null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["Visual Art",null,"Generative",null], null), null),(1754361489),false,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["/docs/visual-art/inspiration-and-resources.md"], null)]),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"path-categories","path-categories",1155646784),new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.Keyword(null,"markdown","markdown",1227225089),new cljs.core.Keyword(null,"private","private",-558947994),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"mode","mode",654403691),new cljs.core.Keyword(null,"backlinks","backlinks",1645357998),new cljs.core.Keyword(null,"size","size",1098693007),new cljs.core.Keyword(null,"title","title",636505583),new cljs.core.Keyword(null,"modification-unix-timestamps","modification-unix-timestamps",653432816),new cljs.core.Keyword(null,"categories","categories",178386610),new cljs.core.Keyword(null,"modtime","modtime",-1305685516),new cljs.core.Keyword(null,"dir?","dir?",121338325),new cljs.core.Keyword(null,"links","links",-654507394)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Visual Art",null], null), null),"content/docs/visual-art/inspiration-and-resources.md","---\nbacklinks-set: #{\"content/docs/visual-art/generative-art.md\"}\ncategories-set: #{\"Visual Art\"}\n---\n# Inspiration and Resources\n\nCool art and art tutorials that I've stumbled across.\n\n## Wallpapers\n\n - https://desktopography.net/\n - https://wallpapercave.com/pc-4k-macro-wallpapers\n\n## Tutorials\n\n - Awesome pixel art walkthroughs: https://www.slynyrd.com/blog\n\n## Tools and Art Generators\n\n - Map generators (designed for games):\n   - https://www.dungeonalchemist.com/\n   - https://dungeondraft.net/\n - https://github.com/mxgmn/WaveFunctionCollapse\n - https://github.com/mxgmn/MarkovJunior\n\n## Misc Projects\n\n - https://beesandbombs.tumblr.com/\n - https://oimo.io/works\n - https://emoji.supply/kitchen/\n - https://pokemon.alexonsager.net/\n\n## Natural Inspiration\n\n - https://images.wur.nl/digital/collection/coll13/search",false,"inspiration-and-resources.md",(420),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["content/docs/visual-art/generative-art.md",null], null), null),(824),"Inspiration And Resources",new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1754278533),(1753934894),(1712860286),(1668204865),(1659113492),(1659025169),(1655753252),(1655753185),(1655657180),(1654138836),(1653846065),(1652818831),(1649439956)], null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Visual Art",null], null), null),(1754361489),false,cljs.core.PersistentVector.EMPTY]),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"path-categories","path-categories",1155646784),new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.Keyword(null,"markdown","markdown",1227225089),new cljs.core.Keyword(null,"private","private",-558947994),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"mode","mode",654403691),new cljs.core.Keyword(null,"backlinks","backlinks",1645357998),new cljs.core.Keyword(null,"size","size",1098693007),new cljs.core.Keyword(null,"title","title",636505583),new cljs.core.Keyword(null,"modification-unix-timestamps","modification-unix-timestamps",653432816),new cljs.core.Keyword(null,"categories","categories",178386610),new cljs.core.Keyword(null,"modtime","modtime",-1305685516),new cljs.core.Keyword(null,"dir?","dir?",121338325),new cljs.core.Keyword(null,"links","links",-654507394)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Visual Art",null], null), null),"content/docs/visual-art/judging-art.md","---\nbacklinks-set: \ncategories-set: #{\"Visual Art\"}\n---\n# Judging Art\n\nHow can you tell what art is high quality and/or worth consuming?\n\n## Reviews\n\nGood, but can be biased by competing interests.\n\n\n## Meaning\n\nIt would be cool to ask many people to give a ranked list of the 50 most\nmeaningful experiences in their lives. From this, you could extract art entries\nand rank them by their occurrence, which would probably give a good list of\nwhat is worth experiencing yourself.\n\nhttps://www.pewforum.org/2018/11/20/where-americans-find-meaning-in-life/ is\nan interesting place to start here.",false,"judging-art.md",(420),null,(591),"Judging Art",new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1754278533),(1753934894),(1655753252),(1655753185),(1655657180),(1653846065),(1631653235)], null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["Visual Art",null], null), null),(1754361489),false,cljs.core.PersistentVector.EMPTY])], null);

//# sourceMappingURL=website_helpers.test_data.js.map
