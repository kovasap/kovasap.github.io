{"version":3,"sources":["website_helpers/common_components.cljs"],"mappings":"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","names":["website-helpers.common-components/sync-url-params!","vars","url","js/URL","js/window","seq__26978","cljs.core/seq","chunk__26979","count__26980","i__26981","vec__27006","cljs.core.nth","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__27018","cljs.core/first","cljs.core/next","var","value","website-helpers.common-components/dropdown-check-list","title","opened","reagent.core.atom","cljs.core/deref","cljs.core/reset!","cljs.core/not","cljs.core.into","iter__5523__auto__","s__27027","cljs.core/LazySeq","c__5521__auto__","size__5522__auto__","b__27029","cljs.core/chunk-buffer","i__27028","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__27026","cljs.core/cons","cljs.core/rest","cljs.core.sort","cljs.core/keys","cljs.core.get","_","cljs.core.swap_BANG_","cljs.core/assoc"],"sourcesContent":["(ns website-helpers.common-components\n  (:require\n    [website-helpers.schemas :refer [ReagentComponent]]\n    [reagent.core :as r]))\n\n(defn sync-url-params!\n  {:malli/schema [:=> [:cat [:map-of :string :boolean]] :nil]}\n  [vars]\n  (let [url (js/URL. (. js/window -location))]\n    (doseq [[var value] vars]\n      (if value\n        (.. url -searchParams (set var value))\n        (.. url -searchParams (delete var)))\n      (.. js/window -history (pushState nil \"\" (.toString url))))))\n\n(defn dropdown-check-list\n  {:malli/schema [:=> [:cat\n                       :any ; Actually an atom containing [:map-of :string :boolean]\n                       :string]\n                  ReagentComponent]}\n  [vars title]\n  (let [opened (r/atom false)]\n    (fn []\n      [:div {:id \"tag-list\"\n             :class [\"dropdown-check-list\" (if @opened \"visible\" nil)]\n             :style {:overflow \"auto\"\n                     :max-height \"200px\"}\n             :tabIndex \"100\"}\n       [:span {:class \"anchor\" :on-click #(reset! opened (not @opened))}\n        title]\n       (into [:ul {:class \"items\"}]\n             (for [var (sort (keys @vars))]\n               [:li {:key var}\n                [:input {:type \"checkbox\"\n                         :checked (if (get @vars var) \"checked\" \"\")\n                         :on-change (fn [_]\n                                      (swap! vars assoc var\n                                             (not (get @vars var)))\n                                      (sync-url-params! @vars))}]\n                var]))])))\n\n\n"]}