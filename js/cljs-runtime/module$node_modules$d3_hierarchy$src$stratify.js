shadow$provide.module$node_modules$d3_hierarchy$src$stratify=function(global,require,module,exports){function defaultId(d){return d.id}function defaultParentId(d){return d.parentId}function parentof(path){let i=path.length;if(2>i)return"";for(;1<--i&&!slash(path,i););return path.slice(0,i)}function slash(path,i){if("/"===path[i]){let k=0;for(;0<i&&"\\"===path[--i];)++k;if(0===(k&1))return!0}return!1}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(){function stratify(data){var nodes=
Array.from(data),currentId=id,currentParentId=parentId,n,nodeId,nodeByKey=new Map;if(null!=path){const I=nodes.map((d,i)=>{d=path(d,i,data);d=`${d}`;i=d.length;slash(d,i-1)&&!slash(d,i-2)&&(d=d.slice(0,-1));return"/"===d[0]?d:`/${d}`}),P=I.map(parentof);currentId=(new Set(I)).add("");for(node$jscomp$0 of P)currentId.has(node$jscomp$0)||(currentId.add(node$jscomp$0),I.push(node$jscomp$0),P.push(parentof(node$jscomp$0)),nodes.push(imputed));currentId=(_,i)=>I[i];currentParentId=(_,i)=>P[i]}var i$jscomp$0=
0;for(n=nodes.length;i$jscomp$0<n;++i$jscomp$0){var d$jscomp$0=nodes[i$jscomp$0];var node$jscomp$0=nodes[i$jscomp$0]=new _index.Node(d$jscomp$0);if(null!=(nodeId=currentId(d$jscomp$0,i$jscomp$0,data))&&(nodeId+="")){var nodeKey=node$jscomp$0.id=nodeId;nodeByKey.set(nodeKey,nodeByKey.has(nodeKey)?ambiguous:node$jscomp$0)}null!=(nodeId=currentParentId(d$jscomp$0,i$jscomp$0,data))&&(nodeId+="")&&(node$jscomp$0.parent=nodeId)}for(i$jscomp$0=0;i$jscomp$0<n;++i$jscomp$0)if(node$jscomp$0=nodes[i$jscomp$0],
nodeId=node$jscomp$0.parent){currentId=nodeByKey.get(nodeId);if(!currentId)throw Error("missing: "+nodeId);if(currentId===ambiguous)throw Error("ambiguous: "+nodeId);currentId.children?currentId.children.push(node$jscomp$0):currentId.children=[node$jscomp$0];node$jscomp$0.parent=currentId}else{if(root)throw Error("multiple roots");var root=node$jscomp$0}if(!root)throw Error("no root");if(null!=path){for(;root.data===imputed&&1===root.children.length;)root=root.children[0],--n;for(nodeId=nodes.length-
1;0<=nodeId;--nodeId){node$jscomp$0=nodes[nodeId];if(node$jscomp$0.data!==imputed)break;node$jscomp$0.data=null}}root.parent=preroot;root.eachBefore(function(node){node.depth=node.parent.depth+1;--n}).eachBefore(_index.computeHeight);root.parent=null;if(0<n)throw Error("cycle");return root}var id=defaultId,parentId=defaultParentId,path;stratify.id=function(x){return arguments.length?(id=(0,_accessors.optional)(x),stratify):id};stratify.parentId=function(x){return arguments.length?(parentId=(0,_accessors.optional)(x),
stratify):parentId};stratify.path=function(x){return arguments.length?(path=(0,_accessors.optional)(x),stratify):path};return stratify};var _accessors=require("module$node_modules$d3_hierarchy$src$accessors"),_index=require("module$node_modules$d3_hierarchy$src$hierarchy$index"),preroot={depth:-1},ambiguous={},imputed={}}
//# sourceMappingURL=module$node_modules$d3_hierarchy$src$stratify.js.map
