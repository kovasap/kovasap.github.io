{
"version":3,
"file":"module$node_modules$d3_array$src$blur.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/d3-array/src/blur.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$src$blur\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.blur = blur;\nexports.blurImage = exports.blur2 = void 0;\n\nfunction blur(values, r) {\n  if (!((r = +r) >= 0)) throw new RangeError(\"invalid r\");\n  let length = values.length;\n  if (!((length = Math.floor(length)) >= 0)) throw new RangeError(\"invalid length\");\n  if (!length || !r) return values;\n  const blur = blurf(r);\n  const temp = values.slice();\n  blur(values, temp, 0, length, 1);\n  blur(temp, values, 0, length, 1);\n  blur(values, temp, 0, length, 1);\n  return values;\n}\n\nconst blur2 = Blur2(blurf);\nexports.blur2 = blur2;\nconst blurImage = Blur2(blurfImage);\nexports.blurImage = blurImage;\n\nfunction Blur2(blur) {\n  return function (data, rx, ry = rx) {\n    if (!((rx = +rx) >= 0)) throw new RangeError(\"invalid rx\");\n    if (!((ry = +ry) >= 0)) throw new RangeError(\"invalid ry\");\n    let {\n      data: values,\n      width,\n      height\n    } = data;\n    if (!((width = Math.floor(width)) >= 0)) throw new RangeError(\"invalid width\");\n    if (!((height = Math.floor(height !== undefined ? height : values.length / width)) >= 0)) throw new RangeError(\"invalid height\");\n    if (!width || !height || !rx && !ry) return data;\n    const blurx = rx && blur(rx);\n    const blury = ry && blur(ry);\n    const temp = values.slice();\n\n    if (blurx && blury) {\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    } else if (blurx) {\n      blurh(blurx, values, temp, width, height);\n      blurh(blurx, temp, values, width, height);\n      blurh(blurx, values, temp, width, height);\n    } else if (blury) {\n      blurv(blury, values, temp, width, height);\n      blurv(blury, temp, values, width, height);\n      blurv(blury, values, temp, width, height);\n    }\n\n    return data;\n  };\n}\n\nfunction blurh(blur, T, S, w, h) {\n  for (let y = 0, n = w * h; y < n;) {\n    blur(T, S, y, y += w, 1);\n  }\n}\n\nfunction blurv(blur, T, S, w, h) {\n  for (let x = 0, n = w * h; x < w; ++x) {\n    blur(T, S, x, x + n, w);\n  }\n}\n\nfunction blurfImage(radius) {\n  const blur = blurf(radius);\n  return (T, S, start, stop, step) => {\n    start <<= 2, stop <<= 2, step <<= 2;\n    blur(T, S, start + 0, stop + 0, step);\n    blur(T, S, start + 1, stop + 1, step);\n    blur(T, S, start + 2, stop + 2, step);\n    blur(T, S, start + 3, stop + 3, step);\n  };\n} // Given a target array T, a source array S, sets each value T[i] to the average\n// of {S[i - r], \u2026, S[i], \u2026, S[i + r]}, where r = \u230aradius\u230b, start <= i < stop,\n// for each i, i + step, i + 2 * step, etc., and where S[j] is clamped between\n// S[start] (inclusive) and S[stop] (exclusive). If the given radius is not an\n// integer, S[i - r - 1] and S[i + r + 1] are added to the sum, each weighted\n// according to r - \u230aradius\u230b.\n\n\nfunction blurf(radius) {\n  const radius0 = Math.floor(radius);\n  if (radius0 === radius) return bluri(radius);\n  const t = radius - radius0;\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => {\n    // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n\n    let sum = radius0 * S[start];\n    const s0 = step * radius0;\n    const s1 = s0 + step;\n\n    for (let i = start, j = start + s0; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s0)];\n      T[i] = (sum + t * (S[Math.max(start, i - s1)] + S[Math.min(stop, i + s1)])) / w;\n      sum -= S[Math.max(start, i - s0)];\n    }\n  };\n} // Like blurf, but optimized for integer radius.\n\n\nfunction bluri(radius) {\n  const w = 2 * radius + 1;\n  return (T, S, start, stop, step) => {\n    // stop must be aligned!\n    if (!((stop -= step) >= start)) return; // inclusive stop\n\n    let sum = radius * S[start];\n    const s = step * radius;\n\n    for (let i = start, j = start + s; i < j; i += step) {\n      sum += S[Math.min(stop, i)];\n    }\n\n    for (let i = start, j = stop; i <= j; i += step) {\n      sum += S[Math.min(stop, i + s)];\n      T[i] = sum / w;\n      sum -= S[Math.max(start, i - s)];\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Blur2","blur","data","rx","ry","RangeError","values","width","height","Math","floor","undefined","length","blurx","blury","temp","slice","blurh","blurv","T","S","w","h","y","n","x","blurf","radius","radius0","bluri","t","start","stop","step","sum","s0","s1","i","j","min","max","s","Object","defineProperty","value","r","blurImage","blur2","blurfImage"]
}
