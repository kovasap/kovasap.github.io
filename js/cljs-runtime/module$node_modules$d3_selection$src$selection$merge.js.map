{
"version":3,
"file":"module$node_modules$d3_selection$src$selection$merge.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAIAC,QAAiB,CAACC,OAAD,CAAU,CACzB,IAAIC,UAAYD,OAAQC,CAAAA,SAAR,CAAoBD,OAAQC,CAAAA,SAAR,EAApB,CAA0CD,OAEjDE,QAAAA,CAAU,IAAKC,CAAAA,OAASC,UAAAA,CAAUH,SAAUE,CAAAA,OAArD,KAHyB,IAGqCE,GAAKH,OAAQI,CAAAA,MAHlD,CAG+EC,EAAIC,IAAKC,CAAAA,GAAL,CAASJ,EAAT,CAApBD,SAAQE,CAAAA,MAAY,CAHnF,CAGqGI,OAAaC,KAAJ,CAAUN,EAAV,CAH9G,CAG6HO,EAAI,CAA1J,CAA6JA,CAA7J,CAAiKL,CAAjK,CAAoK,EAAEK,CAAtK,CACE,IADuK,IAC9JC,OAASX,OAAA,CAAQU,CAAR,CADqJ,CACzIE,OAASV,SAAA,CAAQQ,CAAR,CADgI,CACpHG,EAAIF,MAAOP,CAAAA,MADyG,CACjGU,MAAQN,MAAA,CAAOE,CAAP,CAARI,CAAwBL,KAAJ,CAAUI,CAAV,CAD6E,CAC/DE,IAD+D,CACzDC,EAAI,CAAlH,CAAqHA,CAArH,CAAyHH,CAAzH,CAA4H,EAAEG,CAA9H,CACE,GAAID,IAAJ;AAAWJ,MAAA,CAAOK,CAAP,CAAX,EAAwBJ,MAAA,CAAOI,CAAP,CAAxB,CACEF,KAAA,CAAME,CAAN,CAAA,CAAWD,IAKjB,KAAA,CAAOL,CAAP,CAAWP,EAAX,CAAe,EAAEO,CAAjB,CACEF,MAAA,CAAOE,CAAP,CAAA,CAAYV,OAAA,CAAQU,CAAR,CAGd,OAAO,KAAIO,MAAOC,CAAAA,SAAX,CAAqBV,MAArB,CAA6B,IAAKW,CAAAA,QAAlC,CAfkB,CAF3B,KAAIF,OAAS3B,OAAA,CAAQ,sDAAR,CARoG;",
"sources":["node_modules/d3-selection/src/selection/merge.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_selection$src$selection$merge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _index = require(\"./index.js\");\n\nfunction _default(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new _index.Selection(merges, this._parents);\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_default","context","selection","groups0","_groups","groups1","m0","length","m","Math","min","merges","Array","j","group0","group1","n","merge","node","i","_index","Selection","_parents"]
}
