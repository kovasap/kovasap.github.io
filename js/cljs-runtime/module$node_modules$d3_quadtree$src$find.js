shadow$provide.module$node_modules$d3_quadtree$src$find=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(x,y,radius){var x0=this._x0,y0=this._y0,x1,y1,x2,y2,x3=this._x1,y3=this._y1,quads=[],node=this._root,q;node&&quads.push(new _quad.default(node,x0,y0,x3,y3));null==radius?radius=Infinity:(x0=x-radius,y0=y-radius,x3=x+radius,y3=y+radius,radius*=radius);for(;q=quads.pop();)if(!(!(node=q.node)||(x1=q.x0)>x3||(y1=q.y0)>y3||(x2=q.x1)<
x0||(y2=q.y1)<y0))if(node.length){q=(x1+x2)/2;var ym=(y1+y2)/2;quads.push(new _quad.default(node[3],q,ym,x2,y2),new _quad.default(node[2],x1,ym,q,y2),new _quad.default(node[1],q,y1,x2,ym),new _quad.default(node[0],x1,y1,q,ym));if(node=(y>=ym)<<1|x>=q)q=quads[quads.length-1],quads[quads.length-1]=quads[quads.length-1-node],quads[quads.length-1-node]=q}else if(q=x-+this._x.call(null,node.data),ym=y-+this._y.call(null,node.data),q=q*q+ym*ym,q<radius){var data=Math.sqrt(radius=q);x0=x-data;y0=y-data;
x3=x+data;y3=y+data;data=node.data}return data};var _quad=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$d3_quadtree$src$quad"))}
//# sourceMappingURL=module$node_modules$d3_quadtree$src$find.js.map
