shadow$provide.module$node_modules$d3_shape$src$curve$cardinal=function(global,require,module,exports){function point(that,x,y){that._context.bezierCurveTo(that._x1+that._k*(that._x2-that._x0),that._y1+that._k*(that._y2-that._y0),that._x2+that._k*(that._x1-x),that._y2+that._k*(that._y1-y),that._x2,that._y2)}function Cardinal(context,tension){this._context=context;this._k=(1-tension)/6}Object.defineProperty(exports,"__esModule",{value:!0});exports.point=point;exports.Cardinal=Cardinal;exports.default=
void 0;Cardinal.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN;this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:point(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath();this._line=1-this._line},point:function(x,y){x=+x;y=+y;switch(this._point){case 0:this._point=1;this._line?this._context.lineTo(x,
y):this._context.moveTo(x,y);break;case 1:this._point=2;this._x1=x;this._y1=y;break;case 2:this._point=3;default:point(this,x,y)}this._x0=this._x1;this._x1=this._x2;this._x2=x;this._y0=this._y1;this._y1=this._y2;this._y2=y}};global=function custom(tension$jscomp$0){function cardinal(context){return new Cardinal(context,tension$jscomp$0)}cardinal.tension=function(tension){return custom(+tension)};return cardinal}(0);exports.default=global}
//# sourceMappingURL=module$node_modules$d3_shape$src$curve$cardinal.js.map
