shadow$provide.module$node_modules$d3_geo$src$rotation=function(global,require,module,exports){function rotationIdentity(lambda,phi){return[(0,_math.abs)(lambda)>_math.pi?lambda+Math.round(-lambda/_math.tau)*_math.tau:lambda,phi]}function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=_math.tau)?deltaPhi||deltaGamma?(0,_compose.default)(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda):deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,
deltaGamma):rotationIdentity}function forwardRotationLambda(deltaLambda){return function(lambda,phi){return lambda+=deltaLambda,[lambda>_math.pi?lambda-_math.tau:lambda<-_math.pi?lambda+_math.tau:lambda,phi]}}function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);rotation.invert=forwardRotationLambda(-deltaLambda);return rotation}function rotationPhiGamma(deltaPhi,deltaGamma){function rotation(lambda,phi){var cosPhi=(0,_math.cos)(phi),x=(0,_math.cos)(lambda)*cosPhi;lambda=
(0,_math.sin)(lambda)*cosPhi;phi=(0,_math.sin)(phi);cosPhi=phi*cosDeltaPhi+x*sinDeltaPhi;return[(0,_math.atan2)(lambda*cosDeltaGamma-cosPhi*sinDeltaGamma,x*cosDeltaPhi-phi*sinDeltaPhi),(0,_math.asin)(cosPhi*cosDeltaGamma+lambda*sinDeltaGamma)]}var cosDeltaPhi=(0,_math.cos)(deltaPhi),sinDeltaPhi=(0,_math.sin)(deltaPhi),cosDeltaGamma=(0,_math.cos)(deltaGamma),sinDeltaGamma=(0,_math.sin)(deltaGamma);rotation.invert=function(lambda,phi){var cosPhi=(0,_math.cos)(phi),x=(0,_math.cos)(lambda)*cosPhi;lambda=
(0,_math.sin)(lambda)*cosPhi;phi=(0,_math.sin)(phi);cosPhi=phi*cosDeltaGamma-lambda*sinDeltaGamma;return[(0,_math.atan2)(lambda*cosDeltaGamma+phi*sinDeltaGamma,x*cosDeltaPhi+cosPhi*sinDeltaPhi),(0,_math.asin)(cosPhi*cosDeltaPhi-x*sinDeltaPhi)]};return rotation}Object.defineProperty(exports,"__esModule",{value:!0});exports.rotateRadians=rotateRadians;exports.default=function(rotate){function forward(coordinates){coordinates=rotate(coordinates[0]*_math.radians,coordinates[1]*_math.radians);return coordinates[0]*=
_math.degrees,coordinates[1]*=_math.degrees,coordinates}rotate=rotateRadians(rotate[0]*_math.radians,rotate[1]*_math.radians,2<rotate.length?rotate[2]*_math.radians:0);forward.invert=function(coordinates){coordinates=rotate.invert(coordinates[0]*_math.radians,coordinates[1]*_math.radians);return coordinates[0]*=_math.degrees,coordinates[1]*=_math.degrees,coordinates};return forward};var _compose=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(require("module$node_modules$d3_geo$src$compose")),
_math=require("module$node_modules$d3_geo$src$math");rotationIdentity.invert=rotationIdentity}
//# sourceMappingURL=module$node_modules$d3_geo$src$rotation.js.map
