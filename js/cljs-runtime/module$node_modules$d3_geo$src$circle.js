shadow$provide.module$node_modules$d3_geo$src$circle=function(global,require,module,exports){function circleStream(stream,radius,delta,direction,t0,t1){if(delta){var cosRadius=(0,_math.cos)(radius),sinRadius=(0,_math.sin)(radius);delta*=direction;if(null==t0)t0=radius+direction*_math.tau,t1=radius-delta/2;else if(t0=circleRadius(cosRadius,t0),t1=circleRadius(cosRadius,t1),0<direction?t0<t1:t0>t1)t0+=direction*_math.tau;for(;0<direction?t0>t1:t0<t1;t0-=delta)radius=(0,_cartesian.spherical)([cosRadius,
-sinRadius*(0,_math.cos)(t0),-sinRadius*(0,_math.sin)(t0)]),stream.point(radius[0],radius[1])}}function circleRadius(cosRadius,point){point=(0,_cartesian.cartesian)(point);point[0]-=cosRadius;(0,_cartesian.cartesianNormalizeInPlace)(point);cosRadius=(0,_math.acos)(-point[1]);return((0>-point[2]?-cosRadius:cosRadius)+_math.tau-_math.epsilon)%_math.tau}Object.defineProperty(exports,"__esModule",{value:!0});exports.circleStream=circleStream;exports.default=function(){function circle(){var c=center.apply(this,
arguments),r=radius.apply(this,arguments)*_math.radians,p=precision.apply(this,arguments)*_math.radians;ring=[];rotate=(0,_rotation.rotateRadians)(-c[0]*_math.radians,-c[1]*_math.radians,0).invert;circleStream(stream,r,p,1);c={type:"Polygon",coordinates:[ring]};ring=rotate=null;return c}var center=(0,_constant.default)([0,0]),radius=(0,_constant.default)(90),precision=(0,_constant.default)(6),ring,rotate,stream={point:function(x,y){ring.push(x=rotate(x,y));x[0]*=_math.degrees;x[1]*=_math.degrees}};
circle.center=function(_){return arguments.length?(center="function"===typeof _?_:(0,_constant.default)([+_[0],+_[1]]),circle):center};circle.radius=function(_){return arguments.length?(radius="function"===typeof _?_:(0,_constant.default)(+_),circle):radius};circle.precision=function(_){return arguments.length?(precision="function"===typeof _?_:(0,_constant.default)(+_),circle):precision};return circle};var _cartesian=require("module$node_modules$d3_geo$src$cartesian"),_constant=function(obj){return obj&&
obj.__esModule?obj:{default:obj}}(require("module$node_modules$d3_geo$src$constant")),_math=require("module$node_modules$d3_geo$src$math"),_rotation=require("module$node_modules$d3_geo$src$rotation")}
//# sourceMappingURL=module$node_modules$d3_geo$src$circle.js.map
